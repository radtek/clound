{"remainingRequest":"G:\\intellij work\\micro-ui\\node_modules\\babel-loader\\lib\\index.js!G:\\intellij work\\micro-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!G:\\intellij work\\micro-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\intellij work\\micro-ui\\src\\page\\login\\userlogin.vue?vue&type=script&lang=js&","dependencies":[{"path":"G:\\intellij work\\micro-ui\\src\\page\\login\\userlogin.vue","mtime":1554773148474},{"path":"G:\\intellij work\\micro-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\intellij work\\micro-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"G:\\intellij work\\micro-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\intellij work\\micro-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.index-of\";\nimport _objectSpread from \"G:\\\\intellij work\\\\micro-ui\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { randomLenNum } from \"@/util/util\";\nimport { mapGetters } from \"vuex\";\nvar userAgent;\nexport default {\n  name: \"userlogin\",\n  data: function data() {\n    return {\n      socialForm: {\n        code: '',\n        state: ''\n      },\n      pkiForm: {\n        code: '',\n        state: ''\n      },\n      loginForm: {\n        username: \"admin\",\n        password: \"123456\",\n        code: \"\",\n        redomStr: \"\"\n      },\n      JITDSignOcx: [],\n      checked: false,\n      code: {\n        src: \"/code\",\n        value: \"\",\n        len: 4,\n        type: \"image\"\n      },\n      loginRules: {\n        username: [{\n          required: true,\n          message: \"请输入用户名\",\n          trigger: \"blur\"\n        }],\n        password: [{\n          required: true,\n          message: \"请输入密码\",\n          trigger: \"blur\"\n        }, {\n          min: 6,\n          message: \"密码长度最少为6位\",\n          trigger: \"blur\"\n        }]\n        /*,\n        code: [\n        { required: true, message: \"请输入验证码\", trigger: \"blur\" },\n        { min: 4, max: 4, message: \"验证码长度为4位\", trigger: \"blur\" }\n        ]*/\n\n      },\n      passwordType: \"password\"\n    };\n  },\n  watch: {\n    $route: function $route() {\n      var params = this.$route.query;\n      this.socialForm.state = params.state;\n      this.socialForm.code = params.code;\n\n      if (!validatenull(this.socialForm.state)) {\n        var loading = this.$loading({\n          lock: true,\n          text: \"\\u767B\\u5F55\\u4E2D,\\u8BF7\\u7A0D\\u540E\\u3002\\u3002\\u3002\",\n          spinner: 'el-icon-loading'\n        });\n        setTimeout(function () {\n          loading.close();\n        }, 2000);\n        this.handleSocialLogin();\n      }\n    }\n  },\n  created: function created() {\n    this.refreshCode();\n    this.choseBrowser();\n  },\n  mounted: function mounted() {\n    this.JITDSignOcx = document.getElementById('JITDSignOcx');\n  },\n  computed: _objectSpread({}, mapGetters([\"tagWel\"])),\n  props: [],\n  methods: {\n    choseBrowser: function choseBrowser() {\n      var browser = navigator.userAgent.toLocaleLowerCase();\n\n      if (browser.indexOf(\"msie\") >= 0 || browser.indexOf(\"trident\") >= 0) {\n        this.userAgent = true;\n      } else {\n        this.userAgent = false;\n      }\n    },\n    refreshCode: function refreshCode() {\n      this.loginForm.code = '';\n      this.loginForm.randomStr = randomLenNum(this.code.len, true);\n      this.code.type === 'text' ? this.code.value = randomLenNum(this.code.len) : this.code.src = \"\".concat(this.codeUrl, \"?randomStr=\").concat(this.loginForm.randomStr);\n    },\n    showPassword: function showPassword() {\n      this.passwordType == '' ? this.passwordType = 'password' : this.passwordType = '';\n    },\n    handleSocialLogin: function handleSocialLogin() {\n      var _this = this;\n\n      this.$store.dispatch('LoginBySocial', this.socialForm).then(function () {\n        _this.$router.push({\n          path: _this.tagWel.value\n        });\n      });\n    },\n    handleLogin: function handleLogin() {\n      var _this2 = this;\n\n      this.$refs.loginForm.validate(function (valid) {\n        if (valid) {\n          _this2.$store.dispatch(\"LoginByUsername\", _this2.loginForm).then(function () {\n            _this2.$router.push({\n              path: _this2.tagWel.value\n            });\n          }).catch(function () {\n            _this2.refreshCode();\n          });\n        }\n      });\n    },\n    pkiLogin: function pkiLogin() {\n      var _this3 = this;\n\n      var loading = this.$loading({\n        lock: true,\n        text: \"\\u767B\\u5F55\\u4E2D,\\u8BF7\\u7A0D\\u540E\\u3002\\u3002\\u3002\",\n        spinner: 'el-icon-loading'\n      });\n      this.initJitOcx(loading);\n\n      if (this.pkiForm.code) {\n        this.$store.dispatch(\"LoginByPki\", this.pkiForm).then(function () {\n          _this3.$router.push({\n            path: _this3.tagWel.value\n          });\n\n          setTimeout(function () {\n            loading.close();\n          }, 2000);\n        }).catch(function () {\n          setTimeout(function () {\n            loading.close();\n          }, 2000);\n        });\n      }\n    },\n    msg: function msg(_msg) {\n      this.$message({\n        type: 'error',\n        dangerouslyUseHTMLString: true,\n        duration: 4000,\n        message: _msg\n      });\n    },\n    initJitOcx: function initJitOcx(loading) {\n      try {\n        var InitParam = \"<?xml version=\\\"1.0\\\" encoding=\\\"gb2312\\\"?><authinfo><liblist><lib type=\\\"CSP\\\" version=\\\"1.0\\\" dllname=\\\"\\\" ><algid val=\\\"SHA1\\\" sm2_hashalg=\\\"sm3\\\"/></lib><lib type=\\\"SKF\\\" version=\\\"1.1\\\" dllname=\\\"SERfR01DQUlTLmRsbA==\\\" ><algid val=\\\"SHA1\\\" sm2_hashalg=\\\"sm3\\\"/></lib><lib type=\\\"SKF\\\" version=\\\"1.1\\\" dllname=\\\"U2h1dHRsZUNzcDExXzMwMDBHTS5kbGw=\\\" ><algid val=\\\"SHA1\\\" sm2_hashalg=\\\"sm3\\\"/></lib><lib type=\\\"SKF\\\" version=\\\"1.1\\\" dllname=\\\"U0tGQVBJLmRsbA==\\\" ><algid val=\\\"SHA1\\\" sm2_hashalg=\\\"sm3\\\"/></lib></liblist></authinfo>\";\n        this.JITDSignOcx.Initialize(InitParam);\n\n        if (this.JITDSignOcx.GetErrorCode() != 0) {\n          loading.close();\n          this.msg(\"初始化失败，错误码：\" + this.JITDSignOcx.GetErrorCode() + \" 错误信息：\" + this.JITDSignOcx.GetErrorMessage(this.JITDSignOcx.GetErrorCode()));\n          this.JITDSignOcx.Finalize();\n          return false;\n        } //控制证书为一个时，不弹出证书选择框\n\n\n        this.JITDSignOcx.SetCertChooseType(1);\n        this.JITDSignOcx.SetCert(\"SC\", \"\", \"\", \"\", \"\", \"\");\n\n        if (this.JITDSignOcx.GetErrorCode() != 0) {\n          loading.close();\n          this.msg(\"错误码：\" + this.JITDSignOcx.GetErrorCode() + \"　错误信息：\" + this.JITDSignOcx.GetErrorMessage(this.JITDSignOcx.GetErrorCode()));\n          this.JITDSignOcx.Finalize();\n          return false;\n        } else {\n          var temp_DSign_Result = this.JITDSignOcx.DetachSignStr(\"\", \"ygnet\");\n\n          if (this.JITDSignOcx.GetErrorCode() != 0) {\n            loading.close();\n            this.msg(\"错误码：\" + JITDSignOcx.GetErrorCode() + \"　错误信息：\" + this.JITDSignOcx.GetErrorMessage(this.JITDSignOcx.GetErrorCode()));\n            this.JITDSignOcx.Finalize();\n            return false;\n          }\n\n          this.JITDSignOcx.Finalize();\n          this.pkiForm.code = temp_DSign_Result;\n        }\n\n        loading.close();\n        return false;\n      } catch (e) {\n        loading.close();\n        this.msg('PKI证书驱动存在问题、无法获取PKI证书。\\n浏览器不兼容证书登录:\\n');\n      }\n    }\n  }\n};",{"version":3,"sources":["userlogin.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n\n    <el-form class=\"login-form\"\n             status-icon\n             :rules=\"loginRules\"\n             ref=\"loginForm\"\n             :model=\"loginForm\"\n             label-width=\"0\">\n        <el-form-item prop=\"username\">\n            <el-input size=\"small\"\n                      @keyup.enter.native=\"handleLogin\"\n                      v-model=\"loginForm.username\"\n                      auto-complete=\"off\"\n                      placeholder=\"请输入用户名\">\n                <i slot=\"prefix\"\n                   class=\"icon-yonghu\"></i>\n            </el-input>\n        </el-form-item>\n        <el-form-item prop=\"password\">\n            <el-input size=\"small\"\n                      @keyup.enter.native=\"handleLogin\"\n                      :type=\"passwordType\"\n                      v-model=\"loginForm.password\"\n                      auto-complete=\"off\"\n                      placeholder=\"请输入密码\">\n                <i class=\"el-icon-view el-input__icon\"\n                   slot=\"suffix\"\n                   @click=\"showPassword\"></i>\n                <i slot=\"prefix\"\n                   class=\"icon-mima\"></i>\n            </el-input>\n        </el-form-item>\n        <!-- <el-form-item prop=\"code\">\n           <el-row :span=\"24\">\n             <el-col :span=\"16\">\n               <el-input size=\"small\"\n                         @keyup.enter.native=\"handleLogin\"\n                         :maxlength=\"code.len\"\n                         v-model=\"loginForm.code\"\n                         auto-complete=\"off\"\n                         placeholder=\"请输入验证码\">\n                 <i slot=\"prefix\"\n                    class=\"icon-yanzhengma\"></i>\n               </el-input>\n             </el-col>\n             <el-col :span=\"8\">\n               <div class=\"login-code\">\n                 <span class=\"login-code-img\"\n                       @click=\"refreshCode\"\n                       v-if=\"code.type == 'text'\">{{code.value}}</span>\n                 <img :src=\"code.src\"\n                      class=\"login-code-img\"\n                      @click=\"refreshCode\"\n                      v-else/>\n                 &lt;!&ndash; <i class=\"icon-shuaxin login-code-icon\" @click=\"refreshCode\"></i> &ndash;&gt;\n               </div>\n             </el-col>\n           </el-row>\n\n         </el-form-item>-->\n        <el-form-item>\n            <div>\n\n                <div style=\"float: left;width: 42%\">\n                    <el-button type=\"primary\"\n                               size=\"small\"\n                               @click.native.prevent=\"handleLogin\"\n                               class=\"login-submit\">账户登录\n                    </el-button>\n                </div>\n                <div style=\"float: right;width: 50%\">\n                    <el-button type=\"primary\"\n                               size=\"small\"\n                               @click.native.prevent=\"pkiLogin\"\n                               class=\"login-submit\">证书登陆\n                    </el-button>\n                </div>\n\n\n                <object v-if=\"userAgent\" id=\"JITDSignOcx\" classid=\"clsid:B0EF56AD-D711-412D-BE74-A751595F3633\"\n                        codebase=\"/oci/JITComVCTK_S.cab#version=2,1,1,3\"></object>\n\n                <embed v-else id=\"JITDSignOcx\" type=\"application/x-jit-sign-vctk-s-plugin-boc\" height=\"0px\" width=\"0px\"/>\n            </div>\n        </el-form-item>\n    </el-form>\n\n</template>\n\n<script>\n\n    import {randomLenNum} from \"@/util/util\";\n    import {mapGetters} from \"vuex\";\n     let userAgent;\n\n    export default {\n        name: \"userlogin\",\n        data() {\n\n            return {\n                socialForm: {\n                    code: '',\n                    state: ''\n                },\n                pkiForm: {\n                    code: '',\n                    state: ''\n                },\n                loginForm: {\n                    username: \"admin\",\n                    password: \"123456\",\n                    code: \"\",\n                    redomStr: \"\"\n                },\n                JITDSignOcx: [],\n                checked: false,\n                code: {\n                    src: \"/code\",\n                    value: \"\",\n                    len: 4,\n                    type: \"image\"\n                },\n                loginRules: {\n                    username: [\n                        {required: true, message: \"请输入用户名\", trigger: \"blur\"}\n                    ],\n                    password: [\n                        {required: true, message: \"请输入密码\", trigger: \"blur\"},\n                        {min: 6, message: \"密码长度最少为6位\", trigger: \"blur\"}\n                    ]/*,\n        code: [\n          { required: true, message: \"请输入验证码\", trigger: \"blur\" },\n          { min: 4, max: 4, message: \"验证码长度为4位\", trigger: \"blur\" }\n        ]*/\n                },\n                passwordType: \"password\"\n            };\n        },\n        watch: {\n            $route() {\n                const params = this.$route.query\n                this.socialForm.state = params.state\n                this.socialForm.code = params.code\n                if (!validatenull(this.socialForm.state)) {\n                    const loading = this.$loading({\n                        lock: true,\n                        text: `登录中,请稍后。。。`,\n                        spinner: 'el-icon-loading'\n                    })\n                    setTimeout(() => {\n                        loading.close()\n                    }, 2000)\n                    this.handleSocialLogin()\n                }\n            }\n        },\n        created() {\n            this.refreshCode();\n            this.choseBrowser();\n        },\n        mounted() {\n            this.JITDSignOcx = document.getElementById('JITDSignOcx')\n        },\n        computed: {\n            ...mapGetters([\"tagWel\"])\n        },\n        props: [],\n        methods: {\n            choseBrowser(){\n                let browser = navigator.userAgent.toLocaleLowerCase();\n                if(browser.indexOf(\"msie\") >= 0 || browser.indexOf(\"trident\") >= 0){\n                    this.userAgent=true\n                }else{\n                    this.userAgent=false\n                }\n\n            },\n            refreshCode() {\n                this.loginForm.code = ''\n                this.loginForm.randomStr = randomLenNum(this.code.len, true)\n                this.code.type === 'text'\n                    ? (this.code.value = randomLenNum(this.code.len))\n                    : (this.code.src = `${this.codeUrl}?randomStr=${this.loginForm.randomStr}`)\n            },\n            showPassword() {\n                this.passwordType == ''\n                    ? (this.passwordType = 'password')\n                    : (this.passwordType = '')\n            },\n            handleSocialLogin() {\n                this.$store.dispatch('LoginBySocial', this.socialForm).then(\n                    () => {\n                        this.$router.push({path: this.tagWel.value});\n                    }\n                )\n            },\n            handleLogin() {\n                this.$refs.loginForm.validate(valid => {\n                    if (valid) {\n                        this.$store.dispatch(\"LoginByUsername\", this.loginForm).then(() => {\n                            this.$router.push({path: this.tagWel.value});\n                        }).catch(() => {\n                            this.refreshCode()\n                        })\n\n                    }\n                });\n            },\n            pkiLogin() {\n                const loading = this.$loading({\n                    lock: true,\n                    text: `登录中,请稍后。。。`,\n                    spinner: 'el-icon-loading'\n                })\n                this.initJitOcx(loading)\n                if(this.pkiForm.code){\n\n                    this.$store.dispatch(\"LoginByPki\", this.pkiForm).then(() => {\n                        this.$router.push({path: this.tagWel.value});\n                        setTimeout(() => {\n                            loading.close()\n                        }, 2000)\n                    }).catch(() => {\n                        setTimeout(() => {\n                            loading.close()\n                        }, 2000)\n                    });\n\n                }\n            },\n            msg(msg){\n                this.$message({\n                    type:'error',\n                    dangerouslyUseHTMLString: true,\n                    duration:4000,\n                    message: msg\n                });\n\n            },\n            initJitOcx(loading) {\n                try {\n                    let InitParam = \"<?xml version=\\\"1.0\\\" encoding=\\\"gb2312\\\"?><authinfo><liblist><lib type=\\\"CSP\\\" version=\\\"1.0\\\" dllname=\\\"\\\" ><algid val=\\\"SHA1\\\" sm2_hashalg=\\\"sm3\\\"/></lib><lib type=\\\"SKF\\\" version=\\\"1.1\\\" dllname=\\\"SERfR01DQUlTLmRsbA==\\\" ><algid val=\\\"SHA1\\\" sm2_hashalg=\\\"sm3\\\"/></lib><lib type=\\\"SKF\\\" version=\\\"1.1\\\" dllname=\\\"U2h1dHRsZUNzcDExXzMwMDBHTS5kbGw=\\\" ><algid val=\\\"SHA1\\\" sm2_hashalg=\\\"sm3\\\"/></lib><lib type=\\\"SKF\\\" version=\\\"1.1\\\" dllname=\\\"U0tGQVBJLmRsbA==\\\" ><algid val=\\\"SHA1\\\" sm2_hashalg=\\\"sm3\\\"/></lib></liblist></authinfo>\";\n                    this.JITDSignOcx.Initialize(InitParam);\n                    if (this.JITDSignOcx.GetErrorCode() != 0) {\n                        loading.close()\n                        this.msg(\"初始化失败，错误码：\" + this.JITDSignOcx.GetErrorCode() + \" 错误信息：\" + this.JITDSignOcx.GetErrorMessage(this.JITDSignOcx.GetErrorCode()))\n                        this.JITDSignOcx.Finalize();\n\n                        return false;\n                    }\n                    //控制证书为一个时，不弹出证书选择框\n                    this.JITDSignOcx.SetCertChooseType(1);\n                    this.JITDSignOcx.SetCert(\"SC\", \"\", \"\", \"\", \"\", \"\");\n                    if (this.JITDSignOcx.GetErrorCode() != 0) {\n                        loading.close()\n                        this.msg(\"错误码：\" + this.JITDSignOcx.GetErrorCode() + \"　错误信息：\" + this.JITDSignOcx.GetErrorMessage(this.JITDSignOcx.GetErrorCode()))\n                        this.JITDSignOcx.Finalize();\n\n                        return false;\n                    } else {\n                        let temp_DSign_Result = this.JITDSignOcx.DetachSignStr(\"\", \"ygnet\");\n                        if (this.JITDSignOcx.GetErrorCode() != 0) {\n                            loading.close()\n                            this.msg(\"错误码：\" + JITDSignOcx.GetErrorCode() + \"　错误信息：\" + this.JITDSignOcx.GetErrorMessage(this.JITDSignOcx.GetErrorCode()));\n                            this.JITDSignOcx.Finalize();\n\n                            return false;\n                        }\n                        this.JITDSignOcx.Finalize();\n                        this.pkiForm.code=temp_DSign_Result;\n                    }\n                    loading.close()\n                    return false;\n                } catch (e) {\n                    loading.close()\n                   this.msg('PKI证书驱动存在问题、无法获取PKI证书。\\n浏览器不兼容证书登录:\\n');\n\n                }\n            }\n\n        }\n    };\n</script>\n\n<style>\n</style>\n"],"sourceRoot":"src/page/login"}]}