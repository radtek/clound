{"remainingRequest":"E:\\intellij work\\micro-ui\\node_modules\\babel-loader\\lib\\index.js!E:\\intellij work\\micro-ui\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\intellij work\\micro-ui\\src\\api\\login.js","dependencies":[{"path":"E:\\intellij work\\micro-ui\\src\\api\\login.js","mtime":1554104069537},{"path":"E:\\intellij work\\micro-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\intellij work\\micro-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\intellij work\\micro-ui\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import request from '@/router/axios';\nvar scope = 'server';\nvar basic = 'Basic eWduZXQ6c3Vuc2hpbmU=';\nexport var loginByUsername = function loginByUsername(username, password, code, randomStr) {\n  var grant_type = 'password';\n  return request({\n    url: '/auth/oauth/token',\n    headers: {\n      isToken: false,\n      'Authorization': basic\n    },\n    method: 'post',\n    params: {\n      username: username,\n      password: password,\n      randomStr: randomStr,\n      code: code,\n      grant_type: grant_type,\n      scope: scope\n    }\n  });\n};\nexport var refreshToken = function refreshToken(refresh_token) {\n  var grant_type = 'refresh_token';\n  return request({\n    url: '/auth/oauth/token',\n    headers: {\n      'isToken': false,\n      'Authorization': basic\n    },\n    method: 'post',\n    params: {\n      refresh_token: refresh_token,\n      grant_type: grant_type,\n      scope: scope\n    }\n  });\n};\nexport var loginByPki = function loginByPki(state, code) {\n  var grant_type = 'pki';\n  console.log(state + \":\" + code);\n  return request({\n    url: '/auth/pki/token/certificate',\n    headers: {\n      'Authorization': basic\n    },\n    method: 'post',\n    params: {\n      pki: code,\n      grant_type: grant_type\n    }\n  });\n};\nexport var getUserInfo = function getUserInfo() {\n  return request({\n    url: '/admin/user/info',\n    method: 'get'\n  });\n};\nexport var logout = function logout() {\n  return request({\n    url: '/auth/token/logout',\n    method: 'delete'\n  });\n};",{"version":3,"sources":["E:\\intellij work\\micro-ui\\src\\api\\login.js"],"names":["request","scope","basic","loginByUsername","username","password","code","randomStr","grant_type","url","headers","isToken","method","params","refreshToken","refresh_token","loginByPki","state","console","log","pki","getUserInfo","logout"],"mappings":"AACA,OAAOA,OAAP,MAAoB,gBAApB;AACA,IAAMC,KAAK,GAAG,QAAd;AACA,IAAMC,KAAK,GAAE,4BAAb;AACA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,QAAD,EAAWC,QAAX,EAAqBC,IAArB,EAA2BC,SAA3B,EAAyC;AACtE,MAAMC,UAAU,GAAG,UAAnB;AAEA,SAAOR,OAAO,CAAC;AACbS,IAAAA,GAAG,EAAE,mBADQ;AAEbC,IAAAA,OAAO,EAAE;AACPC,MAAAA,OAAO,EAAC,KADD;AAEP,uBAAiBT;AAFV,KAFI;AAMbU,IAAAA,MAAM,EAAE,MANK;AAObC,IAAAA,MAAM,EAAE;AAAET,MAAAA,QAAQ,EAARA,QAAF;AAAYC,MAAAA,QAAQ,EAARA,QAAZ;AAAsBE,MAAAA,SAAS,EAATA,SAAtB;AAAiCD,MAAAA,IAAI,EAAJA,IAAjC;AAAuCE,MAAAA,UAAU,EAAVA,UAAvC;AAAmDP,MAAAA,KAAK,EAALA;AAAnD;AAPK,GAAD,CAAd;AASD,CAZM;AAcP,OAAO,IAAMa,YAAY,GAAG,SAAfA,YAAe,CAACC,aAAD,EAAmB;AAC7C,MAAMP,UAAU,GAAG,eAAnB;AACA,SAAOR,OAAO,CAAC;AACbS,IAAAA,GAAG,EAAE,mBADQ;AAEbC,IAAAA,OAAO,EAAE;AACP,iBAAW,KADJ;AAEP,uBAAiBR;AAFV,KAFI;AAMbU,IAAAA,MAAM,EAAE,MANK;AAObC,IAAAA,MAAM,EAAE;AAAEE,MAAAA,aAAa,EAAbA,aAAF;AAAiBP,MAAAA,UAAU,EAAVA,UAAjB;AAA6BP,MAAAA,KAAK,EAALA;AAA7B;AAPK,GAAD,CAAd;AASD,CAXM;AAgBP,OAAO,IAAMe,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAQX,IAAR,EAAiB;AACzC,MAAME,UAAU,GAAG,KAAnB;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,GAAC,GAAN,GAAUX,IAAtB;AACA,SAAON,OAAO,CAAC;AACbS,IAAAA,GAAG,EAAE,6BADQ;AAEbC,IAAAA,OAAO,EAAE;AACP,uBAAiBR;AADV,KAFI;AAKbU,IAAAA,MAAM,EAAE,MALK;AAMbC,IAAAA,MAAM,EAAE;AAAEO,MAAAA,GAAG,EAAEd,IAAP;AAAcE,MAAAA,UAAU,EAAVA;AAAd;AANK,GAAD,CAAd;AAQD,CAXM;AAaP,OAAO,IAAMa,WAAW,GAAG,SAAdA,WAAc,GAAM;AAC/B,SAAOrB,OAAO,CAAC;AACbS,IAAAA,GAAG,EAAE,kBADQ;AAEbG,IAAAA,MAAM,EAAE;AAFK,GAAD,CAAd;AAID,CALM;AAOP,OAAO,IAAMU,MAAM,GAAG,SAATA,MAAS,GAAM;AAC1B,SAAOtB,OAAO,CAAC;AACbS,IAAAA,GAAG,EAAE,oBADQ;AAEbG,IAAAA,MAAM,EAAE;AAFK,GAAD,CAAd;AAID,CALM","sourcesContent":["\nimport request from '@/router/axios'\nconst scope = 'server'\nconst basic= 'Basic eWduZXQ6c3Vuc2hpbmU='\nexport const loginByUsername = (username, password, code, randomStr) => {\n  const grant_type = 'password'\n\n  return request({\n    url: '/auth/oauth/token',\n    headers: {\n      isToken:false,\n      'Authorization': basic\n    },\n    method: 'post',\n    params: { username, password, randomStr, code, grant_type, scope }\n  })\n}\n\nexport const refreshToken = (refresh_token) => {\n  const grant_type = 'refresh_token'\n  return request({\n    url: '/auth/oauth/token',\n    headers: {\n      'isToken': false,\n      'Authorization': basic,\n    },\n    method: 'post',\n    params: { refresh_token, grant_type, scope }\n  })\n}\n\n\n\n\nexport const loginByPki = (state, code) => {\n  const grant_type = 'pki'\n  console.log(state+\":\"+code)\n  return request({\n    url: '/auth/pki/token/certificate',\n    headers: {\n      'Authorization': basic\n    },\n    method: 'post',\n    params: { pki: code , grant_type }\n  })\n}\n\nexport const getUserInfo = () => {\n  return request({\n    url: '/admin/user/info',\n    method: 'get'\n  })\n}\n\nexport const logout = () => {\n  return request({\n    url: '/auth/token/logout',\n    method: 'delete'\n  })\n}\n"]}]}