{"remainingRequest":"E:\\intellij work\\micro-ui\\node_modules\\babel-loader\\lib\\index.js!E:\\intellij work\\micro-ui\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\intellij work\\micro-ui\\src\\router\\axios.js","dependencies":[{"path":"E:\\intellij work\\micro-ui\\src\\router\\axios.js","mtime":1551167423078},{"path":"E:\\intellij work\\micro-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\intellij work\\micro-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\intellij work\\micro-ui\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport _Promise from \"E:\\\\intellij work\\\\micro-ui\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/promise\";\nimport { serialize } from '@/util/util';\nimport { getStore } from '../util/store';\nimport NProgress from 'nprogress'; // progress bar\n\nimport errorCode from '@/const/errorCode';\nimport router from \"@/router/router\";\nimport { Message } from 'element-ui';\nimport 'nprogress/nprogress.css';\nimport store from \"@/store\"; // progress bar style\n\naxios.defaults.timeout = 30000; // 返回其他状态吗\n\naxios.defaults.validateStatus = function (status) {\n  return status >= 200 && status <= 500; // 默认的\n}; // 跨域请求，允许保存cookie\n\n\naxios.defaults.withCredentials = true; // NProgress Configuration\n\nNProgress.configure({\n  showSpinner: false\n}); // HTTPrequest拦截\n\naxios.interceptors.request.use(function (config) {\n  NProgress.start(); // start progress bar\n\n  var TENANT_ID = getStore({\n    name: 'tenantId'\n  });\n  var isToken = (config.headers || {}).isToken === false;\n  var token = store.getters.access_token;\n\n  if (token && !isToken) {\n    config.headers['Authorization'] = 'Bearer ' + token; // token\n  }\n\n  if (TENANT_ID) {\n    config.headers['TENANT_ID'] = TENANT_ID; // 租户ID\n  } // headers中配置serialize为true开启序列化\n\n\n  if (config.methods === 'post' && config.headers.serialize) {\n    config.data = serialize(config.data);\n    delete config.data.serialize;\n  }\n\n  return config;\n}, function (error) {\n  return _Promise.reject(error);\n}); // HTTPresponse拦截\n\naxios.interceptors.response.use(function (res) {\n  NProgress.done();\n  var status = Number(res.status) || 200;\n  var message = res.data.msg || errorCode[status] || errorCode['default'];\n\n  if (status === 401) {\n    store.dispatch('FedLogOut').then(function () {\n      router.push({\n        path: '/login'\n      });\n    });\n    return;\n  }\n\n  if (status !== 200 || res.data.code === 1) {\n    Message({\n      message: message,\n      type: 'error'\n    });\n    return _Promise.reject(new Error(message));\n  }\n\n  return res;\n}, function (error) {\n  NProgress.done();\n  return _Promise.reject(new Error(error));\n});\nexport default axios;",{"version":3,"sources":["E:\\intellij work\\micro-ui\\src\\router\\axios.js"],"names":["serialize","getStore","NProgress","errorCode","router","Message","store","axios","defaults","timeout","validateStatus","status","withCredentials","configure","showSpinner","interceptors","request","use","config","start","TENANT_ID","name","isToken","headers","token","getters","access_token","methods","data","error","reject","response","res","done","Number","message","msg","dispatch","then","push","path","code","type","Error"],"mappings":";;AAAA,SAAQA,SAAR,QAAwB,aAAxB;AACA,SAAQC,QAAR,QAAuB,eAAvB;AACA,OAAOC,SAAP,MAAsB,WAAtB,C,CAAkC;;AAClC,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAAQC,OAAR,QAAsB,YAAtB;AACA,OAAO,yBAAP;AACA,OAAOC,KAAP,MAAkB,SAAlB,C,CAA6B;;AAC7BC,KAAK,CAACC,QAAN,CAAeC,OAAf,GAAyB,KAAzB,C,CACA;;AACAF,KAAK,CAACC,QAAN,CAAeE,cAAf,GAAgC,UAAUC,MAAV,EAAkB;AAChD,SAAOA,MAAM,IAAI,GAAV,IAAiBA,MAAM,IAAI,GAAlC,CADgD,CACV;AACvC,CAFD,C,CAGA;;;AACAJ,KAAK,CAACC,QAAN,CAAeI,eAAf,GAAiC,IAAjC,C,CACA;;AACAV,SAAS,CAACW,SAAV,CAAoB;AAClBC,EAAAA,WAAW,EAAE;AADK,CAApB,E,CAIA;;AACAP,KAAK,CAACQ,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+B,UAAAC,MAAM,EAAI;AACvChB,EAAAA,SAAS,CAACiB,KAAV,GADuC,CACrB;;AAClB,MAAMC,SAAS,GAAGnB,QAAQ,CAAC;AAACoB,IAAAA,IAAI,EAAE;AAAP,GAAD,CAA1B;AACA,MAAMC,OAAO,GAAG,CAACJ,MAAM,CAACK,OAAP,IAAkB,EAAnB,EAAuBD,OAAvB,KAAmC,KAAnD;AACA,MAAIE,KAAK,GAAIlB,KAAK,CAACmB,OAAN,CAAcC,YAA3B;;AACA,MAAIF,KAAK,IAAI,CAACF,OAAd,EAAuB;AACrBJ,IAAAA,MAAM,CAACK,OAAP,CAAe,eAAf,IAAkC,YAAYC,KAA9C,CADqB,CAC8B;AACpD;;AACD,MAAIJ,SAAJ,EAAe;AACbF,IAAAA,MAAM,CAACK,OAAP,CAAe,WAAf,IAA8BH,SAA9B,CADa,CAC2B;AACzC,GAVsC,CAWvC;;;AACA,MAAIF,MAAM,CAACS,OAAP,KAAmB,MAAnB,IAA6BT,MAAM,CAACK,OAAP,CAAevB,SAAhD,EAA2D;AACzDkB,IAAAA,MAAM,CAACU,IAAP,GAAc5B,SAAS,CAACkB,MAAM,CAACU,IAAR,CAAvB;AACA,WAAOV,MAAM,CAACU,IAAP,CAAY5B,SAAnB;AACD;;AACD,SAAOkB,MAAP;AACD,CAjBD,EAiBG,UAAAW,KAAK,EAAI;AACV,SAAO,SAAQC,MAAR,CAAeD,KAAf,CAAP;AACD,CAnBD,E,CAsBA;;AACAtB,KAAK,CAACQ,YAAN,CAAmBgB,QAAnB,CAA4Bd,GAA5B,CAAgC,UAAAe,GAAG,EAAI;AACrC9B,EAAAA,SAAS,CAAC+B,IAAV;AACA,MAAMtB,MAAM,GAAGuB,MAAM,CAACF,GAAG,CAACrB,MAAL,CAAN,IAAsB,GAArC;AACA,MAAMwB,OAAO,GAAGH,GAAG,CAACJ,IAAJ,CAASQ,GAAT,IAAgBjC,SAAS,CAACQ,MAAD,CAAzB,IAAqCR,SAAS,CAAC,SAAD,CAA9D;;AACA,MAAIQ,MAAM,KAAK,GAAf,EAAoB;AAClBL,IAAAA,KAAK,CAAC+B,QAAN,CAAe,WAAf,EAA4BC,IAA5B,CAAiC,YAAM;AACrClC,MAAAA,MAAM,CAACmC,IAAP,CAAY;AAACC,QAAAA,IAAI,EAAE;AAAP,OAAZ;AACD,KAFD;AAGA;AACD;;AAED,MAAI7B,MAAM,KAAK,GAAX,IAAkBqB,GAAG,CAACJ,IAAJ,CAASa,IAAT,KAAkB,CAAxC,EAA2C;AACzCpC,IAAAA,OAAO,CAAC;AACN8B,MAAAA,OAAO,EAAEA,OADH;AAENO,MAAAA,IAAI,EAAE;AAFA,KAAD,CAAP;AAIA,WAAO,SAAQZ,MAAR,CAAe,IAAIa,KAAJ,CAAUR,OAAV,CAAf,CAAP;AACD;;AAED,SAAOH,GAAP;AACD,CApBD,EAoBG,UAAAH,KAAK,EAAI;AACV3B,EAAAA,SAAS,CAAC+B,IAAV;AACA,SAAO,SAAQH,MAAR,CAAe,IAAIa,KAAJ,CAAUd,KAAV,CAAf,CAAP;AACD,CAvBD;AAyBA,eAAetB,KAAf","sourcesContent":["import {serialize} from '@/util/util'\nimport {getStore} from '../util/store'\nimport NProgress from 'nprogress' // progress bar\nimport errorCode from '@/const/errorCode'\nimport router from \"@/router/router\"\nimport {Message} from 'element-ui'\nimport 'nprogress/nprogress.css'\nimport store from \"@/store\"; // progress bar style\naxios.defaults.timeout = 30000\n// 返回其他状态吗\naxios.defaults.validateStatus = function (status) {\n  return status >= 200 && status <= 500 // 默认的\n}\n// 跨域请求，允许保存cookie\naxios.defaults.withCredentials = true\n// NProgress Configuration\nNProgress.configure({\n  showSpinner: false\n})\n\n// HTTPrequest拦截\naxios.interceptors.request.use(config => {\n  NProgress.start() // start progress bar\n  const TENANT_ID = getStore({name: 'tenantId'})\n  const isToken = (config.headers || {}).isToken === false\n  let token =  store.getters.access_token\n  if (token && !isToken) {\n    config.headers['Authorization'] = 'Bearer ' + token// token\n  }\n  if (TENANT_ID) {\n    config.headers['TENANT_ID'] = TENANT_ID // 租户ID\n  }\n  // headers中配置serialize为true开启序列化\n  if (config.methods === 'post' && config.headers.serialize) {\n    config.data = serialize(config.data)\n    delete config.data.serialize\n  }\n  return config\n}, error => {\n  return Promise.reject(error)\n})\n\n\n// HTTPresponse拦截\naxios.interceptors.response.use(res => {\n  NProgress.done()\n  const status = Number(res.status) || 200\n  const message = res.data.msg || errorCode[status] || errorCode['default']\n  if (status === 401) {\n    store.dispatch('FedLogOut').then(() => {\n      router.push({path: '/login'})\n    })\n    return\n  }\n\n  if (status !== 200 || res.data.code === 1) {\n    Message({\n      message: message,\n      type: 'error'\n    })\n    return Promise.reject(new Error(message))\n  }\n\n  return res\n}, error => {\n  NProgress.done()\n  return Promise.reject(new Error(error))\n})\n\nexport default axios\n"]}]}