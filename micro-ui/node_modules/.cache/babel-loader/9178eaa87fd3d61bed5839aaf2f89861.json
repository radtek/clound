{"remainingRequest":"G:\\intellij work\\micro-ui\\node_modules\\babel-loader\\lib\\index.js!G:\\intellij work\\micro-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!G:\\intellij work\\micro-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\intellij work\\micro-ui\\src\\views\\portal\\unit\\standard\\datasource\\datasourceType.vue?vue&type=script&lang=js&","dependencies":[{"path":"G:\\intellij work\\micro-ui\\src\\views\\portal\\unit\\standard\\datasource\\datasourceType.vue","mtime":1556503126900},{"path":"G:\\intellij work\\micro-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\intellij work\\micro-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"G:\\intellij work\\micro-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\intellij work\\micro-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Object$assign from \"G:\\\\intellij work\\\\micro-ui\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/object/assign\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es6.object.assign\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { fetchList, handleCheck, getObj, addObj, putObj, delObj } from '@/api/portal/concern/datasourceType';\nimport { tableOption, addsourceOption, listOption } from '@/const/crud/portal/concern/datasourceType';\nimport { mapGetters } from 'vuex';\nexport default {\n  name: \"datasourceType\",\n  data: function data() {\n    return {\n      form: {},\n      addForm: {\n        type: '',\n        ip: '',\n        account: '',\n        pwd: '',\n        port: '',\n        serverName: ''\n      },\n      addsource: false,\n      listsource: false,\n      listOption: listOption,\n      addOption: addsourceOption,\n      addData: [],\n      option: tableOption,\n      data: [{\n        title: 'Oracle',\n        text1: '25',\n        img: 'https://gw.alipayobjects.com/zos/rmsportal/WdGqmHpayyMjiEhcKoVE.png'\n      }, {\n        title: 'Mysql',\n        text2: '25',\n        img: 'https://gw.alipayobjects.com/zos/rmsportal/zOsKZmFRdUtvpqCImOVY.png'\n      }, {\n        title: 'SQL Server',\n        text3: '25',\n        img: 'https://gw.alipayobjects.com/zos/rmsportal/dURIMkkrRFpPgTuzkwnB.png'\n      }]\n    };\n  },\n  computed: {},\n  methods: {\n    /**\n     * @title 测试连接数据库\n     * @param params 为当前的数据\n     **/\n    handletest: function handletest(formName) {\n      var _this2 = this;\n\n      var params = this.addForm;\n      var JdbcUrl = '';\n\n      if (params.type == 'MySql') {\n        JdbcUrl += 'jdbc:mysql://' + params.ip + ':' + params.port + '/' + params.serverName + '';\n      } else if (this.addForm.type == 'Oracle') {\n        JdbcUrl += 'jdbc:oracle:thin:@' + params.ip + ':' + params.port + '/' + params.serverName + '';\n      } else if (this.addForm.type == 'DB2') {\n        JdbcUrl += 'jdbc:DB2://' + params.ip + ':' + params.port + '/' + params.serverName + '\"';\n      } else if (this.addForm.type == 'SQLServer') {\n        JdbcUrl += 'jdbc:sqlserver://' + params.ip + ':' + params.port + '';\n      }\n\n      handleCheck(_Object$assign({\n        type: this.addForm.type,\n        account: this.addForm.account,\n        pwd: this.addForm.pwd,\n        JdbcUrl: JdbcUrl\n      }, formName)).then(function (response) {\n        _this2.$alert(response.data.message, '连接结果', {\n          confirmButtonText: '确定',\n          type: 'warning',\n          callback: function callback(action) {}\n        });\n      });\n    },\n\n    /**\n     * @title 数据添加\n     * @param data 为当前的数据\n     **/\n    submitForm: function submitForm(formName) {\n      var _this3 = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          addObj(_this3.addForm).then(function (res) {\n            if (res.status == 200) {\n              /* this.$refs[formName].resetForm();\n               this.addsource = false;*/\n              _this3.$notify({\n                title: '成功',\n                message: '保存成功',\n                type: 'success',\n                duration: 2000\n              }).catch(function () {\n                loading();\n              });\n            } else {\n              _this3.$alert(\"提交失败\", '提交结果', {\n                confirmButtonText: '确定',\n                type: 'warning',\n                callback: function callback(action) {}\n              });\n            }\n          });\n        } else {\n          _this3.$message({\n            showClose: true,\n            message: '请填写完整信息后再保存!',\n            type: 'error submit!!'\n          });\n\n          return false;\n        }\n      });\n    },\n    resetForm: function resetForm(formName) {\n      this.$refs[formName].resetForm();\n    },\n    handleOpt: function handleOpt(row, index, done, loading) {\n      done();\n      this.$notify({\n        title: '成功',\n        message: '操作成功',\n        type: 'success',\n        duration: 2000\n      });\n    },\n    handleDelete: function handleDelete() {\n      var _this = this;\n\n      this.$confirm('是否确认删除该记录吗\"?', '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        _this.$message({\n          showClose: true,\n          message: '删除成功',\n          type: 'success'\n        });\n      }).catch(function (err) {});\n    }\n  }\n};",{"version":3,"sources":["datasourceType.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"app-container calendar-list-container\">\n        <basic-container>\n            <avue-card  ref=\"crud\" :option=\"option\" :data=\"data\" @row-click=\"listsource=true\" @row-add=\"listsource=true\"  v-model=\"form\">\n                <template slot=\"menu\" slot-scope=\"scope\">\n                    <span @click.stop=\"addsource=true\">添加数据源</span>\n                    <span @click.stop=\"listsource=true\">查看数据源</span>\n                </template>\n            </avue-card>\n            <el-dialog title=\"添加数据源\" fullscreen :visible.sync=\"addsource\" :append-to-body=\"true\">\n                <avue-form  :option=\"addOption\" :data=\"addData\" v-model=\"addForm\" ref=\"addForm\">\n                </avue-form>\n\n                    <div slot=\"footer\"  class=\"el-dialog--center\">\n                        <el-button type=\"primary\" @click=\"handletest('addForm')\">测试连接  </el-button>\n\n                        <el-button type=\"primary\" @click=\"submitForm('addForm')\">保存 </el-button>\n\n                        <el-button @click=\"resetForm('addForm')\">清空 </el-button>\n                    </div>\n            </el-dialog>\n            <el-dialog title=\"数据源列表\" fullscreen :visible.sync=\"listsource\" :append-to-body=\"true\">\n                    <avue-crud :option=\"listOption\" :data=\"listData\"\n                               :page=\"page\"\n                               @row-update=\"handleOpt\"\n                               @row-save=\"handleSav\"\n                               v-model=\"form\">\n\n                        <!--<template slot=\"menu\" slot-scope=\"scope\">\n                            <el-button\n                                    size=\"small\"\n                                    type=\"text\"\n                                    icon=\"el-icon-delete\"\n                                    @click=\"handleDelete()\">删除\n                            </el-button>\n                        </template>-->\n                    </avue-crud>\n            </el-dialog>\n        </basic-container>\n\n    </div>\n</template>\n\n\n\n<script>\n    import { fetchList,handleCheck, getObj,addObj, putObj, delObj } from '@/api/portal/concern/datasourceType'\n    import { tableOption,addsourceOption,listOption } from '@/const/crud/portal/concern/datasourceType'\n    import { mapGetters } from 'vuex'\n    export default {\n        name: \"datasourceType\",\n        data() {\n            return {\n                form:{},\n                addForm:{\n                    type:'',\n                    ip:'',\n                    account:'',\n                    pwd:'',\n                    port:'',\n                    serverName:'',\n                },\n                addsource:false,\n                listsource:false,\n                listOption:listOption,\n                addOption:addsourceOption,\n                addData:[],\n                option: tableOption,\n                data: [\n                   {\n                    title: 'Oracle',\n                    text1: '25',\n                    img: 'https://gw.alipayobjects.com/zos/rmsportal/WdGqmHpayyMjiEhcKoVE.png'\n                },\n                    {\n                    title: 'Mysql',\n                    text2: '25',\n                    img: 'https://gw.alipayobjects.com/zos/rmsportal/zOsKZmFRdUtvpqCImOVY.png'\n                },\n                    {\n                    title: 'SQL Server',\n                    text3: '25',\n                    img: 'https://gw.alipayobjects.com/zos/rmsportal/dURIMkkrRFpPgTuzkwnB.png'\n                }\n                ]\n            }\n        },\n        computed: {\n        },\n        methods:{\n            /**\n             * @title 测试连接数据库\n             * @param params 为当前的数据\n             **/\n            handletest(formName) {\n                var params = this.addForm;\n                let JdbcUrl = '';\n                if(params.type == 'MySql'){\n                    JdbcUrl += 'jdbc:mysql://'+params.ip+':'+params.port+'/'+params.serverName+'';\n                }else if(this.addForm.type == 'Oracle'){\n                    JdbcUrl += 'jdbc:oracle:thin:@'+params.ip+':'+params.port+'/'+params.serverName+'';\n                }else if (this.addForm.type == 'DB2'){\n                    JdbcUrl += 'jdbc:DB2://'+params.ip+':'+params.port+'/'+params.serverName+'\"';\n                }else if (this.addForm.type == 'SQLServer'){\n                    JdbcUrl += 'jdbc:sqlserver://'+params.ip+':'+params.port+'';\n                }\n\n                handleCheck(Object.assign({\n                    type:this.addForm.type,\n                    account: this.addForm.account,\n                    pwd:this.addForm.pwd,\n                    JdbcUrl:JdbcUrl,\n                }, formName)).then(response => {\n                        this.$alert(response.data.message, '连接结果', {\n                            confirmButtonText: '确定',\n                            type: 'warning',\n                            callback: action => {\n\n                            },\n                        });\n                })\n            },\n\n            /**\n             * @title 数据添加\n             * @param data 为当前的数据\n             **/\n            submitForm(formName) {\n                this.$refs[formName].validate((valid) => {\n                    if (valid) {\n                        addObj(this.addForm).then((res) => {\n                            if(res.status==200){\n                               /* this.$refs[formName].resetForm();\n                                this.addsource = false;*/\n                                this.$notify({\n                                    title: '成功',\n                                    message: '保存成功',\n                                    type: 'success',\n                                    duration: 2000\n                                }).catch(() => {\n                                    loading();\n                                });\n\n                            }else{\n                                this.$alert(\"提交失败\", '提交结果', {\n                                    confirmButtonText: '确定',\n                                    type: 'warning',\n                                    callback: action => {\n\n                                    },\n                                });\n                            }\n                        })\n                    } else {\n                        this.$message({\n                            showClose: true,\n                            message: '请填写完整信息后再保存!',\n                            type: 'error submit!!'\n                        })\n\n                        return false;\n                    }\n                });\n            },\n\n            resetForm(formName) {\n                this.$refs[formName].resetForm();\n            },\n\n            handleOpt(row, index, done, loading){\n                done();\n                this.$notify({\n                    title: '成功',\n                    message: '操作成功',\n                    type: 'success',\n                    duration: 2000\n                })\n            },\n\n            handleDelete() {\n                var _this = this\n                this.$confirm('是否确认删除该记录吗\"?', '警告', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                }).then(function () {\n                    _this.$message({\n                        showClose: true,\n                        message: '删除成功',\n                        type: 'success'\n                    })\n                }).catch(function (err) {\n                })\n            },\n            },\n    }\n</script>"],"sourceRoot":"src/views/portal/unit/standard/datasource"}]}