{"remainingRequest":"G:\\intellij work\\micro-ui\\node_modules\\babel-loader\\lib\\index.js!G:\\intellij work\\micro-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!G:\\intellij work\\micro-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\intellij work\\micro-ui\\src\\components\\iframe\\main.vue?vue&type=script&lang=js&","dependencies":[{"path":"G:\\intellij work\\micro-ui\\src\\components\\iframe\\main.vue","mtime":1551167423552},{"path":"G:\\intellij work\\micro-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\intellij work\\micro-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"G:\\intellij work\\micro-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\intellij work\\micro-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.array.index-of\";\nimport _objectSpread from \"G:\\\\intellij work\\\\micro-ui\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport NProgress from 'nprogress'; // progress bar\n\nimport 'nprogress/nprogress.css'; // progress bar style\n\nexport default {\n  name: 'AvueIframe',\n  data: function data() {\n    return {\n      urlPath: this.getUrlPath() //iframe src 路径\n\n    };\n  },\n  created: function created() {\n    NProgress.configure({\n      showSpinner: false\n    });\n  },\n  mounted: function mounted() {\n    this.load();\n    this.resize();\n  },\n  props: ['routerPath'],\n  watch: {\n    $route: function $route() {\n      this.load();\n    },\n    routerPath: function routerPath() {\n      // 监听routerPath变化，改变src路径\n      this.urlPath = this.getUrlPath();\n    }\n  },\n  components: _objectSpread({}, mapGetters(['screen'])),\n  methods: {\n    // 显示等待框\n    show: function show() {\n      NProgress.start();\n    },\n    // 隐藏等待狂\n    hide: function hide() {\n      NProgress.done();\n    },\n    // 加载浏览器窗口变化自适应\n    resize: function resize() {\n      var _this = this;\n\n      window.onresize = function () {\n        _this.iframeInit();\n      };\n    },\n    // 加载组件\n    load: function load() {\n      var _this2 = this;\n\n      this.show();\n      var flag = true; //URL是否包含问号\n\n      if (this.$route.query.src.indexOf('?') == -1) {\n        flag = false;\n      }\n\n      var list = [];\n\n      for (var key in this.$route.query) {\n        if (key != 'src' && key != 'name') {\n          list.push(\"\".concat(key, \"= this.$route.query[key]\"));\n        }\n      }\n\n      list = list.join('&').toString();\n\n      if (flag) {\n        this.$route.query.src = \"\".concat(this.$route.query.src).concat(list.length > 0 ? \"&list\" : '');\n      } else {\n        this.$route.query.src = \"\".concat(this.$route.query.src).concat(list.length > 0 ? \"?list\" : '');\n      } //超时5s自动隐藏等待框，加强用户体验\n\n\n      var time = 5;\n      var timeFunc = setInterval(function () {\n        time--;\n\n        if (time == 0) {\n          _this2.hide();\n\n          clearInterval(timeFunc);\n        }\n      }, 1000);\n      this.iframeInit();\n    },\n    //iframe窗口初始化\n    iframeInit: function iframeInit() {\n      var _this3 = this;\n\n      var iframe = this.$refs.iframe;\n      var clientHeight = document.documentElement.clientHeight - (screen > 1 ? 200 : 130);\n      iframe.style.height = \"\".concat(clientHeight, \"px\");\n\n      if (iframe.attachEvent) {\n        iframe.attachEvent('onload', function () {\n          _this3.hide();\n        });\n      } else {\n        iframe.onload = function () {\n          _this3.hide();\n        };\n      }\n    },\n    getUrlPath: function getUrlPath() {\n      //获取 iframe src 路径\n      var url = window.location.href;\n      url = url.replace('/myiframe', '');\n      return url;\n    }\n  }\n};",{"version":3,"sources":["main.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <basic-container>\n      <iframe v-if=\"$route.query.src\"\n              :src='$route.query.src'\n              class=\"iframe\"\n              ref=\"iframe\"></iframe>\n      <iframe v-else\n              :src=\"urlPath\"\n              class=\"iframe\"\n              ref=\"iframe\"></iframe>\n    </basic-container>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\nimport NProgress from 'nprogress' // progress bar\nimport 'nprogress/nprogress.css' // progress bar style\nexport default {\n  name: 'AvueIframe',\n  data () {\n    return {\n      urlPath: this.getUrlPath() //iframe src 路径\n    }\n  },\n  created () {\n    NProgress.configure({ showSpinner: false })\n  },\n  mounted () {\n    this.load()\n    this.resize()\n  },\n  props: ['routerPath'],\n  watch: {\n    $route: function () {\n      this.load()\n    },\n    routerPath: function () {\n      // 监听routerPath变化，改变src路径\n      this.urlPath = this.getUrlPath()\n    }\n  },\n  components: {\n    ...mapGetters(['screen']),\n  },\n  methods: {\n    // 显示等待框\n    show () {\n      NProgress.start()\n    },\n    // 隐藏等待狂\n    hide () {\n      NProgress.done()\n    },\n    // 加载浏览器窗口变化自适应\n    resize () {\n      window.onresize = () => {\n        this.iframeInit()\n      }\n    },\n    // 加载组件\n    load () {\n      this.show()\n      var flag = true //URL是否包含问号\n      if (this.$route.query.src.indexOf('?') == -1) {\n        flag = false\n      }\n      var list = []\n      for (var key in this.$route.query) {\n        if (key != 'src' && key != 'name') {\n          list.push(`${key}= this.$route.query[key]`)\n        }\n      }\n      list = list.join('&').toString()\n      if (flag) {\n        this.$route.query.src = `${this.$route.query.src}${\n          list.length > 0 ? `&list` : ''\n          }`\n      } else {\n        this.$route.query.src = `${this.$route.query.src}${\n          list.length > 0 ? `?list` : ''\n          }`\n      }\n      //超时5s自动隐藏等待框，加强用户体验\n      let time = 5\n      const timeFunc = setInterval(() => {\n        time--\n        if (time == 0) {\n          this.hide()\n          clearInterval(timeFunc)\n        }\n      }, 1000)\n      this.iframeInit()\n    },\n    //iframe窗口初始化\n    iframeInit () {\n      const iframe = this.$refs.iframe\n      const clientHeight = document.documentElement.clientHeight - (screen > 1 ? 200 : 130);\n      iframe.style.height = `${clientHeight}px`\n      if (iframe.attachEvent) {\n        iframe.attachEvent('onload', () => {\n          this.hide()\n        })\n      } else {\n        iframe.onload = () => {\n          this.hide()\n        }\n      }\n    },\n    getUrlPath: function () {\n      //获取 iframe src 路径\n      let url = window.location.href\n      url = url.replace('/myiframe', '')\n      return url\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.iframe {\n  width: 100%;\n  height: 100%;\n  border: 0;\n  overflow: hidden;\n  box-sizing: border-box;\n}\n</style>"],"sourceRoot":"src/components/iframe"}]}