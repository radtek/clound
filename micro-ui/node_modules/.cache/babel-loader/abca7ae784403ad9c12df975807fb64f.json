{"remainingRequest":"G:\\intellij work\\micro-ui\\node_modules\\babel-loader\\lib\\index.js!G:\\intellij work\\micro-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!G:\\intellij work\\micro-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\intellij work\\micro-ui\\src\\views\\portal\\unit\\standard\\datasource\\RdbSource.vue?vue&type=script&lang=js&","dependencies":[{"path":"G:\\intellij work\\micro-ui\\src\\views\\portal\\unit\\standard\\datasource\\RdbSource.vue","mtime":1557716956463},{"path":"G:\\intellij work\\micro-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\intellij work\\micro-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"G:\\intellij work\\micro-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\intellij work\\micro-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Object$assign from \"G:\\\\intellij work\\\\micro-ui\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/object/assign\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { fetchList, handleCheck, getObj, addObj, putObj, delObj } from '@/api/portal/metadata/datasource/RdbSource';\nimport { tableOption, addsourceOption, listOption, editsourceOption } from '@/const/crud/portal/metadata/datasource/RdbSource';\nimport { mapGetters } from 'vuex';\nexport default {\n  name: \"RdbSource\",\n  data: function data() {\n    return {\n      formInline: {\n        name: '',\n        type: ''\n      },\n      form: {\n        type: ''\n      },\n      addForm: {\n        type: '',\n        ip: '',\n        account: '',\n        pwd: '',\n        port: '',\n        serverName: ''\n      },\n      editForm: {\n        type: '',\n        ip: '',\n        account: '',\n        pwd: '',\n        port: '',\n        serverName: ''\n      },\n      listform: {\n        type: '',\n        name: ''\n      },\n      page: {\n        total: 0,\n        // 总页数\n        currentPage: 1,\n        // 当前页数\n        pageSize: 10 // 每页显示多少条\n\n      },\n      tableLoading: false,\n      addsource: false,\n      listsource: false,\n      editsource: false,\n      listOption: listOption,\n      addOption: addsourceOption,\n      addData: [],\n      editOption: editsourceOption,\n      editData: [],\n      listData: [],\n      option: tableOption,\n      data: [{\n        title: 'Oracle',\n        type: 'Oracle',\n        text1: '25',\n        img: 'https://gw.alipayobjects.com/zos/rmsportal/WdGqmHpayyMjiEhcKoVE.png'\n      }, {\n        title: 'MySql',\n        type: 'MySql',\n        text2: '25',\n        img: 'https://gw.alipayobjects.com/zos/rmsportal/zOsKZmFRdUtvpqCImOVY.png'\n      }, {\n        title: 'SQL Server',\n        type: 'SQLServer',\n        text3: '25',\n        img: 'https://gw.alipayobjects.com/zos/rmsportal/dURIMkkrRFpPgTuzkwnB.png'\n      }, {\n        title: 'DB2',\n        type: 'DB2',\n        text3: '25',\n        img: 'https://gw.alipayobjects.com/zos/rmsportal/dURIMkkrRFpPgTuzkwnB.png'\n      }]\n    };\n  },\n  computed: {},\n  methods: {\n    listtype: function listtype(row, index) {\n      this.listsource = true;\n      this.formInline.type = row.type;\n      this.$emit(\"input\", this.formInline);\n      this.handlelistsource();\n    },\n    addtype: function addtype(row, index) {\n      this.addsource = true;\n      this.addForm = row;\n      this.$emit(\"input\", this.addForm);\n    },\n    addalltype: function addalltype(formInline) {\n      this.addsource = true;\n      this.addForm.type = this.formInline.type;\n      this.$emit(\"input\", this.addForm);\n    },\n    editbutton: function editbutton(row, index) {\n      this.editsource = true;\n      this.editForm = row, this.$emit(\"input\", this.editForm);\n    },\n    handlelistsource: function handlelistsource(param) {\n      this.page.page = 1;\n      this.getList(this.page, this.formInline);\n    },\n    getList: function getList(page, params) {\n      var _this = this;\n\n      this.tableLoading = true;\n      fetchList(_Object$assign({\n        current: page.currentPage,\n        size: page.pageSize,\n        type: this.formInline.type\n      }, params)).then(function (response) {\n        _this.listData = response.data.data.records;\n        _this.page.total = response.data.data.total;\n        _this.tableLoading = false;\n      });\n    },\n\n    /**\n     * @title 测试连接数据库\n     * @param params 为当前的数据\n     **/\n    handletest: function handletest(formName) {\n      var _this2 = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          var params = _this2.addForm;\n          var JdbcUrl = '';\n\n          if (params.type == 'MySql') {\n            JdbcUrl += 'jdbc:mysql://' + params.ip + ':' + params.port + '/' + params.serverName + '';\n          } else if (_this2.addForm.type == 'Oracle') {\n            JdbcUrl += 'jdbc:oracle:thin:@' + params.ip + ':' + params.port + '/' + params.serverName + '';\n          } else if (_this2.addForm.type == 'DB2') {\n            JdbcUrl += 'jdbc:DB2://' + params.ip + ':' + params.port + '/' + params.serverName + '';\n          } else if (_this2.addForm.type == 'SQLServer') {\n            JdbcUrl += 'jdbc:sqlserver://' + params.ip + ':' + params.port + '';\n          }\n\n          handleCheck(_Object$assign({\n            type: _this2.addForm.type,\n            account: _this2.addForm.account,\n            pwd: _this2.addForm.pwd,\n            JdbcUrl: JdbcUrl\n          }, formName)).then(function (response) {\n            _this2.$alert(response.data.message, '连接结果', {\n              confirmButtonText: '确定',\n              type: 'warning',\n              callback: function callback(action) {}\n            });\n          });\n        } else {\n          _this2.$message({\n            showClose: true,\n            message: '请填写完整信息后再测试!',\n            type: 'error submit!!'\n          });\n\n          return false;\n        }\n      });\n    },\n\n    /**\n     * @title edit测试连接数据库\n     * @param params 为当前的数据\n     **/\n    edittest: function edittest(formName) {\n      var _this3 = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          var params = _this3.editForm;\n          var JdbcUrl = '';\n\n          if (params.type == 'MySql') {\n            JdbcUrl += 'jdbc:mysql://' + params.ip + ':' + params.port + '/' + params.serverName + '';\n          } else if (params.type == 'Oracle') {\n            JdbcUrl += 'jdbc:oracle:thin:@' + params.ip + ':' + params.port + '/' + params.serverName + '';\n          } else if (params.type == 'DB2') {\n            JdbcUrl += 'jdbc:DB2://' + params.ip + ':' + params.port + '/' + params.serverName + '';\n          } else if (params.type == 'SQLServer') {\n            JdbcUrl += 'jdbc:sqlserver://' + params.ip + ':' + params.port + '';\n          }\n\n          handleCheck(_Object$assign({\n            type: params.type,\n            account: params.account,\n            pwd: params.pwd,\n            JdbcUrl: JdbcUrl\n          }, formName)).then(function (response) {\n            _this3.$alert(response.data.message, '连接结果', {\n              confirmButtonText: '确定',\n              type: 'warning',\n              callback: function callback(action) {}\n            });\n          });\n        } else {\n          _this3.$message({\n            showClose: true,\n            message: '请填写完整信息后再测试!',\n            type: 'error submit!!'\n          });\n\n          return false;\n        }\n      });\n    },\n\n    /**\n     * @title 数据添加\n     * @param data 为当前的数据\n     **/\n    submitForm: function submitForm(formName) {\n      var _this4 = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          addObj(_this4.addForm).then(function (res) {\n            if (res.status == 200) {\n              /* this.$refs[formName].resetForm();*/\n              _this4.addsource = false;\n\n              _this4.handlelistsource();\n\n              _this4.$notify({\n                title: '成功',\n                message: '保存成功',\n                type: 'success',\n                duration: 2000\n              }).catch(function () {\n                loading();\n              });\n            } else {\n              _this4.$alert(\"提交失败\", '提交结果', {\n                confirmButtonText: '确定',\n                type: 'warning',\n                callback: function callback(action) {}\n              });\n            }\n          });\n        } else {\n          _this4.$message({\n            showClose: true,\n            message: '请填写完整信息后再保存!',\n            type: 'error submit!!'\n          });\n\n          return false;\n        }\n      });\n    },\n    resetForm: function resetForm(formName) {\n      this.$refs[formName].resetForm();\n      this.addForm.type = this.formInline.type;\n      this.$emit(\"input\", this.addForm);\n    },\n    reset: function reset(formName) {\n      this.$refs[formName].resetFields();\n    },\n\n    /**\n     * @title 修改\n     * @param data 为当前的数据\n     **/\n    handleOpt: function handleOpt(formName) {\n      var _this5 = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          putObj(_this5.editForm).then(function (res) {\n            if (res.status == 200) {\n              _this5.editsource = false;\n\n              _this5.handlelistsource();\n\n              _this5.$notify({\n                title: '成功',\n                message: '修改成功',\n                type: 'success',\n                duration: 2000\n              }).catch(function () {\n                loading();\n              });\n            } else {\n              _this5.$alert(\"修改失败\", '修改结果', {\n                confirmButtonText: '确定',\n                type: 'warning',\n                callback: function callback(action) {}\n              });\n            }\n          });\n        } else {\n          _this5.$message({\n            showClose: true,\n            message: '请填写完整信息后再修改!',\n            type: 'error submit!!'\n          });\n\n          return false;\n        }\n      });\n    },\n    handleDelete: function handleDelete(row) {\n      var _this6 = this;\n\n      this.$confirm('此操作将永久删除, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        delObj(row.id, row.type).then(function () {\n          _this6.handlelistsource();\n\n          _this6.$notify({\n            title: '成功',\n            message: '删除成功',\n            type: 'success',\n            duration: 2000\n          });\n        });\n      });\n    }\n  }\n};",{"version":3,"sources":["RdbSource.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0GA,SAAA,SAAA,EAAA,WAAA,EAAA,MAAA,EAAA,MAAA,EAAA,MAAA,EAAA,MAAA,QAAA,4CAAA;AACA,SAAA,WAAA,EAAA,eAAA,EAAA,UAAA,EAAA,gBAAA,QAAA,mDAAA;AACA,SAAA,UAAA,QAAA,MAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,WADA;AAEA,EAAA,IAFA,kBAEA;AAEA,WAAA;AACA,MAAA,UAAA,EAAA;AACA,QAAA,IAAA,EAAA,EADA;AAEA,QAAA,IAAA,EAAA;AAFA,OADA;AAKA,MAAA,IAAA,EAAA;AACA,QAAA,IAAA,EAAA;AADA,OALA;AAQA,MAAA,OAAA,EAAA;AACA,QAAA,IAAA,EAAA,EADA;AAEA,QAAA,EAAA,EAAA,EAFA;AAGA,QAAA,OAAA,EAAA,EAHA;AAIA,QAAA,GAAA,EAAA,EAJA;AAKA,QAAA,IAAA,EAAA,EALA;AAMA,QAAA,UAAA,EAAA;AANA,OARA;AAgBA,MAAA,QAAA,EAAA;AACA,QAAA,IAAA,EAAA,EADA;AAEA,QAAA,EAAA,EAAA,EAFA;AAGA,QAAA,OAAA,EAAA,EAHA;AAIA,QAAA,GAAA,EAAA,EAJA;AAKA,QAAA,IAAA,EAAA,EALA;AAMA,QAAA,UAAA,EAAA;AANA,OAhBA;AAwBA,MAAA,QAAA,EAAA;AAAA,QAAA,IAAA,EAAA,EAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAxBA;AAyBA,MAAA,IAAA,EAAA;AACA,QAAA,KAAA,EAAA,CADA;AACA;AACA,QAAA,WAAA,EAAA,CAFA;AAEA;AACA,QAAA,QAAA,EAAA,EAHA,CAGA;;AAHA,OAzBA;AA8BA,MAAA,YAAA,EAAA,KA9BA;AA+BA,MAAA,SAAA,EAAA,KA/BA;AAgCA,MAAA,UAAA,EAAA,KAhCA;AAiCA,MAAA,UAAA,EAAA,KAjCA;AAkCA,MAAA,UAAA,EAAA,UAlCA;AAmCA,MAAA,SAAA,EAAA,eAnCA;AAoCA,MAAA,OAAA,EAAA,EApCA;AAqCA,MAAA,UAAA,EAAA,gBArCA;AAsCA,MAAA,QAAA,EAAA,EAtCA;AAuCA,MAAA,QAAA,EAAA,EAvCA;AA0CA,MAAA,MAAA,EAAA,WA1CA;AA2CA,MAAA,IAAA,EAAA,CACA;AACA,QAAA,KAAA,EAAA,QADA;AAEA,QAAA,IAAA,EAAA,QAFA;AAGA,QAAA,KAAA,EAAA,IAHA;AAIA,QAAA,GAAA,EAAA;AAJA,OADA,EAOA;AACA,QAAA,KAAA,EAAA,OADA;AAEA,QAAA,IAAA,EAAA,OAFA;AAGA,QAAA,KAAA,EAAA,IAHA;AAIA,QAAA,GAAA,EAAA;AAJA,OAPA,EAaA;AACA,QAAA,KAAA,EAAA,YADA;AAEA,QAAA,IAAA,EAAA,WAFA;AAGA,QAAA,KAAA,EAAA,IAHA;AAIA,QAAA,GAAA,EAAA;AAJA,OAbA,EAmBA;AACA,QAAA,KAAA,EAAA,KADA;AAEA,QAAA,IAAA,EAAA,KAFA;AAGA,QAAA,KAAA,EAAA,IAHA;AAIA,QAAA,GAAA,EAAA;AAJA,OAnBA;AA3CA,KAAA;AAsEA,GA1EA;AA2EA,EAAA,QAAA,EAAA,EA3EA;AA6EA,EAAA,OAAA,EAAA;AACA,IAAA,QAAA,EAAA,kBAAA,GAAA,EAAA,KAAA,EAAA;AAEA,WAAA,UAAA,GAAA,IAAA;AACA,WAAA,UAAA,CAAA,IAAA,GAAA,GAAA,CAAA,IAAA;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,KAAA,UAAA;AACA,WAAA,gBAAA;AAEA,KARA;AAUA,IAAA,OAAA,EAAA,iBAAA,GAAA,EAAA,KAAA,EAAA;AACA,WAAA,SAAA,GAAA,IAAA;AACA,WAAA,OAAA,GAAA,GAAA;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,KAAA,OAAA;AACA,KAdA;AAgBA,IAAA,UAAA,EAAA,oBAAA,UAAA,EAAA;AACA,WAAA,SAAA,GAAA,IAAA;AACA,WAAA,OAAA,CAAA,IAAA,GAAA,KAAA,UAAA,CAAA,IAAA;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,KAAA,OAAA;AACA,KApBA;AAsBA,IAAA,UAAA,EAAA,oBAAA,GAAA,EAAA,KAAA,EAAA;AACA,WAAA,UAAA,GAAA,IAAA;AACA,WAAA,QAAA,GAAA,GAAA,EACA,KAAA,KAAA,CAAA,OAAA,EAAA,KAAA,QAAA,CADA;AAEA,KA1BA;AA4BA,IAAA,gBA5BA,4BA4BA,KA5BA,EA4BA;AACA,WAAA,IAAA,CAAA,IAAA,GAAA,CAAA;AACA,WAAA,OAAA,CAAA,KAAA,IAAA,EAAA,KAAA,UAAA;AACA,KA/BA;AAiCA,IAAA,OAjCA,mBAiCA,IAjCA,EAiCA,MAjCA,EAiCA;AAAA;;AACA,WAAA,YAAA,GAAA,IAAA;AACA,MAAA,SAAA,CAAA,eAAA;AACA,QAAA,OAAA,EAAA,IAAA,CAAA,WADA;AAEA,QAAA,IAAA,EAAA,IAAA,CAAA,QAFA;AAGA,QAAA,IAAA,EAAA,KAAA,UAAA,CAAA;AAHA,OAAA,EAIA,MAJA,CAAA,CAAA,CAIA,IAJA,CAIA,UAAA,QAAA,EAAA;AACA,QAAA,KAAA,CAAA,QAAA,GAAA,QAAA,CAAA,IAAA,CAAA,IAAA,CAAA,OAAA;AACA,QAAA,KAAA,CAAA,IAAA,CAAA,KAAA,GAAA,QAAA,CAAA,IAAA,CAAA,IAAA,CAAA,KAAA;AACA,QAAA,KAAA,CAAA,YAAA,GAAA,KAAA;AACA,OARA;AASA,KA5CA;;AA8CA;;;;AAIA,IAAA,UAlDA,sBAkDA,QAlDA,EAkDA;AAAA;;AACA,WAAA,KAAA,CAAA,QAAA,EAAA,QAAA,CAAA,UAAA,KAAA,EAAA;AACA,YAAA,KAAA,EAAA;AACA,cAAA,MAAA,GAAA,MAAA,CAAA,OAAA;AACA,cAAA,OAAA,GAAA,EAAA;;AACA,cAAA,MAAA,CAAA,IAAA,IAAA,OAAA,EAAA;AACA,YAAA,OAAA,IAAA,kBAAA,MAAA,CAAA,EAAA,GAAA,GAAA,GAAA,MAAA,CAAA,IAAA,GAAA,GAAA,GAAA,MAAA,CAAA,UAAA,GAAA,EAAA;AACA,WAFA,MAEA,IAAA,MAAA,CAAA,OAAA,CAAA,IAAA,IAAA,QAAA,EAAA;AACA,YAAA,OAAA,IAAA,uBAAA,MAAA,CAAA,EAAA,GAAA,GAAA,GAAA,MAAA,CAAA,IAAA,GAAA,GAAA,GAAA,MAAA,CAAA,UAAA,GAAA,EAAA;AACA,WAFA,MAEA,IAAA,MAAA,CAAA,OAAA,CAAA,IAAA,IAAA,KAAA,EAAA;AACA,YAAA,OAAA,IAAA,gBAAA,MAAA,CAAA,EAAA,GAAA,GAAA,GAAA,MAAA,CAAA,IAAA,GAAA,GAAA,GAAA,MAAA,CAAA,UAAA,GAAA,EAAA;AACA,WAFA,MAEA,IAAA,MAAA,CAAA,OAAA,CAAA,IAAA,IAAA,WAAA,EAAA;AACA,YAAA,OAAA,IAAA,sBAAA,MAAA,CAAA,EAAA,GAAA,GAAA,GAAA,MAAA,CAAA,IAAA,GAAA,EAAA;AACA;;AAEA,UAAA,WAAA,CAAA,eAAA;AACA,YAAA,IAAA,EAAA,MAAA,CAAA,OAAA,CAAA,IADA;AAEA,YAAA,OAAA,EAAA,MAAA,CAAA,OAAA,CAAA,OAFA;AAGA,YAAA,GAAA,EAAA,MAAA,CAAA,OAAA,CAAA,GAHA;AAIA,YAAA,OAAA,EAAA;AAJA,WAAA,EAKA,QALA,CAAA,CAAA,CAKA,IALA,CAKA,UAAA,QAAA,EAAA;AACA,YAAA,MAAA,CAAA,MAAA,CAAA,QAAA,CAAA,IAAA,CAAA,OAAA,EAAA,MAAA,EAAA;AACA,cAAA,iBAAA,EAAA,IADA;AAEA,cAAA,IAAA,EAAA,SAFA;AAGA,cAAA,QAAA,EAAA,kBAAA,MAAA,EAAA,CAEA;AALA,aAAA;AAOA,WAbA;AAcA,SA3BA,MA2BA;AACA,UAAA,MAAA,CAAA,QAAA,CAAA;AACA,YAAA,SAAA,EAAA,IADA;AAEA,YAAA,OAAA,EAAA,cAFA;AAGA,YAAA,IAAA,EAAA;AAHA,WAAA;;AAMA,iBAAA,KAAA;AACA;AACA,OArCA;AAsCA,KAzFA;;AA2FA;;;;AAIA,IAAA,QA/FA,oBA+FA,QA/FA,EA+FA;AAAA;;AACA,WAAA,KAAA,CAAA,QAAA,EAAA,QAAA,CAAA,UAAA,KAAA,EAAA;AACA,YAAA,KAAA,EAAA;AACA,cAAA,MAAA,GAAA,MAAA,CAAA,QAAA;AACA,cAAA,OAAA,GAAA,EAAA;;AACA,cAAA,MAAA,CAAA,IAAA,IAAA,OAAA,EAAA;AACA,YAAA,OAAA,IAAA,kBAAA,MAAA,CAAA,EAAA,GAAA,GAAA,GAAA,MAAA,CAAA,IAAA,GAAA,GAAA,GAAA,MAAA,CAAA,UAAA,GAAA,EAAA;AACA,WAFA,MAEA,IAAA,MAAA,CAAA,IAAA,IAAA,QAAA,EAAA;AACA,YAAA,OAAA,IAAA,uBAAA,MAAA,CAAA,EAAA,GAAA,GAAA,GAAA,MAAA,CAAA,IAAA,GAAA,GAAA,GAAA,MAAA,CAAA,UAAA,GAAA,EAAA;AACA,WAFA,MAEA,IAAA,MAAA,CAAA,IAAA,IAAA,KAAA,EAAA;AACA,YAAA,OAAA,IAAA,gBAAA,MAAA,CAAA,EAAA,GAAA,GAAA,GAAA,MAAA,CAAA,IAAA,GAAA,GAAA,GAAA,MAAA,CAAA,UAAA,GAAA,EAAA;AACA,WAFA,MAEA,IAAA,MAAA,CAAA,IAAA,IAAA,WAAA,EAAA;AACA,YAAA,OAAA,IAAA,sBAAA,MAAA,CAAA,EAAA,GAAA,GAAA,GAAA,MAAA,CAAA,IAAA,GAAA,EAAA;AACA;;AAEA,UAAA,WAAA,CAAA,eAAA;AACA,YAAA,IAAA,EAAA,MAAA,CAAA,IADA;AAEA,YAAA,OAAA,EAAA,MAAA,CAAA,OAFA;AAGA,YAAA,GAAA,EAAA,MAAA,CAAA,GAHA;AAIA,YAAA,OAAA,EAAA;AAJA,WAAA,EAKA,QALA,CAAA,CAAA,CAKA,IALA,CAKA,UAAA,QAAA,EAAA;AACA,YAAA,MAAA,CAAA,MAAA,CAAA,QAAA,CAAA,IAAA,CAAA,OAAA,EAAA,MAAA,EAAA;AACA,cAAA,iBAAA,EAAA,IADA;AAEA,cAAA,IAAA,EAAA,SAFA;AAGA,cAAA,QAAA,EAAA,kBAAA,MAAA,EAAA,CAEA;AALA,aAAA;AAOA,WAbA;AAcA,SA3BA,MA2BA;AACA,UAAA,MAAA,CAAA,QAAA,CAAA;AACA,YAAA,SAAA,EAAA,IADA;AAEA,YAAA,OAAA,EAAA,cAFA;AAGA,YAAA,IAAA,EAAA;AAHA,WAAA;;AAMA,iBAAA,KAAA;AACA;AACA,OArCA;AAsCA,KAtIA;;AAwIA;;;;AAIA,IAAA,UA5IA,sBA4IA,QA5IA,EA4IA;AAAA;;AACA,WAAA,KAAA,CAAA,QAAA,EAAA,QAAA,CAAA,UAAA,KAAA,EAAA;AACA,YAAA,KAAA,EAAA;AACA,UAAA,MAAA,CAAA,MAAA,CAAA,OAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,gBAAA,GAAA,CAAA,MAAA,IAAA,GAAA,EAAA;AACA;AACA,cAAA,MAAA,CAAA,SAAA,GAAA,KAAA;;AACA,cAAA,MAAA,CAAA,gBAAA;;AACA,cAAA,MAAA,CAAA,OAAA,CAAA;AACA,gBAAA,KAAA,EAAA,IADA;AAEA,gBAAA,OAAA,EAAA,MAFA;AAGA,gBAAA,IAAA,EAAA,SAHA;AAIA,gBAAA,QAAA,EAAA;AAJA,eAAA,EAKA,KALA,CAKA,YAAA;AACA,gBAAA,OAAA;AACA,eAPA;AASA,aAbA,MAaA;AACA,cAAA,MAAA,CAAA,MAAA,CAAA,MAAA,EAAA,MAAA,EAAA;AACA,gBAAA,iBAAA,EAAA,IADA;AAEA,gBAAA,IAAA,EAAA,SAFA;AAGA,gBAAA,QAAA,EAAA,kBAAA,MAAA,EAAA,CAEA;AALA,eAAA;AAOA;AACA,WAvBA;AAwBA,SAzBA,MAyBA;AACA,UAAA,MAAA,CAAA,QAAA,CAAA;AACA,YAAA,SAAA,EAAA,IADA;AAEA,YAAA,OAAA,EAAA,cAFA;AAGA,YAAA,IAAA,EAAA;AAHA,WAAA;;AAMA,iBAAA,KAAA;AACA;AACA,OAnCA;AAoCA,KAjLA;AAmLA,IAAA,SAnLA,qBAmLA,QAnLA,EAmLA;AACA,WAAA,KAAA,CAAA,QAAA,EAAA,SAAA;AACA,WAAA,OAAA,CAAA,IAAA,GAAA,KAAA,UAAA,CAAA,IAAA;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,KAAA,OAAA;AACA,KAvLA;AAyLA,IAAA,KAzLA,iBAyLA,QAzLA,EAyLA;AACA,WAAA,KAAA,CAAA,QAAA,EAAA,WAAA;AACA,KA3LA;;AA8LA;;;;AAIA,IAAA,SAlMA,qBAkMA,QAlMA,EAkMA;AAAA;;AACA,WAAA,KAAA,CAAA,QAAA,EAAA,QAAA,CAAA,UAAA,KAAA,EAAA;AACA,YAAA,KAAA,EAAA;AACA,UAAA,MAAA,CAAA,MAAA,CAAA,QAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,gBAAA,GAAA,CAAA,MAAA,IAAA,GAAA,EAAA;AACA,cAAA,MAAA,CAAA,UAAA,GAAA,KAAA;;AACA,cAAA,MAAA,CAAA,gBAAA;;AACA,cAAA,MAAA,CAAA,OAAA,CAAA;AACA,gBAAA,KAAA,EAAA,IADA;AAEA,gBAAA,OAAA,EAAA,MAFA;AAGA,gBAAA,IAAA,EAAA,SAHA;AAIA,gBAAA,QAAA,EAAA;AAJA,eAAA,EAKA,KALA,CAKA,YAAA;AACA,gBAAA,OAAA;AACA,eAPA;AASA,aAZA,MAYA;AACA,cAAA,MAAA,CAAA,MAAA,CAAA,MAAA,EAAA,MAAA,EAAA;AACA,gBAAA,iBAAA,EAAA,IADA;AAEA,gBAAA,IAAA,EAAA,SAFA;AAGA,gBAAA,QAAA,EAAA,kBAAA,MAAA,EAAA,CAEA;AALA,eAAA;AAOA;AACA,WAtBA;AAuBA,SAxBA,MAwBA;AACA,UAAA,MAAA,CAAA,QAAA,CAAA;AACA,YAAA,SAAA,EAAA,IADA;AAEA,YAAA,OAAA,EAAA,cAFA;AAGA,YAAA,IAAA,EAAA;AAHA,WAAA;;AAMA,iBAAA,KAAA;AACA;AACA,OAlCA;AAmCA,KAtOA;AAwOA,IAAA,YAxOA,wBAwOA,GAxOA,EAwOA;AAAA;;AACA,WAAA,QAAA,CAAA,iBAAA,EAAA,IAAA,EAAA;AACA,QAAA,iBAAA,EAAA,IADA;AAEA,QAAA,gBAAA,EAAA,IAFA;AAGA,QAAA,IAAA,EAAA;AAHA,OAAA,EAIA,IAJA,CAIA,YAAA;AACA,QAAA,MAAA,CAAA,GAAA,CAAA,EAAA,EAAA,GAAA,CAAA,IAAA,CAAA,CAAA,IAAA,CAAA,YAAA;AACA,UAAA,MAAA,CAAA,gBAAA;;AACA,UAAA,MAAA,CAAA,OAAA,CAAA;AACA,YAAA,KAAA,EAAA,IADA;AAEA,YAAA,OAAA,EAAA,MAFA;AAGA,YAAA,IAAA,EAAA,SAHA;AAIA,YAAA,QAAA,EAAA;AAJA,WAAA;AAMA,SARA;AASA,OAdA;AAeA;AAxPA;AA7EA,CAAA","sourcesContent":["<template>\n    <div class=\"app-container calendar-list-container\">\n        <basic-container>\n            <avue-card  ref=\"form\" :option=\"option\" :data=\"data\" v-model=\"form\">\n                <template slot=\"menu\" slot-scope=\"scope\">\n                    <span @click.stop=\"addtype(scope.row,scope.index)\">添加数据源</span>\n                    <span @click.stop=\"listtype(scope.row,scope.index)\">查看数据源</span>\n                </template>\n            </avue-card>\n            <el-dialog title=\"添加数据源\" fullscreen :visible.sync=\"addsource\" :append-to-body=\"true\">\n                <avue-form  :option=\"addOption\" :data=\"addData\" v-model=\"addForm\" ref=\"addForm\">\n\n                </avue-form>\n\n                    <div slot=\"footer\"  class=\"el-dialog--center\">\n                        <el-button type=\"primary\" @click=\"handletest('addForm')\">测试连接  </el-button>\n\n                        <el-button type=\"primary\" @click=\"submitForm('addForm')\">保存 </el-button>\n\n                        <el-button @click=\"resetForm('addForm')\">清空 </el-button>\n                    </div>\n            </el-dialog>\n\n            <el-dialog title=\"修改数据源\" fullscreen :visible.sync=\"editsource\" :append-to-body=\"true\">\n                <avue-form  :option=\"editOption\" :data=\"editData\" v-model=\"editForm\" ref=\"editForm\">\n\n                </avue-form>\n\n\n                <div slot=\"footer\"  class=\"el-dialog--center\">\n                    <el-button type=\"primary\" @click=\"edittest('editForm')\">测试连接  </el-button>\n\n                    <el-button type=\"primary\" @click=\"handleOpt('editForm')\">修改 </el-button>\n\n                    <el-button type=\"primary\" @click=\"editsource=false\">关闭 </el-button>\n\n                </div>\n            </el-dialog>\n\n            <el-dialog title=\"数据源列表\" fullscreen :visible.sync=\"listsource\" :append-to-body=\"true\">\n                <el-form :inline=\"true\" :v-model=\"formInline\" ref=\"formInline\" class=\"demo-form-inline\">\n                    <el-form-item label=\"数据库名称\">\n                        <el-input v-model=\"formInline.name\" placeholder=\"数据库名称\"></el-input>\n                    </el-form-item>\n                    <el-form-item label=\"数据库类型\">\n                    <el-select  v-model=\"formInline.type\"  placeholder=\"数据库类型\">\n                        <el-option label=\"MySql\" value=\"MySql\"></el-option>\n                        <el-option label=\"Oracle\" value=\"Oracle\"></el-option>\n                        <el-option label=\"SQLServer\" value=\"SQLServer\"></el-option>\n                        <el-option label=\"DB2\" value=\"DB2\"></el-option>\n                    </el-select >\n\n                    </el-form-item>\n                    <el-form-item>\n                        <el-button type=\"primary\"\n                                   size=\"small\"\n                                   icon=\"el-icon-search\"\n                                   @click=\"handlelistsource('formInline')\">搜索</el-button>\n                    </el-form-item>\n                    <el-form-item>\n                        <el-button\n                                size=\"small\"\n                                icon=\"el-icon-delete\"\n                                @click=\"reset('formInline')\">清空</el-button>\n                    </el-form-item>\n                </el-form>\n                    <avue-crud :option=\"listOption\" :data=\"listData\"\n                               :page=\"page\"\n                               :table-loading=\"tableLoading\"\n\n                               @refresh-change=\"getList\"\n                               @search-change=\"handlelistsource\"\n                               @row-update=\"handleOpt\"\n                               v-model=\"listform\" ref=\"listForm\">\n\n                        <template slot-scope=\"scope\" slot=\"menuLeft\">\n                            <el-button type=\"primary\"\n                                       icon=\"el-icon-plus\"\n                                       size=\"small\"\n                                       @click=\"addalltype('formInline')\">新增</el-button>\n                        </template>\n\n                        <template slot=\"menu\" slot-scope=\"scope\">\n                            <el-button size=\"mini\"\n                                       type=\"text\"\n                                       icon=\"el-icon-edit\"\n                                       @click=\"editbutton(scope.row,scope.index)\">编辑\n                            </el-button>\n\n                            <el-button\n                                    size=\"small\"\n                                    type=\"text\"\n                                    icon=\"el-icon-delete\"\n                                    @click=\"handleDelete(scope.row,scope.index)\">删除\n                            </el-button>\n                        </template>\n                    </avue-crud>\n            </el-dialog>\n        </basic-container>\n\n    </div>\n</template>\n\n\n\n<script>\n    import { fetchList,handleCheck, getObj,addObj, putObj, delObj } from '@/api/portal/metadata/datasource/RdbSource'\n    import { tableOption,addsourceOption,listOption,editsourceOption } from '@/const/crud/portal/metadata/datasource/RdbSource'\n    import { mapGetters } from 'vuex'\n    export default {\n        name: \"RdbSource\",\n        data() {\n\n            return {\n                formInline:{\n                    name:'',\n                    type:'',\n                },\n                form:{\n                    type:''\n                },\n                addForm:{\n                    type:'',\n                    ip:'',\n                    account:'',\n                    pwd:'',\n                    port:'',\n                    serverName:'',\n                },\n                editForm:{\n                    type:'',\n                    ip:'',\n                    account:'',\n                    pwd:'',\n                    port:'',\n                    serverName:'',\n                },\n                listform:{ type:'',name:''},\n                page: {\n                    total: 0, // 总页数\n                    currentPage: 1, // 当前页数\n                    pageSize: 10 // 每页显示多少条\n                },\n                tableLoading: false,\n                addsource:false,\n                listsource:false,\n                editsource:false,\n                listOption:listOption,\n                addOption:addsourceOption,\n                addData:[],\n                editOption:editsourceOption,\n                editData:[],\n                listData:[\n\n                ],\n                option: tableOption,\n                data: [\n                   {\n                    title: 'Oracle',\n                    type:'Oracle',\n                    text1: '25',\n                    img: 'https://gw.alipayobjects.com/zos/rmsportal/WdGqmHpayyMjiEhcKoVE.png'\n                },\n                    {\n                    title: 'MySql',\n                     type:'MySql',\n                    text2: '25',\n                    img: 'https://gw.alipayobjects.com/zos/rmsportal/zOsKZmFRdUtvpqCImOVY.png'\n                },\n                    {\n                    title: 'SQL Server',\n                    type:'SQLServer',\n                    text3: '25',\n                    img: 'https://gw.alipayobjects.com/zos/rmsportal/dURIMkkrRFpPgTuzkwnB.png'\n                },\n                    {\n                        title: 'DB2',\n                        type:'DB2',\n                        text3: '25',\n                        img: 'https://gw.alipayobjects.com/zos/rmsportal/dURIMkkrRFpPgTuzkwnB.png'\n                    }\n                ]\n            }\n        },\n        computed: {\n        },\n        methods:{\n            listtype:function(row, index){\n\n                this.listsource = true;\n                this.formInline.type = row.type\n                this.$emit(\"input\",this.formInline)\n                this.handlelistsource();\n\n            },\n\n            addtype:function(row, index){\n                this.addsource = true;\n                this.addForm = row\n                this.$emit(\"input\",this.addForm)\n            },\n\n            addalltype:function(formInline){\n                this.addsource = true;\n                this.addForm.type = this.formInline.type\n                this.$emit(\"input\",this.addForm)\n            },\n\n            editbutton:function(row, index){\n                this.editsource = true;\n                this.editForm=row,\n                this.$emit(\"input\",this.editForm)\n            },\n\n            handlelistsource(param) {\n                this.page.page = 1;\n                this.getList(this.page,this.formInline)\n            },\n\n            getList(page, params) {\n                this.tableLoading = true\n                fetchList(Object.assign({\n                    current: page.currentPage,\n                    size: page.pageSize,\n                    type: this.formInline.type\n                }, params)).then(response => {\n                    this.listData = response.data.data.records\n                    this.page.total = response.data.data.total\n                    this.tableLoading = false\n                })\n            },\n\n            /**\n             * @title 测试连接数据库\n             * @param params 为当前的数据\n             **/\n            handletest(formName) {\n                this.$refs[formName].validate((valid) => {\n                    if (valid) {\n                var params = this.addForm;\n                let JdbcUrl = '';\n                if(params.type == 'MySql'){\n                    JdbcUrl += 'jdbc:mysql://'+params.ip+':'+params.port+'/'+params.serverName+'';\n                }else if(this.addForm.type == 'Oracle'){\n                    JdbcUrl += 'jdbc:oracle:thin:@'+params.ip+':'+params.port+'/'+params.serverName+'';\n                }else if (this.addForm.type == 'DB2'){\n                    JdbcUrl += 'jdbc:DB2://'+params.ip+':'+params.port+'/'+params.serverName+'';\n                }else if (this.addForm.type == 'SQLServer'){\n                    JdbcUrl += 'jdbc:sqlserver://'+params.ip+':'+params.port+'';\n                }\n\n                handleCheck(Object.assign({\n                    type:this.addForm.type,\n                    account: this.addForm.account,\n                    pwd:this.addForm.pwd,\n                    JdbcUrl:JdbcUrl,\n                }, formName)).then(response => {\n                        this.$alert(response.data.message, '连接结果', {\n                            confirmButtonText: '确定',\n                            type: 'warning',\n                            callback: action => {\n\n                            },\n                        });\n                })\n                    } else {\n                        this.$message({\n                            showClose: true,\n                            message: '请填写完整信息后再测试!',\n                            type: 'error submit!!'\n                        })\n\n                        return false;\n                    }\n                });\n            },\n\n            /**\n             * @title edit测试连接数据库\n             * @param params 为当前的数据\n             **/\n            edittest(formName) {\n                this.$refs[formName].validate((valid) => {\n                    if (valid) {\n                        var params = this.editForm;\n                        let JdbcUrl = '';\n                        if(params.type == 'MySql'){\n                            JdbcUrl += 'jdbc:mysql://'+params.ip+':'+params.port+'/'+params.serverName+'';\n                        }else if(params.type == 'Oracle'){\n                            JdbcUrl += 'jdbc:oracle:thin:@'+params.ip+':'+params.port+'/'+params.serverName+'';\n                        }else if (params.type == 'DB2'){\n                            JdbcUrl += 'jdbc:DB2://'+params.ip+':'+params.port+'/'+params.serverName+'';\n                        }else if (params.type == 'SQLServer'){\n                            JdbcUrl += 'jdbc:sqlserver://'+params.ip+':'+params.port+'';\n                        }\n\n                        handleCheck(Object.assign({\n                            type:params.type,\n                            account: params.account,\n                            pwd:params.pwd,\n                            JdbcUrl:JdbcUrl,\n                        }, formName)).then(response => {\n                            this.$alert(response.data.message, '连接结果', {\n                                confirmButtonText: '确定',\n                                type: 'warning',\n                                callback: action => {\n\n                                },\n                            });\n                        })\n                    } else {\n                        this.$message({\n                            showClose: true,\n                            message: '请填写完整信息后再测试!',\n                            type: 'error submit!!'\n                        })\n\n                        return false;\n                    }\n                });\n            },\n\n            /**\n             * @title 数据添加\n             * @param data 为当前的数据\n             **/\n            submitForm(formName) {\n                this.$refs[formName].validate((valid) => {\n                    if (valid) {\n                        addObj(this.addForm).then((res) => {\n                            if(res.status==200){\n                               /* this.$refs[formName].resetForm();*/\n                                this.addsource = false;\n                                this.handlelistsource();\n                                this.$notify({\n                                    title: '成功',\n                                    message: '保存成功',\n                                    type: 'success',\n                                    duration: 2000\n                                }).catch(() => {\n                                    loading();\n                                });\n\n                            }else{\n                                this.$alert(\"提交失败\", '提交结果', {\n                                    confirmButtonText: '确定',\n                                    type: 'warning',\n                                    callback: action => {\n\n                                    },\n                                });\n                            }\n                        })\n                    } else {\n                        this.$message({\n                            showClose: true,\n                            message: '请填写完整信息后再保存!',\n                            type: 'error submit!!'\n                        })\n\n                        return false;\n                    }\n                });\n            },\n\n            resetForm(formName) {\n                this.$refs[formName].resetForm();\n                this.addForm.type = this.formInline.type\n                this.$emit(\"input\",this.addForm)\n            },\n\n            reset(formName) {\n                this.$refs[formName].resetFields();\n            },\n\n\n            /**\n             * @title 修改\n             * @param data 为当前的数据\n             **/\n            handleOpt(formName){\n                this.$refs[formName].validate((valid) => {\n                    if (valid) {\n                        putObj(this.editForm).then((res) => {\n                            if(res.status==200){\n                                this.editsource = false;\n                                this.handlelistsource();\n                                this.$notify({\n                                    title: '成功',\n                                    message: '修改成功',\n                                    type: 'success',\n                                    duration: 2000\n                                }).catch(() => {\n                                    loading();\n                                });\n\n                            }else{\n                                this.$alert(\"修改失败\", '修改结果', {\n                                    confirmButtonText: '确定',\n                                    type: 'warning',\n                                    callback: action => {\n\n                                    },\n                                });\n                            }\n                        })\n                    } else {\n                        this.$message({\n                            showClose: true,\n                            message: '请填写完整信息后再修改!',\n                            type: 'error submit!!'\n                        })\n\n                        return false;\n                    }\n                });\n            },\n\n            handleDelete(row) {\n                this.$confirm('此操作将永久删除, 是否继续?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                }).then(() => {\n                    delObj(row.id,row.type).then(() => {\n                        this.handlelistsource();\n                        this.$notify({\n                            title: '成功',\n                            message: '删除成功',\n                            type: 'success',\n                            duration: 2000\n                        })\n                    })\n                })\n            },\n            },\n    }\n</script>"],"sourceRoot":"src/views/portal/unit/standard/datasource"}]}