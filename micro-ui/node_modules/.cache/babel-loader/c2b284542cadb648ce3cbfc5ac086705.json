{"remainingRequest":"E:\\intellij work\\micro-ui\\node_modules\\babel-loader\\lib\\index.js!E:\\intellij work\\micro-ui\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\intellij work\\micro-ui\\src\\store\\modules\\logs.js","dependencies":[{"path":"E:\\intellij work\\micro-ui\\src\\store\\modules\\logs.js","mtime":1551167423711},{"path":"E:\\intellij work\\micro-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\intellij work\\micro-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\intellij work\\micro-ui\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport _Object$assign from \"E:\\\\intellij work\\\\micro-ui\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/object/assign\";\nimport _Promise from \"E:\\\\intellij work\\\\micro-ui\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/promise\";\nimport { getStore, setStore } from '@/util/store';\nimport { dateFormat } from '@/filters/';\nimport { sendLogs } from '@/api/admin/log';\nvar logs = {\n  state: {\n    logsList: getStore({\n      name: 'logsList'\n    }) || []\n  },\n  actions: {\n    // 发送错误日志\n    SendLogs: function SendLogs(_ref) {\n      var state = _ref.state,\n          commit = _ref.commit;\n      return new _Promise(function (resolve, reject) {\n        sendLogs(state.logsList).then(function () {\n          commit('CLEAR_LOGS');\n          resolve();\n        }).catch(function (error) {\n          reject(error);\n        });\n      });\n    }\n  },\n  mutations: {\n    ADD_LOGS: function ADD_LOGS(state, _ref2) {\n      var type = _ref2.type,\n          message = _ref2.message,\n          stack = _ref2.stack,\n          info = _ref2.info;\n      state.logsList.push(_Object$assign({\n        url: window.location.href,\n        time: dateFormat(new Date())\n      }, {\n        type: type,\n        message: message,\n        stack: stack,\n        info: info.toString()\n      }));\n      setStore({\n        name: 'logsList',\n        content: state.logsList\n      });\n    },\n    CLEAR_LOGS: function CLEAR_LOGS(state) {\n      state.logsList = [];\n      setStore({\n        name: 'logsList',\n        content: state.logsList\n      });\n    }\n  }\n};\nexport default logs;",{"version":3,"sources":["E:\\intellij work\\micro-ui\\src\\store\\modules\\logs.js"],"names":["getStore","setStore","dateFormat","sendLogs","logs","state","logsList","name","actions","SendLogs","commit","resolve","reject","then","catch","error","mutations","ADD_LOGS","type","message","stack","info","push","url","window","location","href","time","Date","toString","content","CLEAR_LOGS"],"mappings":";;;;AAAA,SAASA,QAAT,EAAmBC,QAAnB,QAAmC,cAAnC;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,SAASC,QAAT,QAAyB,iBAAzB;AAEA,IAAMC,IAAI,GAAG;AACXC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAEN,QAAQ,CAAC;AAAEO,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR,IAAkC;AADvC,GADI;AAIXC,EAAAA,OAAO,EAAE;AACP;AACAC,IAAAA,QAFO,0BAEsB;AAAA,UAAjBJ,KAAiB,QAAjBA,KAAiB;AAAA,UAAVK,MAAU,QAAVA,MAAU;AAC3B,aAAO,aAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCT,QAAAA,QAAQ,CAACE,KAAK,CAACC,QAAP,CAAR,CAAyBO,IAAzB,CAA8B,YAAM;AAClCH,UAAAA,MAAM,CAAC,YAAD,CAAN;AACAC,UAAAA,OAAO;AACR,SAHD,EAGGG,KAHH,CAGS,UAAAC,KAAK,EAAI;AAChBH,UAAAA,MAAM,CAACG,KAAD,CAAN;AACD,SALD;AAMD,OAPM,CAAP;AAQD;AAXM,GAJE;AAiBXC,EAAAA,SAAS,EAAE;AACTC,IAAAA,QAAQ,EAAE,kBAACZ,KAAD,SAA2C;AAAA,UAAjCa,IAAiC,SAAjCA,IAAiC;AAAA,UAA3BC,OAA2B,SAA3BA,OAA2B;AAAA,UAAlBC,KAAkB,SAAlBA,KAAkB;AAAA,UAAXC,IAAW,SAAXA,IAAW;AACnDhB,MAAAA,KAAK,CAACC,QAAN,CAAegB,IAAf,CAAoB,eAAc;AAChCC,QAAAA,GAAG,EAAEC,MAAM,CAACC,QAAP,CAAgBC,IADW;AAEhCC,QAAAA,IAAI,EAAEzB,UAAU,CAAC,IAAI0B,IAAJ,EAAD;AAFgB,OAAd,EAGjB;AACDV,QAAAA,IAAI,EAAJA,IADC;AAEDC,QAAAA,OAAO,EAAPA,OAFC;AAGDC,QAAAA,KAAK,EAALA,KAHC;AAIDC,QAAAA,IAAI,EAAEA,IAAI,CAACQ,QAAL;AAJL,OAHiB,CAApB;AASA5B,MAAAA,QAAQ,CAAC;AAAEM,QAAAA,IAAI,EAAE,UAAR;AAAoBuB,QAAAA,OAAO,EAAEzB,KAAK,CAACC;AAAnC,OAAD,CAAR;AACD,KAZQ;AAaTyB,IAAAA,UAAU,EAAE,oBAAC1B,KAAD,EAAW;AACrBA,MAAAA,KAAK,CAACC,QAAN,GAAiB,EAAjB;AACAL,MAAAA,QAAQ,CAAC;AAAEM,QAAAA,IAAI,EAAE,UAAR;AAAoBuB,QAAAA,OAAO,EAAEzB,KAAK,CAACC;AAAnC,OAAD,CAAR;AACD;AAhBQ;AAjBA,CAAb;AAsCA,eAAeF,IAAf","sourcesContent":["import { getStore, setStore } from '@/util/store'\nimport { dateFormat } from '@/filters/'\nimport { sendLogs } from '@/api/admin/log'\n\nconst logs = {\n  state: {\n    logsList: getStore({ name: 'logsList' }) || []\n  },\n  actions: {\n    // 发送错误日志\n    SendLogs ({ state, commit }) {\n      return new Promise((resolve, reject) => {\n        sendLogs(state.logsList).then(() => {\n          commit('CLEAR_LOGS')\n          resolve()\n        }).catch(error => {\n          reject(error)\n        })\n      })\n    }\n  },\n  mutations: {\n    ADD_LOGS: (state, { type, message, stack, info }) => {\n      state.logsList.push(Object.assign({\n        url: window.location.href,\n        time: dateFormat(new Date())\n      }, {\n        type,\n        message,\n        stack,\n        info: info.toString()\n      }))\n      setStore({ name: 'logsList', content: state.logsList })\n    },\n    CLEAR_LOGS: (state) => {\n      state.logsList = []\n      setStore({ name: 'logsList', content: state.logsList })\n    }\n  }\n\n}\n\nexport default logs\n"]}]}