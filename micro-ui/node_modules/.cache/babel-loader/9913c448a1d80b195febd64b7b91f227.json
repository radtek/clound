{"remainingRequest":"G:\\intellij work\\micro-ui\\node_modules\\babel-loader\\lib\\index.js!G:\\intellij work\\micro-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!G:\\intellij work\\micro-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\intellij work\\micro-ui\\src\\views\\portal\\unit\\standard\\metadata\\tableIndex.vue?vue&type=script&lang=js&","dependencies":[{"path":"G:\\intellij work\\micro-ui\\src\\views\\portal\\unit\\standard\\metadata\\tableIndex.vue","mtime":1560132718232},{"path":"G:\\intellij work\\micro-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\intellij work\\micro-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"G:\\intellij work\\micro-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\intellij work\\micro-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport _JSON$stringify from \"G:\\\\intellij work\\\\micro-ui\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/json/stringify\";\nimport _Object$assign from \"G:\\\\intellij work\\\\micro-ui\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/object/assign\";\nimport _objectSpread from \"G:\\\\intellij work\\\\micro-ui\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { fetchPreViewList, fetchTree, addObj, delObj, fetchList, getObj, putObj, checkDbConn } from \"@/api/portal/metadata/standardfields/table\";\nimport { tableOption, preViewOption, newVue } from '@/const/crud/portal/metadata/standardfields/table';\nimport { mapGetters } from \"vuex\";\nexport default {\n  name: \"table\",\n  data: function data() {\n    return {\n      treeOption: {\n        nodeKey: 'id',\n        addBtn: false,\n        menu: false,\n        props: {\n          label: 'label',\n          value: 'value',\n          children: 'children'\n        }\n      },\n      preViewFlag: false,\n      treeData: [],\n      option: tableOption,\n      preViewOption: preViewOption,\n      checkedKeys: [],\n      tempDbId: undefined,\n      tempDbType: undefined,\n      page: {\n        total: 0,\n        // 总页数\n        currentPage: 1,\n        // 当前页数\n        pageSize: 10,\n        // 每页显示多少条,\n        isAsc: false //是否倒序\n\n      },\n      preViewPage: {\n        total: 0,\n        // 总页数\n        currentPage: 1,\n        // 当前页数\n        pageSize: 10,\n        // 每页显示多少条,\n        isAsc: false //是否倒序\n\n      },\n      list: [],\n      preViewData: [],\n      listLoading: true,\n      preViewlistLoading: true,\n      form: {},\n      selData: [],\n      editId: \"\"\n    };\n  },\n  computed: _objectSpread({}, mapGetters([\"permissions\"])),\n  created: function created() {\n    this.data_table_add = this.permissions[\"data_table_add\"];\n    this.data_table_edit = this.permissions[\"data_table_edit\"];\n    this.data_table_del = this.permissions[\"data_table_del\"];\n    newVue.obj = this;\n    this.init();\n  },\n  methods: {\n    init: function init() {\n      var _this = this;\n\n      fetchTree().then(function (response) {\n        _this.treeData = response.data.data;\n      });\n    },\n    nodeClick: function nodeClick(data) {\n      this.page.page = 1;\n      this.tempDbId = data.id;\n      this.tempDbType = data.value;\n      this.getList(this.page, {\n        dbId: data.id,\n        dbType: data.value\n      });\n    },\n    getList: function getList(page, params) {\n      var _this2 = this;\n\n      this.listLoading = true;\n      fetchList(_Object$assign({\n        current: page.currentPage,\n        size: page.pageSize\n      }, params)).then(function (response) {\n        _this2.list = response.data.data.records;\n        _this2.page.total = response.data.data.total;\n        _this2.listLoading = false;\n      });\n    },\n    getPreViewList: function getPreViewList(preViewPage, params) {\n      var _this3 = this;\n\n      this.preViewData = [];\n\n      if (params === undefined || params === null || params === '') {\n        params = {\n          dbId: this.tempDbId\n        };\n      }\n\n      this.preViewlistLoading = true;\n      fetchPreViewList(_Object$assign({\n        current: preViewPage.currentPage,\n        size: preViewPage.pageSize\n      }, params)).then(function (response) {\n        _this3.preViewData = response.data.data;\n        _this3.preViewPage.total = response.data.data.total;\n        _this3.preViewlistLoading = false;\n      });\n      this.$refs.preViewCrud.selectClear();\n    },\n    handleFilter: function handleFilter(param) {\n      this.page.page = 1;\n      param.dbId = this.tempDbId;\n      param.dbType = this.tempDbType;\n      this.getList(this.page, param);\n    },\n    preHandleFilter: function preHandleFilter(param) {\n      this.preViewPage.page = 1;\n      param.dbId = this.tempDbId;\n      param.dbType = this.tempDbType;\n      this.getPreViewList(this.preViewPage, param);\n    },\n    handleRefreshChange: function handleRefreshChange() {\n      this.getList(this.page, {\n        dbId: this.tempDbId,\n        dbType: this.tempDbType\n      });\n    },\n    preHandleRefreshChange: function preHandleRefreshChange() {\n      this.getPreViewList(this.preViewPage, {\n        dbId: this.tempDbId,\n        dbType: this.tempDbType\n      });\n    },\n    handleOpenBefore: function handleOpenBefore(show, type) {\n      window.boxType = type;\n      this.form.dbId = this.form.dbName;\n      show();\n    },\n    handleUpdate: function handleUpdate(row, index) {\n      this.$refs.crud.rowEdit(row, index);\n      this.tempDbId = row.dbId;\n      this.editId = row.id;\n    },\n    importTable: function importTable() {\n      var _this4 = this;\n\n      if (this.selData.length > 0) {\n        this.$confirm('确认导入?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(function () {\n          var defineForm = {};\n          var nodes = new Array();\n\n          for (var i = 0; i < _this4.selData.length; i++) {\n            nodes.push(JSON.parse(_JSON$stringify(_this4.selData[i])));\n          }\n\n          defineForm['dbId'] = _this4.tempDbId;\n          defineForm['tableList'] = nodes;\n          addObj(defineForm).then(function () {\n            _this4.preViewFlag = false;\n\n            _this4.getList(_this4.page, {\n              dbId: _this4.tempDbId,\n              dbType: _this4.tempDbType\n            });\n\n            _this4.$notify({\n              title: \"成功\",\n              message: \"导入成功\",\n              type: \"success\",\n              duration: 2000\n            });\n          });\n        });\n      } else {\n        this.$message({\n          showClose: true,\n          message: '请选择要导入的表',\n          type: 'warning'\n        });\n      }\n    },\n    selectionChange: function selectionChange(data) {\n      this.selData = data;\n    },\n    update: function update(row, index, done, loading) {\n      var _this5 = this;\n\n      putObj(this.form).then(function () {\n        _this5.getList(_this5.page);\n\n        done();\n\n        _this5.$notify({\n          title: \"成功\",\n          message: \"修改成功\",\n          type: \"success\",\n          duration: 2000\n        });\n      }).catch(function () {\n        loading();\n      });\n    },\n    deletes: function deletes(row, index) {\n      var _this6 = this;\n\n      this.$confirm(\"此操作将永久删除该表(\" + row.name + \"), 是否继续?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        delObj(row.id).then(function () {\n          _this6.getList(_this6.page);\n\n          _this6.$notify({\n            title: \"成功\",\n            message: \"删除成功\",\n            type: \"success\",\n            duration: 2000\n          });\n        }).cache(function () {\n          _this6.$notify({\n            title: \"失败\",\n            message: \"删除失败\",\n            type: \"error\",\n            duration: 2000\n          });\n        });\n      });\n    },\n    handleFieldDetail: function handleFieldDetail(row, index) {\n      this.$router.push({\n        path: this.$router.$avueRouter.getPath({\n          name: \"字段编辑\",\n          src: \"/portal/unit/standard/metadata\"\n        }),\n        query: {\n          tbId: row.id,\n          tbName: row.name,\n          dbId: this.tempDbId\n        }\n      });\n    },\n    isPreView: function isPreView() {\n      if (this.tempDbId === undefined) {\n        return false;\n      }\n\n      if (this.tempDbType == 'Oracle' || this.tempDbType == 'MySql' || this.tempDbType == 'SQLServer' || this.tempDbType == 'DB2') {\n        return false;\n      } else {\n        return true;\n      }\n    },\n    preViewTest: function preViewTest() {\n      var _this7 = this;\n\n      checkDbConn(this.tempDbId).then(function (response) {\n        if (response.data.message === \"测试数据源连接成功\") {\n          _this7.preViewFlag = true;\n\n          _this7.getPreViewList(_this7.preViewPage);\n        } else {\n          _this7.$alert(response.data.message, '连接结果', {\n            confirmButtonText: '确定',\n            type: 'warning',\n            callback: function callback(action) {}\n          });\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["tableIndex.vue"],"names":[],"mappings":"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","sourcesContent":["\n\n<template>\n    <div class=\"metadata\">\n        <basic-container>\n            <el-row :span=\"24\">\n                <el-col :xs=\"24\"\n                        :sm=\"24\"\n                        :md=\"5\"\n                        class=\"metadata__tree\">\n\n                    <avue-tree :option=\"treeOption\"\n                               :data=\"treeData\"\n                               @node-click=\"nodeClick\"></avue-tree>\n                </el-col>\n                <el-col :xs=\"24\"\n                        :sm=\"24\"\n                        :md=\"19\"\n                        class=\"metadata__main\">\n                    <avue-crud :option=\"option\"\n                               ref=\"crud\"\n                               v-model=\"form\"\n                               :page=\"page\"\n                               @on-load=\"getList\"\n                               @row-update=\"update\"\n                               :table-loading=\"listLoading\"\n                               @search-change=\"handleFilter\"\n                               @refresh-change=\"handleRefreshChange\"\n                               :before-open=\"handleOpenBefore\"\n                               :data=\"list\">\n                        <template slot=\"menuLeft\">\n                            <el-button v-if=\"isPreView()\"\n                                       @click=\"preViewTest()\"\n                                       size=\"small\"\n                                       type=\"primary\"\n                                       icon=\"el-icon-download\"\n                                       >预览导入\n                            </el-button>\n                        </template>\n\n                        <template slot=\"menu\"\n                                  slot-scope=\"scope\">\n                            <el-button v-if=\"data_table_edit\"\n                                       size=\"small\"\n                                       type=\"text\"\n                                       icon=\"el-icon-edit\"\n                                       @click=\"handleUpdate(scope.row,scope.index)\">编辑\n                            </el-button>\n                            <el-button v-if=\"data_table_del\"\n                                       size=\"small\"\n                                       type=\"text\"\n                                       icon=\"el-icon-delete\"\n                                       @click=\"deletes(scope.row,scope.index)\">删除\n                            </el-button>\n                            <el-button type=\"text\"\n                                       icon=\"el-icon-tickets\"\n                                       size=\"mini\"\n                                       plain\n                                       @click=\"handleFieldDetail(scope.row,scope.index)\">字段编辑\n                            </el-button>\n                        </template>\n\n                        <template slot=\"dbId\"\n                                  slot-scope=\"scope\">\n                            {{scope.row.dbName}}\n                        </template>\n                    </avue-crud>\n                </el-col>\n            </el-row>\n        </basic-container>\n\n        <el-dialog title=\"预览导入\" fullscreen :visible.sync=\"preViewFlag\" :append-to-body=\"true\">\n            <avue-crud  ref=\"preViewCrud\"\n                        :option=\"preViewOption\"\n                        :data=\"preViewData\"\n                        :page=\"preViewPage\"\n                        @on-load=\"getPreViewList\"\n                        :table-loading=\"preViewlistLoading\"\n                        @search-change=\"preHandleFilter\"\n                        @refresh-change=\"preHandleRefreshChange\"\n                        @selection-change=\"selectionChange\">\n                <template slot=\"menuLeft\">\n                    <el-button v-if=\"data_table_add\"\n                               @click=\"importTable\"\n                               size=\"small\"\n                               type=\"primary\"\n                               icon=\"el-icon-download\">导入\n                    </el-button>\n                </template>\n            </avue-crud>\n        </el-dialog>\n\n    </div>\n\n</template>\n\n<script>\n    import {fetchPreViewList,fetchTree,addObj, delObj, fetchList, getObj, putObj,checkDbConn} from \"@/api/portal/metadata/standardfields/table\";\n    import {tableOption,preViewOption,newVue} from '@/const/crud/portal/metadata/standardfields/table';\n    import {mapGetters} from \"vuex\";\n\n    export default {\n        name: \"table\",\n        data() {\n            return {\n                treeOption: {\n                    nodeKey: 'id',\n                    addBtn: false,\n                    menu: false,\n                    props: {\n                        label: 'label',\n                        value: 'value',\n                        children:'children'\n                    }\n                },\n                preViewFlag:false,\n                treeData: [],\n                option: tableOption,\n                preViewOption: preViewOption,\n                checkedKeys: [],\n                tempDbId:undefined,\n                tempDbType:undefined,\n                page: {\n                    total: 0, // 总页数\n                    currentPage: 1, // 当前页数\n                    pageSize: 10, // 每页显示多少条,\n                    isAsc: false//是否倒序\n                },\n                preViewPage: {\n                    total: 0, // 总页数\n                    currentPage: 1, // 当前页数\n                    pageSize: 10, // 每页显示多少条,\n                    isAsc: false//是否倒序\n                },\n                list: [],\n                preViewData: [],\n                listLoading: true,\n                preViewlistLoading: true,\n                form: {},\n                selData: [],\n                editId:\"\",\n            };\n        },\n        computed: {\n            ...mapGetters([\"permissions\"])\n        },\n\n        created() {\n            this.data_table_add = this.permissions[\"data_table_add\"];\n            this.data_table_edit = this.permissions[\"data_table_edit\"];\n            this.data_table_del = this.permissions[\"data_table_del\"];\n            newVue.obj = this\n            this.init();\n        },\n        methods: {\n            init() {\n                fetchTree().then(response => {\n                    this.treeData = response.data.data;\n                });\n            },\n            nodeClick(data) {\n                this.page.page = 1;\n                this.tempDbId=data.id;\n                this.tempDbType = data.value;\n                this.getList(this.page, {dbId: data.id,dbType:data.value});\n            },\n            getList(page, params) {\n                this.listLoading = true;\n                fetchList(Object.assign({\n                    current: page.currentPage,\n                    size: page.pageSize\n                }, params)).then(response => {\n                    this.list = response.data.data.records;\n                    this.page.total = response.data.data.total\n                    this.listLoading = false;\n                });\n            },\n            getPreViewList(preViewPage, params) {\n                this.preViewData =[]\n               if(params === undefined ||params === null || params === '' ){\n                   params ={dbId: this.tempDbId}\n               }\n                this.preViewlistLoading = true;\n                fetchPreViewList(Object.assign({\n                    current: preViewPage.currentPage,\n                    size: preViewPage.pageSize\n                }, params)).then(response => {\n                    this.preViewData = response.data.data;\n                    this.preViewPage.total = response.data.data.total\n                    this.preViewlistLoading = false;\n                });\n                this.$refs.preViewCrud.selectClear();\n            },\n            handleFilter(param) {\n                this.page.page = 1;\n                param.dbId=this.tempDbId;\n                param.dbType=this.tempDbType\n                this.getList(this.page, param);\n            },\n            preHandleFilter(param) {\n                this.preViewPage.page = 1;\n                param.dbId=this.tempDbId;\n                param.dbType=this.tempDbType\n                this.getPreViewList(this.preViewPage, param);\n            },\n            handleRefreshChange() {\n                this.getList(this.page,{dbId: this.tempDbId,dbType:this.tempDbType})\n            },\n            preHandleRefreshChange() {\n                this.getPreViewList(this.preViewPage,{dbId: this.tempDbId,dbType:this.tempDbType})\n            },\n            handleOpenBefore(show, type) {\n                window.boxType = type;\n                this.form.dbId = this.form.dbName;\n                show();\n            },\n            handleUpdate(row, index) {\n                this.$refs.crud.rowEdit(row, index);\n                this.tempDbId = row.dbId\n                this.editId=row.id;\n            },\n            importTable() {\n                if(this.selData.length > 0){\n                    this.$confirm('确认导入?', '提示', {\n                        confirmButtonText: '确定',\n                        cancelButtonText: '取消',\n                        type: 'warning'\n                    }).then(() => {\n                        let defineForm ={}\n                        var nodes = new Array();\n                        for(let i = 0; i < this.selData.length; i++){\n                            nodes.push(JSON.parse(JSON.stringify(this.selData[i])));\n                        }\n                        defineForm['dbId']=this.tempDbId\n                        defineForm['tableList']=nodes\n                        addObj(defineForm).then(() => {\n                            this.preViewFlag = false;\n                            this.getList(this.page,{dbId: this.tempDbId,dbType:this.tempDbType})\n                            this.$notify({\n                                title: \"成功\",\n                                message: \"导入成功\",\n                                type: \"success\",\n                                duration: 2000\n                            });\n                        })\n                    })\n                }else {\n                    this.$message({\n                        showClose: true,\n                        message: '请选择要导入的表',\n                        type: 'warning'\n                    })\n                }\n            },\n            selectionChange(data){\n                this.selData = data\n            },\n            update(row, index, done, loading) {\n                putObj(this.form).then(() => {\n                    this.getList(this.page);\n                    done();\n                    this.$notify({\n                        title: \"成功\",\n                        message: \"修改成功\",\n                        type: \"success\",\n                        duration: 2000\n                    });\n                }).catch(() => {\n                    loading();\n                });\n            },\n            deletes(row, index) {\n                this.$confirm(\n                    \"此操作将永久删除该表(\" + row.name + \"), 是否继续?\",\n                    \"提示\",\n                    {\n                        confirmButtonText: \"确定\",\n                        cancelButtonText: \"取消\",\n                        type: \"warning\"\n                    }\n                ).then(() => {\n                    delObj(row.id).then(() => {\n                        this.getList(this.page)\n                        this.$notify({\n                            title: \"成功\",\n                            message: \"删除成功\",\n                            type: \"success\",\n                            duration: 2000\n                        });\n                    }).cache(() => {\n                        this.$notify({\n                            title: \"失败\",\n                            message: \"删除失败\",\n                            type: \"error\",\n                            duration: 2000\n                        });\n                    });\n                });\n            },\n\n            handleFieldDetail(row, index){\n                this.$router.push({\n                    path: this.$router.$avueRouter.getPath({\n                        name: \"字段编辑\",\n                        src: \"/portal/unit/standard/metadata\"\n                    }),\n                    query: {tbId: row.id,tbName:row.name,dbId:this.tempDbId}\n                });\n            },\n\n            isPreView:function () {\n                if(this.tempDbId===undefined){\n                    return false;\n                }\n                if(this.tempDbType=='Oracle'||this.tempDbType=='MySql'||this.tempDbType=='SQLServer'||this.tempDbType=='DB2'){\n                    return false;\n                }else{\n                    return true;\n                }\n            },\n\n            preViewTest:function () {\n                checkDbConn(this.tempDbId).then(response => {\n                    if(response.data.message===\"测试数据源连接成功\"){\n                        this.preViewFlag=true\n                        this.getPreViewList(this.preViewPage);\n                    }else{\n                        this.$alert(response.data.message, '连接结果', {\n                            confirmButtonText: '确定',\n                            type: 'warning',\n                            callback: action => {\n                            },\n                        });\n                    }\n\n                })\n\n            }\n\n        }\n    };\n</script>\n<style lang=\"scss\">\n    .metadata {\n        height: 100%;\n\n        &__tree {\n            padding-top: 3px;\n            padding-right: 20px;\n        }\n\n        &__main {\n            .el-card__body {\n                padding-top: 0;\n            }\n        }\n    }\n</style>\n\n"],"sourceRoot":"src/views/portal/unit/standard/metadata"}]}