{"remainingRequest":"E:\\intellij work\\micro-ui\\node_modules\\babel-loader\\lib\\index.js!E:\\intellij work\\micro-ui\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\intellij work\\micro-ui\\src\\util\\date.js","dependencies":[{"path":"E:\\intellij work\\micro-ui\\src\\util\\date.js","mtime":1551167423975},{"path":"E:\\intellij work\\micro-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\intellij work\\micro-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\intellij work\\micro-ui\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es6.regexp.replace\";\nexport var calcDate = function calcDate(date1, date2) {\n  var date3 = date2 - date1;\n  var days = Math.floor(date3 / (24 * 3600 * 1000));\n  var leave1 = date3 % (24 * 3600 * 1000); // 计算天数后剩余的毫秒数\n\n  var hours = Math.floor(leave1 / (3600 * 1000));\n  var leave2 = leave1 % (3600 * 1000); // 计算小时数后剩余的毫秒数\n\n  var minutes = Math.floor(leave2 / (60 * 1000));\n  var leave3 = leave2 % (60 * 1000); // 计算分钟数后剩余的毫秒数\n\n  var seconds = Math.round(date3 / 1000);\n  return {\n    leave1: leave1,\n    leave2: leave2,\n    leave3: leave3,\n    days: days,\n    hours: hours,\n    minutes: minutes,\n    seconds: seconds\n  };\n};\n/**\n * 日期格式化\n */\n\nexport function dateFormat(date) {\n  var format = 'yyyy-MM-dd hh:mm:ss';\n\n  if (date != 'Invalid Date') {\n    var o = {\n      \"M+\": date.getMonth() + 1,\n      //month\n      \"d+\": date.getDate(),\n      //day\n      \"h+\": date.getHours(),\n      //hour\n      \"m+\": date.getMinutes(),\n      //minute\n      \"s+\": date.getSeconds(),\n      //second\n      \"q+\": Math.floor((date.getMonth() + 3) / 3),\n      //quarter\n      \"S\": date.getMilliseconds() //millisecond\n\n    };\n    if (/(y+)/.test(format)) format = format.replace(RegExp.$1, (date.getFullYear() + \"\").substr(4 - RegExp.$1.length));\n\n    for (var k in o) {\n      if (new RegExp(\"(\" + k + \")\").test(format)) format = format.replace(RegExp.$1, RegExp.$1.length == 1 ? o[k] : (\"00\" + o[k]).substr((\"\" + o[k]).length));\n    }\n\n    return format;\n  }\n\n  return '';\n}",{"version":3,"sources":["E:\\intellij work\\micro-ui\\src\\util\\date.js"],"names":["calcDate","date1","date2","date3","days","Math","floor","leave1","hours","leave2","minutes","leave3","seconds","round","dateFormat","date","format","o","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","test","replace","RegExp","$1","getFullYear","substr","length","k"],"mappings":";;AAAA,OAAO,IAAMA,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAQC,KAAR,EAAkB;AACxC,MAAIC,KAAK,GAAGD,KAAK,GAAGD,KAApB;AAEA,MAAIG,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWH,KAAK,IAAI,KAAK,IAAL,GAAY,IAAhB,CAAhB,CAAX;AAEA,MAAII,MAAM,GAAGJ,KAAK,IAAI,KAAK,IAAL,GAAY,IAAhB,CAAlB,CALwC,CAKA;;AACxC,MAAIK,KAAK,GAAGH,IAAI,CAACC,KAAL,CAAWC,MAAM,IAAI,OAAO,IAAX,CAAjB,CAAZ;AAEA,MAAIE,MAAM,GAAGF,MAAM,IAAI,OAAO,IAAX,CAAnB,CARwC,CAQJ;;AACpC,MAAIG,OAAO,GAAGL,IAAI,CAACC,KAAL,CAAWG,MAAM,IAAI,KAAK,IAAT,CAAjB,CAAd;AAEA,MAAIE,MAAM,GAAGF,MAAM,IAAI,KAAK,IAAT,CAAnB,CAXwC,CAWN;;AAClC,MAAIG,OAAO,GAAGP,IAAI,CAACQ,KAAL,CAAWV,KAAK,GAAG,IAAnB,CAAd;AACA,SAAO;AACLI,IAAAA,MAAM,EAANA,MADK;AAELE,IAAAA,MAAM,EAANA,MAFK;AAGLE,IAAAA,MAAM,EAANA,MAHK;AAILP,IAAAA,IAAI,EAAEA,IAJD;AAKLI,IAAAA,KAAK,EAAEA,KALF;AAMLE,IAAAA,OAAO,EAAEA,OANJ;AAOLE,IAAAA,OAAO,EAAEA;AAPJ,GAAP;AASD,CAtBM;AAwBP;;;;AAGA,OAAO,SAASE,UAAT,CAAoBC,IAApB,EAA0B;AAC/B,MAAIC,MAAM,GAAG,qBAAb;;AACA,MAAID,IAAI,IAAI,cAAZ,EAA4B;AAC1B,QAAIE,CAAC,GAAG;AACN,YAAMF,IAAI,CAACG,QAAL,KAAkB,CADlB;AACqB;AAC3B,YAAMH,IAAI,CAACI,OAAL,EAFA;AAEgB;AACtB,YAAMJ,IAAI,CAACK,QAAL,EAHA;AAGiB;AACvB,YAAML,IAAI,CAACM,UAAL,EAJA;AAImB;AACzB,YAAMN,IAAI,CAACO,UAAL,EALA;AAKmB;AACzB,YAAMjB,IAAI,CAACC,KAAL,CAAW,CAACS,IAAI,CAACG,QAAL,KAAkB,CAAnB,IAAwB,CAAnC,CANA;AAMuC;AAC7C,WAAKH,IAAI,CAACQ,eAAL,EAPC,CAOsB;;AAPtB,KAAR;AASA,QAAI,OAAOC,IAAP,CAAYR,MAAZ,CAAJ,EAAyBA,MAAM,GAAGA,MAAM,CAACS,OAAP,CAAeC,MAAM,CAACC,EAAtB,EAChC,CAACZ,IAAI,CAACa,WAAL,KAAqB,EAAtB,EAA0BC,MAA1B,CAAiC,IAAIH,MAAM,CAACC,EAAP,CAAUG,MAA/C,CADgC,CAAT;;AAEzB,SAAK,IAAIC,CAAT,IAAcd,CAAd;AACE,UAAI,IAAIS,MAAJ,CAAW,MAAMK,CAAN,GAAU,GAArB,EAA0BP,IAA1B,CAA+BR,MAA/B,CAAJ,EACEA,MAAM,GAAGA,MAAM,CAACS,OAAP,CAAeC,MAAM,CAACC,EAAtB,EACPD,MAAM,CAACC,EAAP,CAAUG,MAAV,IAAoB,CAApB,GAAwBb,CAAC,CAACc,CAAD,CAAzB,GACE,CAAC,OAAOd,CAAC,CAACc,CAAD,CAAT,EAAcF,MAAd,CAAqB,CAAC,KAAKZ,CAAC,CAACc,CAAD,CAAP,EAAYD,MAAjC,CAFK,CAAT;AAFJ;;AAKA,WAAOd,MAAP;AACD;;AACD,SAAO,EAAP;AAED","sourcesContent":["export const calcDate = (date1, date2) => {\n  var date3 = date2 - date1\n\n  var days = Math.floor(date3 / (24 * 3600 * 1000))\n\n  var leave1 = date3 % (24 * 3600 * 1000) // 计算天数后剩余的毫秒数\n  var hours = Math.floor(leave1 / (3600 * 1000))\n\n  var leave2 = leave1 % (3600 * 1000) // 计算小时数后剩余的毫秒数\n  var minutes = Math.floor(leave2 / (60 * 1000))\n\n  var leave3 = leave2 % (60 * 1000) // 计算分钟数后剩余的毫秒数\n  var seconds = Math.round(date3 / 1000)\n  return {\n    leave1,\n    leave2,\n    leave3,\n    days: days,\n    hours: hours,\n    minutes: minutes,\n    seconds: seconds\n  }\n}\n\n/**\n * 日期格式化\n */\nexport function dateFormat(date) {\n  let format = 'yyyy-MM-dd hh:mm:ss';\n  if (date != 'Invalid Date') {\n    var o = {\n      \"M+\": date.getMonth() + 1, //month\n      \"d+\": date.getDate(), //day\n      \"h+\": date.getHours(), //hour\n      \"m+\": date.getMinutes(), //minute\n      \"s+\": date.getSeconds(), //second\n      \"q+\": Math.floor((date.getMonth() + 3) / 3), //quarter\n      \"S\": date.getMilliseconds() //millisecond\n    }\n    if (/(y+)/.test(format)) format = format.replace(RegExp.$1,\n      (date.getFullYear() + \"\").substr(4 - RegExp.$1.length));\n    for (var k in o)\n      if (new RegExp(\"(\" + k + \")\").test(format))\n        format = format.replace(RegExp.$1,\n          RegExp.$1.length == 1 ? o[k] :\n            (\"00\" + o[k]).substr((\"\" + o[k]).length));\n    return format;\n  }\n  return '';\n\n}\n"]}]}