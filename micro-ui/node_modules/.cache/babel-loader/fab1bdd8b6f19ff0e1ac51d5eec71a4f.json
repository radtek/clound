{"remainingRequest":"G:\\intellij work\\micro-ui\\node_modules\\babel-loader\\lib\\index.js!G:\\intellij work\\micro-ui\\node_modules\\eslint-loader\\index.js??ref--13-0!G:\\intellij work\\micro-ui\\src\\const\\crud\\portal\\area\\area.js","dependencies":[{"path":"G:\\intellij work\\micro-ui\\src\\const\\crud\\portal\\area\\area.js","mtime":1559197677080},{"path":"G:\\intellij work\\micro-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\intellij work\\micro-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"G:\\intellij work\\micro-ui\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { checkName, checkCode } from \"@/api/portal/area/area\";\nvar newVue = {\n  obj: null\n};\n\nvar validateName = function validateName(rule, value, callback) {\n  checkName(value).then(function (response) {\n    var result = response.data.data;\n\n    if (window.boxType === 'edit') {\n      if (result.id === newVue.obj.editId) {\n        callback();\n      } else {\n        callback(new Error('该名称已经存在'));\n      }\n    }\n\n    if (result !== null) {\n      callback(new Error('字段名已经存在'));\n    } else {\n      callback();\n    }\n  });\n};\n\nvar validateCode = function validateCode(rule, value, callback) {\n  checkCode(value).then(function (response) {\n    var result = response.data.data;\n\n    if (window.boxType === 'edit') {\n      if (result.id === newVue.obj.editId) {\n        callback();\n      } else {\n        callback(new Error('该区域名称已经存在'));\n      }\n    }\n\n    if (result !== null) {\n      callback(new Error('该区域名称已经存在'));\n    } else {\n      callback();\n    }\n  });\n};\n\nexport var tableOption = {\n  expandLevel: 2,\n  border: true,\n  index: true,\n  tree: true,\n  indexLabel: '序号',\n  stripe: true,\n  menuAlign: 'center',\n  editBtn: false,\n  delBtn: false,\n  align: 'center',\n  addBtn: false,\n  viewBtn: true,\n  menuWidth: '190',\n  column: [{\n    overHidden: true,\n    label: '名称',\n    prop: 'name',\n    span: 12,\n    search: 'true',\n    minWidth: '120',\n    align: 'left',\n    rules: [{\n      required: true,\n      message: '名称不能为空',\n      trigger: 'blur'\n    }, {\n      validator: validateName,\n      trigger: 'blur'\n    }]\n  }, {\n    overHidden: true,\n    label: '全称',\n    prop: 'fullName',\n    span: 12,\n    minWidth: '120',\n    align: 'left',\n    rules: [{\n      required: true,\n      message: '名称不能为空',\n      trigger: 'blur'\n    }]\n  }, {\n    label: '父级菜单',\n    prop: 'parentId',\n    span: 12,\n    hide: true,\n    formslot: true,\n    slot: true,\n    valueDefault: ''\n  }, {\n    label: '区域编码',\n    prop: 'code',\n    span: 12,\n    rules: [{\n      required: true,\n      message: '区域编码不能为空',\n      trigger: 'blur'\n    }, {\n      validator: validateCode,\n      trigger: 'blur'\n    }]\n  }, {\n    label: '排序',\n    prop: 'sort',\n    span: 12,\n    type: 'number',\n    hide: true,\n    rules: [{\n      required: true,\n      message: '请输入排序',\n      trigger: 'blur'\n    }]\n  }, {\n    label: '区域类型',\n    prop: 'type',\n    type: 'select',\n    search: true,\n    hide: true,\n    dicData: [{\n      label: '国家',\n      value: '1'\n    }, {\n      label: '省份',\n      value: '2'\n    }, {\n      label: '地市',\n      value: '3'\n    }, {\n      label: '区县',\n      value: '4'\n    }],\n    rules: [{\n      required: true,\n      message: '类型不能为空',\n      trigger: 'blur'\n    }]\n  }, {\n    width: 120,\n    label: '备注',\n    prop: 'remarks',\n    span: 12,\n    overHidden: true\n  }]\n};\nexport { newVue };",{"version":3,"sources":["G:\\intellij work\\micro-ui\\src\\const\\crud\\portal\\area\\area.js"],"names":["checkName","checkCode","newVue","obj","validateName","rule","value","callback","then","response","result","data","window","boxType","id","editId","Error","validateCode","tableOption","expandLevel","border","index","tree","indexLabel","stripe","menuAlign","editBtn","delBtn","align","addBtn","viewBtn","menuWidth","column","overHidden","label","prop","span","search","minWidth","rules","required","message","trigger","validator","hide","formslot","slot","valueDefault","type","dicData","width"],"mappings":"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","sourcesContent":["import {checkName,checkCode} from \"@/api/portal/area/area\";\n\nlet newVue = {\n    obj: null\n}\nvar validateName = (rule, value, callback) => {\n    checkName(value).then(response => {\n        let result = response.data.data\n        if (window.boxType === 'edit'){\n            if (result.id===newVue.obj.editId) {\n                callback()\n            }else{\n                callback(new Error('该名称已经存在'))\n            }\n        }\n        if (result !== null) {\n            callback(new Error('字段名已经存在'))\n        } else {\n            callback()\n        }\n    })\n}\nvar validateCode = (rule, value, callback) => {\n    checkCode(value).then(response => {\n        let result = response.data.data\n        if (window.boxType === 'edit'){\n            if (result.id===newVue.obj.editId) {\n                callback()\n            }else{\n                callback(new Error('该区域名称已经存在'))\n            }\n        }\n        if (result !== null) {\n            callback(new Error('该区域名称已经存在'))\n        } else {\n            callback()\n        }\n    })\n}\nexport const tableOption = {\n    expandLevel: 2,\n    border: true,\n    index: true,\n    tree:true,\n    indexLabel: '序号',\n    stripe: true,\n    menuAlign: 'center',\n    editBtn: false,\n    delBtn: false,\n    align: 'center',\n    addBtn: false,\n    viewBtn: true,\n    menuWidth:'190',\n    column: [\n        {\n        overHidden:true,\n        label: '名称',\n        prop: 'name',\n        span: 12,\n        search:'true',\n        minWidth:'120',\n        align:'left',\n        rules: [{\n            required: true,\n            message: '名称不能为空',\n            trigger: 'blur'\n        },{ validator: validateName, trigger: 'blur' }\n        ]\n    },\n        {\n            overHidden:true,\n            label: '全称',\n            prop: 'fullName',\n            span: 12,\n            minWidth:'120',\n            align:'left',\n            rules: [{\n                required: true,\n                message: '名称不能为空',\n                trigger: 'blur'\n            }\n            ]\n        },\n        {\n            label: '父级菜单',\n            prop: 'parentId',\n            span: 12,\n            hide: true,\n            formslot: true,\n            slot: true,\n            valueDefault:''\n        },\n        {\n            label: '区域编码',\n            prop: 'code',\n            span: 12,\n            rules: [{\n                required: true,\n                message: '区域编码不能为空',\n                trigger: 'blur'\n            },{ validator: validateCode, trigger: 'blur' }]\n        },\n        {\n            label: '排序',\n            prop: 'sort',\n            span: 12,\n            type: 'number',\n            hide:true,\n            rules: [{\n                required: true,\n                message: '请输入排序',\n                trigger: 'blur'\n            }]\n        },\n        {\n            label: '区域类型',\n            prop: 'type',\n            type:'select',\n            search:true,\n            hide:true,\n            dicData:[\n                {label: '国家', value: '1'},\n                {label: '省份', value: '2'},\n                {label: '地市', value: '3'},\n                {label: '区县', value: '4'}\n                ],\n            rules: [{\n                required: true,\n                message: '类型不能为空',\n                trigger: 'blur'\n            }\n            ]\n        },\n        {\n            width: 120,\n            label: '备注',\n            prop: 'remarks',\n            span: 12,\n            overHidden:true,\n        }\n\n        ]\n}\nexport { newVue }"]}]}