{"remainingRequest":"E:\\intellij work\\micro-ui\\node_modules\\babel-loader\\lib\\index.js!E:\\intellij work\\micro-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\intellij work\\micro-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\intellij work\\micro-ui\\node_modules\\vue-quill-editor\\src\\editor.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\intellij work\\micro-ui\\node_modules\\vue-quill-editor\\src\\editor.vue","mtime":1553754713238},{"path":"E:\\intellij work\\micro-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\intellij work\\micro-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\intellij work\\micro-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\intellij work\\micro-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.define-property\";\nimport _Object$assign from \"E:\\\\intellij work\\\\micro-ui\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/object/assign\";\n//\n//\n//\n//\n//\n//\n//\n// require sources\nimport _Quill from 'quill';\nimport defaultOptions from './options';\nvar Quill = window.Quill || _Quill; // pollfill\n\nif (typeof _Object$assign != 'function') {\n  Object.defineProperty(Object, 'assign', {\n    value: function value(target, varArgs) {\n      if (target == null) {\n        throw new TypeError('Cannot convert undefined or null to object');\n      }\n\n      var to = Object(target);\n\n      for (var index = 1; index < arguments.length; index++) {\n        var nextSource = arguments[index];\n\n        if (nextSource != null) {\n          for (var nextKey in nextSource) {\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n\n      return to;\n    },\n    writable: true,\n    configurable: true\n  });\n} // export\n\n\nexport default {\n  name: 'quill-editor',\n  data: function data() {\n    return {\n      _options: {},\n      _content: '',\n      defaultOptions: defaultOptions\n    };\n  },\n  props: {\n    content: String,\n    value: String,\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    options: {\n      type: Object,\n      required: false,\n      default: function _default() {\n        return {};\n      }\n    },\n    globalOptions: {\n      type: Object,\n      required: false,\n      default: function _default() {\n        return {};\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.initialize();\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.quill = null;\n    delete this.quill;\n  },\n  methods: {\n    // Init Quill instance\n    initialize: function initialize() {\n      var _this = this;\n\n      if (this.$el) {\n        // Options\n        this._options = _Object$assign({}, this.defaultOptions, this.globalOptions, this.options); // Instance\n\n        this.quill = new Quill(this.$refs.editor, this._options);\n        this.quill.enable(false); // Set editor content\n\n        if (this.value || this.content) {\n          this.quill.pasteHTML(this.value || this.content);\n        } // Disabled editor\n\n\n        if (!this.disabled) {\n          this.quill.enable(true);\n        } // Mark model as touched if editor lost focus\n\n\n        this.quill.on('selection-change', function (range) {\n          if (!range) {\n            _this.$emit('blur', _this.quill);\n          } else {\n            _this.$emit('focus', _this.quill);\n          }\n        }); // Update model if text changes\n\n        this.quill.on('text-change', function (delta, oldDelta, source) {\n          var html = _this.$refs.editor.children[0].innerHTML;\n          var quill = _this.quill;\n\n          var text = _this.quill.getText();\n\n          if (html === '<p><br></p>') html = '';\n          _this._content = html;\n\n          _this.$emit('input', _this._content);\n\n          _this.$emit('change', {\n            html: html,\n            text: text,\n            quill: quill\n          });\n        }); // Emit ready event\n\n        this.$emit('ready', this.quill);\n      }\n    }\n  },\n  watch: {\n    // Watch content change\n    content: function content(newVal, oldVal) {\n      if (this.quill) {\n        if (newVal && newVal !== this._content) {\n          this._content = newVal;\n          this.quill.pasteHTML(newVal);\n        } else if (!newVal) {\n          this.quill.setText('');\n        }\n      }\n    },\n    // Watch content change\n    value: function value(newVal, oldVal) {\n      if (this.quill) {\n        if (newVal && newVal !== this._content) {\n          this._content = newVal;\n          this.quill.pasteHTML(newVal);\n        } else if (!newVal) {\n          this.quill.setText('');\n        }\n      }\n    },\n    // Watch disabled change\n    disabled: function disabled(newVal, oldVal) {\n      if (this.quill) {\n        this.quill.enable(!newVal);\n      }\n    }\n  }\n};",{"version":3,"sources":["editor.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"quill-editor\">\r\n    <slot name=\"toolbar\"></slot>\r\n    <div ref=\"editor\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  // require sources\r\n  import _Quill from 'quill'\r\n  import defaultOptions from './options'\r\n  const Quill = window.Quill || _Quill\r\n\r\n  // pollfill\r\n  if (typeof Object.assign != 'function') {\r\n    Object.defineProperty(Object, 'assign', {\r\n      value(target, varArgs) {\r\n        if (target == null) {\r\n          throw new TypeError('Cannot convert undefined or null to object')\r\n        }\r\n        const to = Object(target)\r\n        for (let index = 1; index < arguments.length; index++) {\r\n          const nextSource = arguments[index]\r\n          if (nextSource != null) {\r\n            for (const nextKey in nextSource) {\r\n              if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\r\n                to[nextKey] = nextSource[nextKey]\r\n              }\r\n            }\r\n          }\r\n        }\r\n        return to\r\n      },\r\n      writable: true,\r\n      configurable: true\r\n    })\r\n  }\r\n\r\n  // export\r\n  export default {\r\n    name: 'quill-editor',\r\n    data() {\r\n      return {\r\n        _options: {},\r\n        _content: '',\r\n        defaultOptions\r\n      }\r\n    },\r\n    props: {\r\n      content: String,\r\n      value: String,\r\n      disabled: {\r\n        type: Boolean,\r\n        default: false\r\n      },\r\n      options: {\r\n        type: Object,\r\n        required: false,\r\n        default: () => ({})\r\n      },\r\n      globalOptions: {\r\n        type: Object,\r\n        required: false,\r\n        default: () => ({})\r\n      }\r\n    },\r\n    mounted() {\r\n      this.initialize()\r\n    },\r\n    beforeDestroy() {\r\n      this.quill = null\r\n      delete this.quill\r\n    },\r\n    methods: {\r\n      // Init Quill instance\r\n      initialize() {\r\n        if (this.$el) {\r\n\r\n          // Options\r\n          this._options = Object.assign({}, this.defaultOptions, this.globalOptions, this.options)\r\n\r\n          // Instance\r\n          this.quill = new Quill(this.$refs.editor, this._options)\r\n          \r\n          this.quill.enable(false)\r\n\r\n          // Set editor content\r\n          if (this.value || this.content) {\r\n            this.quill.pasteHTML(this.value || this.content)\r\n          }\r\n\r\n          // Disabled editor\r\n          if (!this.disabled) {\r\n            this.quill.enable(true)\r\n          }\r\n\r\n          // Mark model as touched if editor lost focus\r\n          this.quill.on('selection-change', range => {\r\n            if (!range) {\r\n              this.$emit('blur', this.quill)\r\n            } else {\r\n              this.$emit('focus', this.quill)\r\n            }\r\n          })\r\n\r\n          // Update model if text changes\r\n          this.quill.on('text-change', (delta, oldDelta, source) => {\r\n            let html = this.$refs.editor.children[0].innerHTML\r\n            const quill = this.quill\r\n            const text = this.quill.getText()\r\n            if (html === '<p><br></p>') html = ''\r\n            this._content = html\r\n            this.$emit('input', this._content)\r\n            this.$emit('change', { html, text, quill })\r\n          })\r\n\r\n          // Emit ready event\r\n          this.$emit('ready', this.quill)\r\n        }\r\n      }\r\n    },\r\n    watch: {\r\n      // Watch content change\r\n      content(newVal, oldVal) {\r\n        if (this.quill) {\r\n          if (newVal && newVal !== this._content) {\r\n            this._content = newVal\r\n            this.quill.pasteHTML(newVal)\r\n          } else if(!newVal) {\r\n            this.quill.setText('')\r\n          }\r\n        }\r\n      },\r\n      // Watch content change\r\n      value(newVal, oldVal) {\r\n        if (this.quill) {\r\n          if (newVal && newVal !== this._content) {\r\n            this._content = newVal\r\n            this.quill.pasteHTML(newVal)\r\n          } else if(!newVal) {\r\n            this.quill.setText('')\r\n          }\r\n        }\r\n      },\r\n      // Watch disabled change\r\n      disabled(newVal, oldVal) {\r\n        if (this.quill) {\r\n          this.quill.enable(!newVal)\r\n        }\r\n      }\r\n    }\r\n  }\r\n</script>\r\n"],"sourceRoot":"node_modules/vue-quill-editor/src"}]}