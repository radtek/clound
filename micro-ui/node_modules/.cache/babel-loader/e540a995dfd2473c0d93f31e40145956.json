{"remainingRequest":"G:\\intellij work\\micro-ui\\node_modules\\babel-loader\\lib\\index.js!G:\\intellij work\\micro-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!G:\\intellij work\\micro-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\intellij work\\micro-ui\\src\\page\\index\\top\\top-theme.vue?vue&type=script&lang=js&","dependencies":[{"path":"G:\\intellij work\\micro-ui\\src\\page\\index\\top\\top-theme.vue","mtime":1551167423340},{"path":"G:\\intellij work\\micro-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\intellij work\\micro-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"G:\\intellij work\\micro-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\intellij work\\micro-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"G:\\\\intellij work\\\\micro-ui\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { setTheme } from \"@/util/util\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  data: function data() {\n    return {\n      box: false,\n      text: \"\",\n      list: [{\n        name: \"默认\",\n        value: \"default\"\n      }, {\n        name: \"白色\",\n        value: \"theme-white\"\n      }, {\n        name: \"炫彩\",\n        value: \"theme-star\"\n      }]\n    };\n  },\n  watch: {\n    text: function text(val) {\n      this.$store.commit(\"SET_THEME_NAME\", val);\n      setTheme(val);\n    }\n  },\n  computed: _objectSpread({}, mapGetters([\"themeName\"])),\n  mounted: function mounted() {\n    this.text = this.themeName;\n\n    if (!this.text) {\n      this.text = \"\";\n    }\n  },\n  methods: {\n    open: function open() {\n      this.box = true;\n    }\n  }\n};",{"version":3,"sources":["top-theme.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,SAAA,QAAA,QAAA,aAAA;AACA,SAAA,UAAA,QAAA,MAAA;AACA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,GAAA,EAAA,KADA;AAEA,MAAA,IAAA,EAAA,EAFA;AAGA,MAAA,IAAA,EAAA,CACA;AACA,QAAA,IAAA,EAAA,IADA;AAEA,QAAA,KAAA,EAAA;AAFA,OADA,EAKA;AACA,QAAA,IAAA,EAAA,IADA;AAEA,QAAA,KAAA,EAAA;AAFA,OALA,EASA;AACA,QAAA,IAAA,EAAA,IADA;AAEA,QAAA,KAAA,EAAA;AAFA,OATA;AAHA,KAAA;AAkBA,GApBA;AAqBA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA,cAAA,GAAA,EAAA;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,gBAAA,EAAA,GAAA;AACA,MAAA,QAAA,CAAA,GAAA,CAAA;AACA;AAJA,GArBA;AA2BA,EAAA,QAAA,oBACA,UAAA,CAAA,CAAA,WAAA,CAAA,CADA,CA3BA;AA8BA,EAAA,OA9BA,qBA8BA;AACA,SAAA,IAAA,GAAA,KAAA,SAAA;;AACA,QAAA,CAAA,KAAA,IAAA,EAAA;AACA,WAAA,IAAA,GAAA,EAAA;AACA;AACA,GAnCA;AAoCA,EAAA,OAAA,EAAA;AACA,IAAA,IADA,kBACA;AACA,WAAA,GAAA,GAAA,IAAA;AACA;AAHA;AApCA,CAAA","sourcesContent":["<template>\n  <div>\n    <el-dialog title=\"选择\"\n               :visible.sync=\"box\"\n               width=\"50%\">\n      <el-radio-group v-model=\"text\"\n                      class=\"list\">\n        <el-row :span=\"24\">\n          <el-col v-for=\"(item,index) in list\"\n                  :key=\"index\"\n                  :md=\"4\"\n                  :xs=\"12\"\n                  :sm=\"4\">\n            <el-radio :label=\"item.value\">{{item.name}}</el-radio>\n          </el-col>\n        </el-row>\n      </el-radio-group>\n    </el-dialog>\n\n    <span>\n      <i class=\"el-icon-view\"\n         @click=\"open\"></i>\n    </span>\n  </div>\n</template>\n\n<script>\nimport { setTheme } from \"@/util/util\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  data() {\n    return {\n      box: false,\n      text: \"\",\n      list: [\n        {\n          name: \"默认\",\n          value: \"default\"\n        },\n        {\n          name: \"白色\",\n          value: \"theme-white\"\n        },\n        {\n          name: \"炫彩\",\n          value: \"theme-star\"\n        }\n      ]\n    };\n  },\n  watch: {\n    text: function(val) {\n      this.$store.commit(\"SET_THEME_NAME\", val);\n      setTheme(val);\n    }\n  },\n  computed: {\n    ...mapGetters([\"themeName\"])\n  },\n  mounted() {\n    this.text = this.themeName;\n    if (!this.text) {\n      this.text = \"\";\n    }\n  },\n  methods: {\n    open() {\n      this.box = true;\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.list {\n  width: 100%;\n}\n</style>\n\n"],"sourceRoot":"src/page/index/top"}]}