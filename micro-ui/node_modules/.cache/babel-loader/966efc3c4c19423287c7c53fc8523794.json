{"remainingRequest":"G:\\intellij work\\micro-ui\\node_modules\\babel-loader\\lib\\index.js!G:\\intellij work\\micro-ui\\node_modules\\eslint-loader\\index.js??ref--13-0!G:\\intellij work\\micro-ui\\src\\const\\export.js","dependencies":[{"path":"G:\\intellij work\\micro-ui\\src\\const\\export.js","mtime":1552876440954},{"path":"G:\\intellij work\\micro-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\intellij work\\micro-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"G:\\intellij work\\micro-ui\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["/**\r\n * 数据导出功能js\r\n * Created by wuxinx on 2019/2/25.\r\n */\n\n/**\r\n * 默认导出最大记录数\r\n * @type {number}\r\n */\nvar export_size = 1000;\n/**\r\n *\r\n *  excel数据导出\r\n * @param url 导出url\r\n * @param params 查询参数\r\n * @param exportSize 导出的大小\r\n * @param exprotFields 需要导出的属性\r\n * @param exportFiletype 需要导出的文件类型\r\n * @param ascs 升序字段\r\n * @param descs 逆序字段\r\n * @param tpageNo 当前页号\r\n * @param tpageSize 页面大小\r\n * @param fileName 文件名称\r\n * @param dailog 消息提示窗口\r\n * @param callBack 回调函数\r\n *\r\n */\n\nexport function doexport(url, params, exportSize, exprotFields, exportFiletype, ascs, descs, tpageNo, tpageSize, fileName, dialog, callBack) {\n  if (exprotFields.length < 1) {\n    dialog({\n      showClose: true,\n      message: '请选择需要导出的字段',\n      type: 'warning'\n    });\n  } else {\n    var pageNo = tpageNo; //当前页号\n\n    var pageSize;\n\n    if (\"1\" == exportSize) {\n      //导出当前页\n      pageSize = tpageSize; //当前页面大小\n    } else {\n      //导出最大条数\n      pageNo = 1;\n      pageSize = export_size;\n    }\n\n    var paramUrl = \"\";\n\n    for (var key in params) {\n      var value = params[key];\n\n      if (value != undefined) {\n        paramUrl += form.key + \"= \" + value + \"&\";\n      }\n    }\n\n    url += \"?\" + paramUrl + \"pageSize=\" + pageSize + \"&pageNo=\" + pageNo + \"&ascs=\" + ascs + \"&descs=\" + descs + \"&exportftype=\" + exportFiletype + \"&exportfields=\" + exprotFields + \"&filetitle=\" + fileName;\n    var fullFileName;\n    var contentType;\n\n    if (exportFiletype == 1) {\n      // excel\n      contentType = \"application/vnd.ms-excel\";\n      fullFileName = fileName + \".xls\";\n    } else if (exportFiletype == 2) {\n      // pdf\n      contentType = \"application/pdf\";\n      fullFileName = fileName + \".pdf\";\n    } else if (exportFiletype == 3) {\n      // csv\n      contentType = \"application/csv\";\n      fullFileName = fileName + \".csv\";\n    } else if (exportFiletype == 4) {\n      // doc\n      contentType = \"application/msword\";\n      fullFileName = fileName + \".doc\";\n    } else if (exportFiletype == 5) {\n      // txt\n      contentType = \"text/plain\";\n      fullFileName = fileName + \".txt\";\n    }\n\n    axios({\n      method: 'get',\n      url: url,\n      data: {},\n      responseType: 'blob'\n    }).then(function (res) {\n      download(res, contentType, fullFileName); //回调关闭窗口\n\n      if (typeof callBack == 'function') {\n        callBack();\n      }\n    }).catch(function (error) {\n      dialog({\n        showClose: true,\n        message: '导出失败' + error,\n        type: 'error'\n      });\n    });\n  }\n}\n/**\r\n * 根据流进行文件下载\r\n * @param res\r\n * @param contentType\r\n * @param fileName\r\n */\n\nfunction download(res, contentType, fileName) {\n  if (!res) {\n    return;\n  }\n\n  var blob = new Blob([res.data], {\n    type: contentType\n  });\n  var url = window.URL.createObjectURL(blob);\n  var link = document.createElement('a');\n  link.style.display = 'none';\n  link.href = url;\n  link.setAttribute('download', fileName);\n  document.body.appendChild(link);\n  link.click();\n}",{"version":3,"sources":["G:\\intellij work\\micro-ui\\src\\const\\export.js"],"names":["export_size","doexport","url","params","exportSize","exprotFields","exportFiletype","ascs","descs","tpageNo","tpageSize","fileName","dialog","callBack","length","showClose","message","type","pageNo","pageSize","paramUrl","key","value","undefined","form","fullFileName","contentType","axios","method","data","responseType","then","res","download","catch","error","blob","Blob","window","URL","createObjectURL","link","document","createElement","style","display","href","setAttribute","body","appendChild","click"],"mappings":"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","sourcesContent":["/**\r\n * 数据导出功能js\r\n * Created by wuxinx on 2019/2/25.\r\n */\r\n\r\n/**\r\n * 默认导出最大记录数\r\n * @type {number}\r\n */\r\nconst export_size = 1000\r\n\r\n/**\r\n *\r\n *  excel数据导出\r\n * @param url 导出url\r\n * @param params 查询参数\r\n * @param exportSize 导出的大小\r\n * @param exprotFields 需要导出的属性\r\n * @param exportFiletype 需要导出的文件类型\r\n * @param ascs 升序字段\r\n * @param descs 逆序字段\r\n * @param tpageNo 当前页号\r\n * @param tpageSize 页面大小\r\n * @param fileName 文件名称\r\n * @param dailog 消息提示窗口\r\n * @param callBack 回调函数\r\n *\r\n */\r\nexport function doexport(url, params, exportSize, exprotFields, exportFiletype, ascs, descs, tpageNo, tpageSize, fileName, dialog, callBack) {\r\n    if(exprotFields.length < 1){\r\n        dialog({\r\n            showClose: true,\r\n            message: '请选择需要导出的字段',\r\n            type: 'warning'\r\n        })\r\n    }else{\r\n        var pageNo = tpageNo;//当前页号\r\n        var pageSize;\r\n        if(\"1\" == exportSize){//导出当前页\r\n            pageSize = tpageSize;//当前页面大小\r\n        } else{//导出最大条数\r\n            pageNo = 1;\r\n            pageSize = export_size;\r\n        }\r\n\r\n        let paramUrl = \"\";\r\n        for(var key in params){\r\n            let value = params[key]\r\n            if( value != undefined){\r\n                paramUrl += form.key + \"= \" + value + \"&\"\r\n            }\r\n        }\r\n\r\n        url += \"?\" + paramUrl + \"pageSize=\"+pageSize+\"&pageNo=\" + pageNo + \"&ascs=\"+ ascs +\"&descs=\"+ descs + \"&exportftype=\"+exportFiletype+\"&exportfields=\"+exprotFields + \"&filetitle=\" + fileName;\r\n\r\n        let fullFileName;\r\n        let contentType;\r\n        if (exportFiletype == 1) {// excel\r\n            contentType = \"application/vnd.ms-excel\"\r\n            fullFileName = fileName + \".xls\"\r\n        } else if (exportFiletype == 2) {// pdf\r\n            contentType =\"application/pdf\"\r\n            fullFileName = fileName + \".pdf\"\r\n        } else if (exportFiletype == 3) {// csv\r\n            contentType = \"application/csv\"\r\n            fullFileName = fileName + \".csv\"\r\n        } else if (exportFiletype == 4) {// doc\r\n            contentType = \"application/msword\"\r\n            fullFileName = fileName + \".doc\"\r\n        } else if (exportFiletype == 5) {// txt\r\n            contentType = \"text/plain\"\r\n            fullFileName = fileName + \".txt\"\r\n        }\r\n\r\n       axios({\r\n            method: 'get',\r\n            url: url,\r\n            data: {},\r\n            responseType: 'blob'\r\n        }).then(res => {\r\n            download(res, contentType, fullFileName)\r\n            //回调关闭窗口\r\n            if(typeof(callBack) == 'function'){\r\n                callBack()\r\n            }\r\n        }).catch((error) => {\r\n            dialog({\r\n                showClose: true,\r\n                message: '导出失败' + error,\r\n                type: 'error'\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\n/**\r\n * 根据流进行文件下载\r\n * @param res\r\n * @param contentType\r\n * @param fileName\r\n */\r\nfunction download(res, contentType, fileName) {\r\n    if (!res) {\r\n        return\r\n    }\r\n    let blob = new Blob([res.data], {type: contentType})\r\n    let url = window.URL.createObjectURL(blob)\r\n\r\n    let link = document.createElement('a')\r\n    link.style.display = 'none'\r\n    link.href = url\r\n    link.setAttribute('download', fileName)\r\n\r\n    document.body.appendChild(link)\r\n    link.click()\r\n}\r\n"]}]}