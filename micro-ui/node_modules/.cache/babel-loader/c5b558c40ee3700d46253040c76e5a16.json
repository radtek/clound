{"remainingRequest":"G:\\intellij work\\micro-ui\\node_modules\\babel-loader\\lib\\index.js!G:\\intellij work\\micro-ui\\node_modules\\eslint-loader\\index.js??ref--13-0!G:\\intellij work\\micro-ui\\src\\api\\portal\\archive\\dict\\dict.js","dependencies":[{"path":"G:\\intellij work\\micro-ui\\src\\api\\portal\\archive\\dict\\dict.js","mtime":1559523945842},{"path":"G:\\intellij work\\micro-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\intellij work\\micro-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"G:\\intellij work\\micro-ui\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Array$isArray from \"G:\\\\intellij work\\\\micro-ui\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/array/is-array\";\nimport _Promise from \"G:\\\\intellij work\\\\micro-ui\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/promise\";\nimport request from '@/router/axios';\nimport { validatenull } from '@/util/validate';\nexport function findPage(query) {\n  return request({\n    url: 'portal/dict/page',\n    method: 'get',\n    params: query\n  });\n}\nexport function getDict(type, source) {\n  return request({\n    url: '/portal/dict/getDict/' + type + \"/\" + source,\n    method: 'get'\n  });\n}\nexport function findLabel(type, source, val) {\n  return new _Promise(function (resolve, reject) {\n    if (validatenull(val) || validatenull(type) || validatenull(source)) {\n      resolve(val);\n    } else {\n      getDict(type, source).then(function (res) {\n        var data = res.data.data || {};\n\n        if (_Array$isArray(data) && data.length > 0) {\n          for (var i = 0; i < data.length; i++) {\n            if (data[i].value === val) {\n              val = data[i].label;\n              break;\n            }\n          }\n        }\n\n        resolve(val);\n      }).catch(function (err) {\n        reject();\n      });\n    }\n  });\n}\nexport function getLabel(obj, val) {\n  var name = val;\n\n  if (_Array$isArray(obj) && obj.length > 0) {\n    for (var i = 0; i < obj.length; i++) {\n      if (obj[i].value === val) {\n        name = obj[i].label;\n        break;\n      }\n    }\n  }\n\n  return name;\n}",{"version":3,"sources":["G:\\intellij work\\micro-ui\\src\\api\\portal\\archive\\dict\\dict.js"],"names":["request","validatenull","findPage","query","url","method","params","getDict","type","source","findLabel","val","resolve","reject","then","res","data","length","i","value","label","catch","err","getLabel","obj","name"],"mappings":";;AAAA,OAAOA,OAAP,MAAoB,gBAApB;AACA,SAAQC,YAAR,QAA2B,iBAA3B;AACA,OAAO,SAASC,QAAT,CAAmBC,KAAnB,EAA0B;AAC7B,SAAOH,OAAO,CAAC;AACXI,IAAAA,GAAG,EAAE,kBADM;AAEXC,IAAAA,MAAM,EAAE,KAFG;AAGXC,IAAAA,MAAM,EAAEH;AAHG,GAAD,CAAd;AAKH;AAED,OAAO,SAASI,OAAT,CAAkBC,IAAlB,EAAuBC,MAAvB,EAA+B;AAClC,SAAST,OAAO,CAAC;AACbI,IAAAA,GAAG,EAAE,0BAA0BI,IAA1B,GAA+B,GAA/B,GAAmCC,MAD3B;AAEbJ,IAAAA,MAAM,EAAE;AAFK,GAAD,CAAhB;AAIH;AAGD,OAAO,SAASK,SAAT,CAAmBF,IAAnB,EAAwBC,MAAxB,EAA+BE,GAA/B,EAAoC;AACvC,SAAO,aAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,QAAGZ,YAAY,CAACU,GAAD,CAAZ,IAAmBV,YAAY,CAACO,IAAD,CAA/B,IAAuCP,YAAY,CAACQ,MAAD,CAAtD,EAA+D;AAC3DG,MAAAA,OAAO,CAACD,GAAD,CAAP;AACH,KAFD,MAEK;AACDJ,MAAAA,OAAO,CAACC,IAAD,EAAOC,MAAP,CAAP,CAAsBK,IAAtB,CAA2B,UAACC,GAAD,EAAS;AAChC,YAAMC,IAAI,GAAGD,GAAG,CAACC,IAAJ,CAASA,IAAT,IAAiB,EAA9B;;AACA,YAAI,eAAcA,IAAd,KAAuBA,IAAI,CAACC,MAAL,GAAc,CAAzC,EAA4C;AACxC,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAACC,MAAzB,EAAiCC,CAAC,EAAlC,EAAsC;AAClC,gBAAIF,IAAI,CAACE,CAAD,CAAJ,CAAQC,KAAR,KAAkBR,GAAtB,EAA2B;AACvBA,cAAAA,GAAG,GAAGK,IAAI,CAACE,CAAD,CAAJ,CAAQE,KAAd;AACA;AACH;AACJ;AACJ;;AACDR,QAAAA,OAAO,CAACD,GAAD,CAAP;AACH,OAXD,EAWGU,KAXH,CAWS,UAACC,GAAD,EAAS;AACdT,QAAAA,MAAM;AACT,OAbD;AAcH;AAGJ,GArBM,CAAP;AAwBH;AACD,OAAO,SAAUU,QAAV,CAAmBC,GAAnB,EAAwBb,GAAxB,EAA8B;AACjC,MAAIc,IAAI,GAAGd,GAAX;;AACA,MAAI,eAAca,GAAd,KAAsBA,GAAG,CAACP,MAAJ,GAAa,CAAvC,EAA0C;AACtC,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGM,GAAG,CAACP,MAAxB,EAAgCC,CAAC,EAAjC,EAAqC;AACjC,UAAIM,GAAG,CAACN,CAAD,CAAH,CAAOC,KAAP,KAAiBR,GAArB,EAA0B;AACtBc,QAAAA,IAAI,GAAGD,GAAG,CAACN,CAAD,CAAH,CAAOE,KAAd;AACA;AACH;AACJ;AACJ;;AAAA,SAAOK,IAAP;AACJ","sourcesContent":["import request from '@/router/axios'\r\nimport {validatenull} from '@/util/validate'\r\nexport function findPage (query) {\r\n    return request({\r\n        url: 'portal/dict/page',\r\n        method: 'get',\r\n        params: query\r\n    })\r\n}\r\n\r\nexport function getDict (type,source) {\r\n    return   request({\r\n        url: '/portal/dict/getDict/' + type+\"/\"+source,\r\n        method: 'get'\r\n    })\r\n}\r\n\r\n\r\nexport function findLabel(type,source,val) {\r\n    return new Promise((resolve, reject) => {\r\n        if(validatenull(val)||validatenull(type)||validatenull(source)){\r\n            resolve(val)\r\n        }else{\r\n            getDict(type, source).then((res) => {\r\n                const data = res.data.data || {}\r\n                if (Array.isArray(data) && data.length > 0) {\r\n                    for (let i = 0; i < data.length; i++) {\r\n                        if (data[i].value === val) {\r\n                            val = data[i].label\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                resolve(val)\r\n            }).catch((err) => {\r\n                reject()\r\n            })\r\n        }\r\n\r\n\r\n    })\r\n\r\n\r\n}\r\nexport function  getLabel(obj, val)  {\r\n    let name = val\r\n    if (Array.isArray(obj) && obj.length > 0) {\r\n        for (let i = 0; i < obj.length; i++) {\r\n            if (obj[i].value === val) {\r\n                name = obj[i].label\r\n                break;\r\n            }\r\n        }\r\n    }return name\r\n}"]}]}