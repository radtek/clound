{"remainingRequest":"G:\\intellij work\\micro-ui\\node_modules\\babel-loader\\lib\\index.js!G:\\intellij work\\micro-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!G:\\intellij work\\micro-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\intellij work\\micro-ui\\src\\views\\admin\\role\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"G:\\intellij work\\micro-ui\\src\\views\\admin\\role\\index.vue","mtime":1557472650697},{"path":"G:\\intellij work\\micro-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\intellij work\\micro-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"G:\\intellij work\\micro-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\intellij work\\micro-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _JSON$stringify from \"G:\\\\intellij work\\\\micro-ui\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/json/stringify\";\nimport \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.regexp.split\";\nimport _Object$assign from \"G:\\\\intellij work\\\\micro-ui\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/object/assign\";\nimport _objectSpread from \"G:\\\\intellij work\\\\micro-ui\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\nimport _getIterator from \"G:\\\\intellij work\\\\micro-ui\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/get-iterator\";\nimport _Map from \"G:\\\\intellij work\\\\micro-ui\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/map\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { addObj, delObj, fetchList, fetchRoleTree, getObj, permissionUpd, putObj, updateRoleMenu, fetchRoleMenuScope } from '@/api/admin/role';\nimport { tableOption } from '@/const/crud/admin/role';\nimport { fetchMenuTree } from '@/api/admin/menu';\nimport { remote } from \"@/api/admin/dict\";\nimport { fetchDeptTree, fetchTree } from \"@/api/admin/dept\";\nimport { mapGetters } from 'vuex';\nexport default {\n  name: 'table_role',\n  data: function data() {\n    return {\n      tableOption: tableOption,\n      dsScopeData: [],\n      definedDeptData: [],\n      treeData: [],\n      checkedKeys: [],\n      checkedDsScope: [],\n      definedLevelId: [],\n      defaultProps: {\n        label: \"name\",\n        value: 'id'\n      },\n      deptTreeProps: {\n        label: \"name\",\n        value: 'code'\n      },\n      dictProps: {\n        label: \"label\",\n        value: 'value'\n      },\n      page: {\n        total: 0,\n        // 总页数\n        currentPage: 1,\n        // 当前页数\n        pageSize: 20 // 每页显示多少条\n\n      },\n      menuIds: '',\n      list: [],\n      listLoading: true,\n      form: {},\n      buttonUpdate: '',\n      definedForm: {\n        levelId: '',\n        tempMenuId: '',\n        tempDeptId: [],\n        menuPermission: ''\n      },\n      treeDeptData: [],\n      dictData: {},\n      dictScopeData: {},\n      scopeMenuInfo: new _Map(),\n      scopeMenuInfoChange: 0,\n      roleId: undefined,\n      roleCode: undefined,\n      rolesOptions: undefined,\n      dialogPermissionVisible: false,\n      roleManager_btn_add: false,\n      roleManager_btn_edit: false,\n      roleManager_btn_del: false,\n      roleManager_btn_perm: false,\n      dialogDefinedPermission: false\n    };\n  },\n  created: function created() {\n    var _this2 = this;\n\n    this.roleManager_btn_add = this.permissions['sys_role_add'];\n    this.roleManager_btn_edit = this.permissions['sys_role_edit'];\n    this.roleManager_btn_del = this.permissions['sys_role_del'];\n    this.roleManager_btn_perm = this.permissions['sys_role_perm'];\n    remote('data_scope').then(function (response) {\n      _this2.dictData = response.data.data;\n\n      if (_this2.isAdmin == true) {\n        _this2.dictScopeData = response.data.data;\n        return;\n      }\n\n      var type = _this2.userRole.dsType;\n      var tempDict = [];\n\n      switch (type) {\n        case \"0\":\n          _this2.dictScopeData = response.data.data;\n          break;\n\n        case \"1\":\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = _getIterator(response.data.data), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var dict = _step.value;\n\n              if (dict.value > 0) {\n                tempDict.push(dict);\n              }\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n\n          _this2.dictScopeData = tempDict;\n          break;\n\n        case \"2\":\n          var _iteratorNormalCompletion2 = true;\n          var _didIteratorError2 = false;\n          var _iteratorError2 = undefined;\n\n          try {\n            for (var _iterator2 = _getIterator(response.data.data), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n              var _dict = _step2.value;\n\n              if (_dict.value > 1) {\n                tempDict.push(_dict);\n              }\n            }\n          } catch (err) {\n            _didIteratorError2 = true;\n            _iteratorError2 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                _iterator2.return();\n              }\n            } finally {\n              if (_didIteratorError2) {\n                throw _iteratorError2;\n              }\n            }\n          }\n\n          _this2.dictScopeData = tempDict;\n          break;\n\n        case \"3\":\n          var _iteratorNormalCompletion3 = true;\n          var _didIteratorError3 = false;\n          var _iteratorError3 = undefined;\n\n          try {\n            for (var _iterator3 = _getIterator(response.data.data), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n              var _dict2 = _step3.value;\n\n              if (_dict2.value > 2) {\n                tempDict.push(_dict2);\n              }\n            }\n          } catch (err) {\n            _didIteratorError3 = true;\n            _iteratorError3 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n                _iterator3.return();\n              }\n            } finally {\n              if (_didIteratorError3) {\n                throw _iteratorError3;\n              }\n            }\n          }\n\n          _this2.dictScopeData = tempDict;\n          break;\n\n        case \"4\":\n          var level = _this2.userRole.codeLevel;\n\n          switch (level) {\n            case '0':\n              var _iteratorNormalCompletion4 = true;\n              var _didIteratorError4 = false;\n              var _iteratorError4 = undefined;\n\n              try {\n                for (var _iterator4 = _getIterator(response.data.data), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n                  var _dict3 = _step4.value;\n\n                  if (_dict3.value > 0) {\n                    tempDict.push(_dict3);\n                  }\n                }\n              } catch (err) {\n                _didIteratorError4 = true;\n                _iteratorError4 = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n                    _iterator4.return();\n                  }\n                } finally {\n                  if (_didIteratorError4) {\n                    throw _iteratorError4;\n                  }\n                }\n              }\n\n              _this2.dictScopeData = tempDict;\n              break;\n\n            case '1':\n              var _iteratorNormalCompletion5 = true;\n              var _didIteratorError5 = false;\n              var _iteratorError5 = undefined;\n\n              try {\n                for (var _iterator5 = _getIterator(response.data.data), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n                  var _dict4 = _step5.value;\n\n                  if (_dict4.value > 0) {\n                    tempDict.push(_dict4);\n                  }\n                }\n              } catch (err) {\n                _didIteratorError5 = true;\n                _iteratorError5 = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n                    _iterator5.return();\n                  }\n                } finally {\n                  if (_didIteratorError5) {\n                    throw _iteratorError5;\n                  }\n                }\n              }\n\n              _this2.dictScopeData = tempDict;\n              break;\n\n            case '2':\n              var _iteratorNormalCompletion6 = true;\n              var _didIteratorError6 = false;\n              var _iteratorError6 = undefined;\n\n              try {\n                for (var _iterator6 = _getIterator(response.data.data), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n                  var _dict5 = _step6.value;\n\n                  if (_dict5.value > 1) {\n                    tempDict.push(_dict5);\n                  }\n                }\n              } catch (err) {\n                _didIteratorError6 = true;\n                _iteratorError6 = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n                    _iterator6.return();\n                  }\n                } finally {\n                  if (_didIteratorError6) {\n                    throw _iteratorError6;\n                  }\n                }\n              }\n\n              _this2.dictScopeData = tempDict;\n\n            default:\n              var _iteratorNormalCompletion7 = true;\n              var _didIteratorError7 = false;\n              var _iteratorError7 = undefined;\n\n              try {\n                for (var _iterator7 = _getIterator(response.data.data), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n                  var _dict6 = _step7.value;\n\n                  if (_dict6.value > 3) {\n                    tempDict.push(_dict6);\n                  }\n                }\n              } catch (err) {\n                _didIteratorError7 = true;\n                _iteratorError7 = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion7 && _iterator7.return != null) {\n                    _iterator7.return();\n                  }\n                } finally {\n                  if (_didIteratorError7) {\n                    throw _iteratorError7;\n                  }\n                }\n              }\n\n              _this2.dictScopeData = tempDict;\n              break;\n          }\n\n          break;\n\n        default:\n          var _iteratorNormalCompletion8 = true;\n          var _didIteratorError8 = false;\n          var _iteratorError8 = undefined;\n\n          try {\n            for (var _iterator8 = _getIterator(response.data.data), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n              var _dict7 = _step8.value;\n\n              if (_dict7.value > 3) {\n                tempDict.push(_dict7);\n              }\n            }\n          } catch (err) {\n            _didIteratorError8 = true;\n            _iteratorError8 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion8 && _iterator8.return != null) {\n                _iterator8.return();\n              }\n            } finally {\n              if (_didIteratorError8) {\n                throw _iteratorError8;\n              }\n            }\n          }\n\n          _this2.dictScopeData = tempDict;\n      }\n    });\n  },\n  computed: _objectSpread({}, mapGetters(['elements', 'permissions', \"userInfo\", \"userRole\", \"userDept\", \"isAdmin\"])),\n  methods: {\n    showHideDdl: function showHideDdl(lockUp, userId) {\n      if (lockUp === '0') {\n        if (userId === this.userInfo.userId || this.isAdmin == true) {\n          return true;\n        }\n\n        return false;\n      }\n\n      return true;\n    },\n    addMap: function addMap(key, value) {\n      this.scopeMenuInfo.set(\"menu_\" + key, value);\n      this.scopeMenuInfoChange += 1;\n    },\n    deleteMap: function deleteMap(key) {\n      this.scopeMenuInfo.delete(\"menu_\" + key);\n      this.scopeMenuInfoChange += 1;\n    },\n    clearMap: function clearMap() {\n      this.scopeMenuInfoChange = 0;\n      this.scopeMenuInfo.clear();\n      this.definedLevelId = [];\n    },\n    getList: function getList(page, params) {\n      var _this3 = this;\n\n      this.listLoading = true;\n      fetchList(_Object$assign({\n        current: page.currentPage,\n        size: page.pageSize\n      }, params)).then(function (response) {\n        _this3.list = response.data.data.records;\n        _this3.page.total = response.data.data.total;\n        _this3.listLoading = false;\n      });\n    },\n    exitScope: function exitScope(menuId) {\n      return this.scopeMenuInfo.has(\"menu_\" + menuId);\n    },\n    handleRefreshChange: function handleRefreshChange() {\n      this.getList(this.page);\n    },\n    handleFilter: function handleFilter(param) {\n      this.page.page = 1;\n      this.getList(this.page, param);\n    },\n    handleCreate: function handleCreate() {\n      this.$refs.crud.rowAdd();\n    },\n    handleOpenBefore: function handleOpenBefore(show, type) {\n      var _this4 = this;\n\n      window.boxType = type;\n      this.handleDept();\n      fetchTree().then(function (response) {\n        _this4.dsScopeData = response.data.data;\n\n        if (_this4.form.dsScope) {\n          _this4.checkedDsScope = _this4.form.dsScope.split(\",\");\n        } else {\n          _this4.checkedDsScope = [];\n        }\n      });\n      show();\n    },\n    handleUpdate: function handleUpdate(row, index) {\n      this.$refs.crud.rowEdit(row, index);\n    },\n    handlePermission: function handlePermission(row) {\n      var _this5 = this;\n\n      this.clearMap();\n      fetchRoleMenuScope(row.roleId).then(function (response) {\n        var menuScope = response.data;\n\n        if (typeof menuScope != \"undefined\") {\n          var _iteratorNormalCompletion9 = true;\n          var _didIteratorError9 = false;\n          var _iteratorError9 = undefined;\n\n          try {\n            var _loop = function _loop() {\n              var ms = _step9.value;\n              var scopeMenu = {};\n              scopeMenu['menuId'] = ms.menuId;\n              scopeMenu['dsType'] = ms.dsType;\n              scopeMenu['dsScope'] = ms.dsScope;\n              scopeMenu['permission'] = ms.permission;\n              scopeMenu['label'] = '';\n\n              _this5.dictData.forEach(function (obj) {\n                if (obj.value === scopeMenu['dsType']) {\n                  scopeMenu['label'] = obj.label;\n                  return;\n                }\n              });\n\n              _this5.addMap(ms.menuId, scopeMenu);\n            };\n\n            for (var _iterator9 = _getIterator(menuScope), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n              _loop();\n            }\n          } catch (err) {\n            _didIteratorError9 = true;\n            _iteratorError9 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion9 && _iterator9.return != null) {\n                _iterator9.return();\n              }\n            } finally {\n              if (_didIteratorError9) {\n                throw _iteratorError9;\n              }\n            }\n          }\n        }\n      });\n      fetchRoleTree(row.roleId).then(function (response) {\n        _this5.checkedKeys = response.data;\n        return fetchMenuTree();\n      }).then(function (response) {\n        _this5.treeData = response.data.data; // 解析出所有的太监节点\n\n        _this5.checkedKeys = _this5.resolveAllEunuchNodeId(_this5.treeData, _this5.checkedKeys, []);\n        _this5.dialogStatus = 'permission';\n        _this5.dialogPermissionVisible = true;\n        _this5.roleId = row.roleId;\n        _this5.roleCode = row.roleCode;\n      });\n    },\n\n    /**\n     * 解析出所有的太监节点id\n     * @param json 待解析的json串\n     * @param idArr 原始节点数组\n     * @param temp 临时存放节点id的数组\n     * @return 太监节点id数组\n     */\n    resolveAllEunuchNodeId: function resolveAllEunuchNodeId(json, idArr, temp) {\n      var _this6 = this;\n\n      var _loop2 = function _loop2(i) {\n        var item = json[i]; // 存在子节点，递归遍历;不存在子节点，将json的id添加到临时数组中\n\n        if (item.children && item.children.length !== 0) {\n          _this6.resolveAllEunuchNodeId(item.children, idArr, temp);\n        } else {\n          temp.push(idArr.filter(function (id) {\n            return id === item.id;\n          }));\n        }\n      };\n\n      for (var i = 0; i < json.length; i++) {\n        _loop2(i);\n      }\n\n      return temp;\n    },\n    filterNode: function filterNode(value, data) {\n      if (!value) return true;\n      return data.label.indexOf(value) !== -1;\n    },\n    getNodeData: function getNodeData(data, done) {\n      done();\n    },\n    handleDelete: function handleDelete(row, index) {\n      var _this7 = this;\n\n      var _this = this;\n\n      this.$confirm('是否确认删除名称为\"' + row.roleName + '\"' + '\"的数据项?', '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        return delObj(row.roleId);\n      }).then(function () {\n        _this7.getList(_this7.page);\n\n        _this7.list.splice(index, 1);\n\n        _this.$message({\n          showClose: true,\n          message: '删除成功',\n          type: 'success'\n        });\n      }).catch(function () {});\n    },\n    create: function create(row, done, loading) {\n      var _this8 = this;\n\n      if (this.form.dsType === 1) {\n        this.form.dsScope = this.$refs.scopeTree.getCheckedKeys().join(',');\n      }\n\n      addObj(this.form).then(function () {\n        _this8.getList(_this8.page);\n\n        done();\n\n        _this8.$notify({\n          title: '成功',\n          message: '创建成功',\n          type: 'success',\n          duration: 2000\n        });\n      }).catch(function () {\n        loading();\n      });\n    },\n    update: function update(row, index, done, loading) {\n      var _this9 = this;\n\n      if (this.form.dsType === '7') {\n        this.form.dsScope = this.$refs.scopeTree.getCheckedKeys().join(',');\n      }\n\n      putObj(this.form).then(function () {\n        _this9.getList(_this9.page);\n\n        done();\n\n        _this9.$notify({\n          title: '成功',\n          message: '修改成功',\n          type: 'success',\n          duration: 2000\n        });\n      }).catch(function () {\n        loading();\n      });\n    },\n    updatePermession: function updatePermession(roleId, roleCode) {\n      var _this10 = this;\n\n      this.menuIds = '';\n      this.menuIds = this.$refs.menuTree.getCheckedKeys().join(',').concat(',').concat(this.$refs.menuTree.getHalfCheckedKeys().join(','));\n      var defineForm = {};\n      var nodes = new Array();\n      var _iteratorNormalCompletion10 = true;\n      var _didIteratorError10 = false;\n      var _iteratorError10 = undefined;\n\n      try {\n        for (var _iterator10 = _getIterator(this.scopeMenuInfo.values()), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n          var value = _step10.value;\n          nodes.push(JSON.parse(_JSON$stringify(value)));\n        }\n      } catch (err) {\n        _didIteratorError10 = true;\n        _iteratorError10 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion10 && _iterator10.return != null) {\n            _iterator10.return();\n          }\n        } finally {\n          if (_didIteratorError10) {\n            throw _iteratorError10;\n          }\n        }\n      }\n\n      defineForm['menuIds'] = this.menuIds;\n      defineForm['roleId'] = roleId;\n      defineForm['roleMenuScopeList'] = nodes;\n      updateRoleMenu(defineForm).then(function () {\n        _this10.dialogPermissionVisible = false;\n        fetchMenuTree().then(function (response) {\n          _this10.form = response.data.data;\n          return fetchRoleTree(roleId);\n        }).then(function (response) {\n          _this10.checkedKeys = response.data;\n\n          _this10.$notify({\n            title: '成功',\n            message: '修改成功',\n            type: 'success',\n            duration: 2000\n          });\n        });\n      });\n    },\n    definedDataScope: function definedDataScope(id, permission) {\n      var _this11 = this;\n\n      this.dialogDefinedPermission = true;\n      this.definedForm.tempMenuId = id;\n      this.definedForm.menuPermission = permission;\n      var scopeMenu = this.scopeMenuInfo.get(\"menu_\" + id);\n\n      if (scopeMenu && typeof scopeMenu != \"undefined\") {\n        this.definedForm.levelId = scopeMenu.dsType;\n\n        if (this.definedForm.levelId === '7' && scopeMenu.dsScope) {\n          this.definedLevelId = scopeMenu.dsScope.split(',');\n        } else {\n          this.definedLevelId = [];\n        }\n      } else {\n        this.definedForm.levelId = '';\n      }\n\n      if (this.definedDeptData) {\n        fetchTree().then(function (response) {\n          _this11.definedDeptData = response.data.data;\n        });\n      }\n    },\n    clearDefinedDataScope: function clearDefinedDataScope(menuId) {\n      this.deleteMap(menuId);\n    },\n    saveDefinedDataScope: function saveDefinedDataScope() {\n      if (this.definedForm.levelId === '7') {\n        this.definedForm.tempDeptId = this.$refs.definedTree.getCheckedKeys().join(',');\n        this.definedLevelId = this.$refs.definedTree.getCheckedKeys();\n      } else {\n        this.definedForm.tempDeptId = '';\n        this.definedLevelId = [];\n      }\n\n      var scopeMenu = {};\n      scopeMenu['menuId'] = this.definedForm.tempMenuId;\n      scopeMenu['dsType'] = this.definedForm.levelId;\n      scopeMenu['dsScope'] = this.definedForm.tempDeptId;\n      scopeMenu['label'] = '';\n      scopeMenu['permission'] = this.definedForm.menuPermission;\n      this.dictData.forEach(function (obj) {\n        if (obj.value === scopeMenu['dsType']) {\n          scopeMenu['label'] = obj.label;\n          return;\n        }\n      });\n      this.addMap(this.definedForm.tempMenuId, scopeMenu);\n      this.dialogDefinedPermission = false;\n    },\n    handleDept: function handleDept() {\n      var _this12 = this;\n\n      fetchTree().then(function (response) {\n        _this12.treeDeptData = response.data.data;\n      });\n    },\n    getDictLabel: function getDictLabel(value) {\n      var label = '未定义';\n      var _iteratorNormalCompletion11 = true;\n      var _didIteratorError11 = false;\n      var _iteratorError11 = undefined;\n\n      try {\n        for (var _iterator11 = _getIterator(this.dictData), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {\n          var dict = _step11.value;\n\n          if (dict.value === value) {\n            label = dict.label;\n            return label;\n          }\n        }\n      } catch (err) {\n        _didIteratorError11 = true;\n        _iteratorError11 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion11 && _iterator11.return != null) {\n            _iterator11.return();\n          }\n        } finally {\n          if (_didIteratorError11) {\n            throw _iteratorError11;\n          }\n        }\n      }\n\n      return label;\n    },\n    getLevelLabel: function getLevelLabel(menuId) {\n      var butText = '自定义';\n      var x = this.scopeMenuInfoChange;\n      var menuInfo = this.scopeMenuInfo.get(\"menu_\" + menuId);\n\n      if (typeof menuInfo != \"undefined\" && null != menuInfo) {\n        butText = menuInfo.label;\n      }\n\n      return \"&nbsp;&nbsp;\" + butText;\n    }\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"app-container calendar-list-container\">\n        <basic-container>\n            <avue-crud :option=\"tableOption\"\n                       :data=\"list\"\n                       ref=\"crud\"\n                       :page=\"page\"\n                       v-model=\"form\"\n                       :table-loading=\"listLoading\"\n                       :before-open=\"handleOpenBefore\"\n                       @on-load=\"getList\"\n                       @search-change=\"handleFilter\"\n                       @refresh-change=\"handleRefreshChange\"\n                       @row-update=\"update\"\n                       @row-save=\"create\">\n\n                <template slot=\"dsType\"\n                          slot-scope=\"scope\">\n              <span >\n                <el-tag>{{getDictLabel(scope.row.dsType)}} </el-tag>\n              </span>\n                </template>\n                <template slot=\"menuLeft\">\n                    <el-button v-if=\"roleManager_btn_add\"\n                               class=\"filter-item\"\n                               @click=\"handleCreate\"\n                               size=\"small\"\n                               type=\"primary\"\n                               icon=\"el-icon-edit\">添加\n                    </el-button>\n                </template>\n                <template slot=\"dsTypeForm\" slot-scope=\"scope\">\n                    <avue-select v-model=\"form.dsType\"\n                                 placeholder=\"请选择数据权限\"\n                                 :dic=\"dictScopeData\"\n                                 :props=\"dictProps\"></avue-select>\n\n\n\n                </template>\n\n                <template slot=\"dsScopeForm\" slot-scope=\"scope\">\n                    <div v-if=\"form.dsType == 7\">\n                        <el-tree class=\"filter-tree\"\n                                 :data=\"dsScopeData\"\n                                 :check-strictly=\"true\"\n                                 node-key=\"code\"\n                                 highlight-current\n                                 :props=\"deptTreeProps\"\n                                 ref=\"scopeTree\"\n                                 :default-checked-keys=\"checkedDsScope\"\n                                 show-checkbox>\n                        </el-tree>\n                    </div>\n                </template>\n\n\n                <template slot=\"menu\"\n                          slot-scope=\"scope\" >\n                    <label v-if=\"showHideDdl(scope.row.lockUp,scope.row.updateBy)\" style=\"padding-left: 10px\">\n                    <el-button size=\"mini\"\n                               type=\"text\"\n                               icon=\"el-icon-edit\"\n                               v-if=\"roleManager_btn_edit\"\n                               @click=\"handleUpdate(scope.row,scope.index)\">编辑\n                    </el-button>\n                    <el-button size=\"mini\"\n                               type=\"text\"\n                               icon=\"el-icon-delete\"\n                               v-if=\"roleManager_btn_del\"\n                               @click=\"handleDelete(scope.row,scope.index)\">删除\n                    </el-button>\n                    <el-button size=\"mini\"\n                               type=\"text\"\n                               icon=\"el-icon-plus\"\n                               plain\n                               @click=\"handlePermission(scope.row,scope.index)\"\n                               v-if=\"roleManager_btn_perm\">权限\n                    </el-button>\n                    </label>\n                </template>\n            </avue-crud>\n        </basic-container>\n        <el-dialog title=\"分配权限\"\n                   :visible.sync=\"dialogPermissionVisible\">\n            <el-tree class=\"filter-tree\"\n                     :data=\"treeData\"\n                     :default-checked-keys=\"checkedKeys\"\n                     :check-strictly=\"false\"\n                     node-key=\"id\"\n                     highlight-current\n                     :props=\"defaultProps\"\n                     show-checkbox\n                     ref=\"menuTree\"\n                     :filter-node-method=\"filterNode\"\n            >\n      <span class=\"custom-tree-node\" slot-scope=\"{ node, data }\">\n        <span>{{ node.label }}</span>\n        <span v-if=\" data.permission \" v-show=\"node.checked\">\n          <el-button type=\"text\" size=\"mini\" @click=\"definedDataScope(data.id,data.permission)\">\n              <span v-html=\"getLevelLabel(data.id)\"></span>\n          </el-button>\n           <el-button v-if=\"exitScope(data.id)\" type=\"text\" size=\"mini\" style=\"color: red\" @click=\"clearDefinedDataScope(data.id)\">\n               &nbsp;&nbsp;清除\n           </el-button>\n\n        </span>\n      </span>\n            </el-tree>\n            <div slot=\"footer\"\n                 class=\"dialog-footer\">\n                <el-button type=\"primary\" ref=\"buttonUpdate\"\n                           @click=\"updatePermession(roleId, roleCode)\">更 新\n                </el-button>\n            </div>\n        </el-dialog>\n        <el-dialog title=\"自定义菜单数据权限\" :visible.sync=\"dialogDefinedPermission\">\n            <el-form v-model=\"definedForm\">\n\n                <el-form-item label=\"数据权限\" prop=\"levelId\">\n                    <el-select v-model=\"definedForm.levelId\" placeholder=\"请选择权限级别\">\n                        <el-option v-for=\"dict in dictScopeData\" :label=\"dict.label\" :value=\"dict.value\" :key=\"dict.value\"/>\n                    </el-select>\n                </el-form-item>\n                <el-form-item>\n                    <div v-if=\"definedForm.levelId == 7\">\n                        <el-tree class=\"filter-tree\"\n                                 :data=\"definedDeptData\"\n                                 :check-strictly=\"true\"\n                                 node-key=\"code\"\n                                 highlight-current\n                                 :props=\"deptTreeProps\"\n                                 ref=\"definedTree\"\n                                 :default-checked-keys=\"definedLevelId\"\n                                 :filter-node-method=\"filterNode\"\n                                 show-checkbox>\n                        </el-tree>\n\n                    </div>\n\n                </el-form-item>\n            </el-form>\n            <div slot=\"footer\"\n                 class=\"dialog-footer\">\n                <el-button type=\"primary\" @click=\"saveDefinedDataScope\">确 定\n                </el-button>\n            </div>\n        </el-dialog>\n    </div>\n</template>\n\n<script>\n    import {addObj, delObj, fetchList, fetchRoleTree, getObj, permissionUpd, putObj,updateRoleMenu,fetchRoleMenuScope} from '@/api/admin/role'\n    import {tableOption} from '@/const/crud/admin/role'\n    import {fetchMenuTree} from '@/api/admin/menu'\n    import {remote} from \"@/api/admin/dict\";\n    import {fetchDeptTree, fetchTree} from \"@/api/admin/dept\";\n    import {mapGetters} from 'vuex'\n    export default {\n        name: 'table_role',\n        data() {\n            return {\n                tableOption: tableOption,\n                dsScopeData: [],\n                definedDeptData: [],\n                treeData: [],\n                checkedKeys: [],\n                checkedDsScope: [],\n                definedLevelId: [],\n                defaultProps: {\n                    label: \"name\",\n                    value: 'id'\n                },\n                deptTreeProps:{\n                    label: \"name\",\n                    value: 'code'\n                },\n                dictProps: {\n                    label: \"label\",\n                    value: 'value'\n                },\n                page: {\n                    total: 0, // 总页数\n                    currentPage: 1, // 当前页数\n                    pageSize: 20 // 每页显示多少条\n                },\n                menuIds: '',\n                list: [],\n                listLoading: true,\n                form: {},\n                buttonUpdate: '',\n                definedForm: {\n                    levelId: '',\n                    tempMenuId: '',\n                    tempDeptId: [],\n                    menuPermission:''\n                },\n                treeDeptData: [],\n                dictData: {\n                },\n                dictScopeData:{},\n                scopeMenuInfo: new Map(),\n                scopeMenuInfoChange:0,\n                roleId: undefined,\n                roleCode: undefined,\n                rolesOptions: undefined,\n                dialogPermissionVisible: false,\n                roleManager_btn_add: false,\n                roleManager_btn_edit: false,\n                roleManager_btn_del: false,\n                roleManager_btn_perm: false,\n                dialogDefinedPermission: false\n            }\n        },\n        created() {\n            this.roleManager_btn_add = this.permissions['sys_role_add']\n            this.roleManager_btn_edit = this.permissions['sys_role_edit']\n            this.roleManager_btn_del = this.permissions['sys_role_del']\n            this.roleManager_btn_perm = this.permissions['sys_role_perm']\n\n            remote('data_scope').then(response => {\n                this.dictData = response.data.data\n                if(this.isAdmin==true){\n                    this.dictScopeData = response.data.data\n                    return ;\n                }\n                 let type=this.userRole.dsType\n                 let tempDict=[]\n                switch(type){\n                    case \"0\":\n                        this.dictScopeData = response.data.data\n                        break;\n                    case \"1\":\n                        for(let dict of response.data.data){\n                            if(dict.value > 0){\n                                tempDict.push(dict);\n                            }\n                        }\n                        this.dictScopeData=tempDict;\n                        break;\n                    case \"2\":\n                        for(let dict of response.data.data){\n                            if(dict.value > 1){\n                                tempDict.push(dict);\n                            }\n                        }\n                        this.dictScopeData=tempDict;\n                        break;\n                    case \"3\":\n                        for(let dict of response.data.data){\n                            if(dict.value > 2){\n                                tempDict.push(dict);\n                            }\n                        }\n                        this.dictScopeData=tempDict;\n                        break;\n                    case \"4\":\n                        let level=this.userRole.codeLevel;\n                        switch (level) {\n                            case '0':\n                                for(let dict of response.data.data){\n                                    if(dict.value > 0){\n                                        tempDict.push(dict);\n                                    }\n                                }\n                                this.dictScopeData=tempDict;\n                                break;\n                            case '1':\n                                for(let dict of response.data.data){\n                                    if(dict.value > 0){\n                                        tempDict.push(dict);\n                                    }\n                                }\n                                this.dictScopeData=tempDict;\n                                break;\n                            case '2':\n                                for(let dict of response.data.data){\n                                    if(dict.value > 1){\n                                        tempDict.push(dict);\n                                    }\n                                }\n                                this.dictScopeData=tempDict;\n                            default:\n                                for(let dict of response.data.data){\n                                    if(dict.value > 3){\n                                        tempDict.push(dict);\n                                    }\n                                }\n                                this.dictScopeData=tempDict;\n                              break;\n\n\n                        }\n                        break;\n\n                    default:\n                        for(let dict of response.data.data){\n                            if(dict.value > 3){\n                                tempDict.push(dict);\n                            }\n                        }\n                        this.dictScopeData=tempDict;\n                }\n            })\n\n\n        },\n\n        computed: {\n            ...mapGetters(['elements', 'permissions',\"userInfo\",\"userRole\",\"userDept\",\"isAdmin\"]),\n\n        },\n        methods: {\n            showHideDdl:function(lockUp,userId){\n                if(lockUp ==='0'){\n                    if(userId===this.userInfo.userId||this.isAdmin==true){\n                        return true;\n                    }\n                    return false;\n                }\n               return true;\n            },\n            addMap:function(key,value){\n                this.scopeMenuInfo.set(\"menu_\"+key,value)\n                this.scopeMenuInfoChange +=1\n            },\n            deleteMap:function(key){\n                this.scopeMenuInfo.delete(\"menu_\"+key)\n                this.scopeMenuInfoChange +=1\n            },\n            clearMap:function(){\n              this.scopeMenuInfoChange=0\n              this.scopeMenuInfo.clear()\n                this.definedLevelId=[]\n            },\n            getList(page, params) {\n                this.listLoading = true\n                fetchList(Object.assign({\n                    current: page.currentPage,\n                    size: page.pageSize\n                }, params)).then(response => {\n                    this.list = response.data.data.records\n                    this.page.total = response.data.data.total\n                    this.listLoading = false\n                })\n            },\n            exitScope:function(menuId){\n              return this.scopeMenuInfo.has(\"menu_\"+menuId)\n            },\n            handleRefreshChange() {\n                this.getList(this.page)\n            },\n            handleFilter(param) {\n                this.page.page = 1;\n                this.getList(this.page, param);\n            },\n            handleCreate() {\n                this.$refs.crud.rowAdd();\n            },\n            handleOpenBefore(show, type) {\n                window.boxType = type;\n                this.handleDept();\n                fetchTree().then(response => {\n                    this.dsScopeData = response.data.data;\n                    if (this.form.dsScope) {\n                        this.checkedDsScope = (this.form.dsScope).split(\",\")\n                    } else {\n                        this.checkedDsScope = []\n                    }\n                });\n                show();\n            },\n            handleUpdate(row, index) {\n                this.$refs.crud.rowEdit(row, index);\n            },\n            handlePermission(row) {\n\n                this.clearMap();\n                fetchRoleMenuScope(row.roleId).then(response => {\n                    let menuScope=response.data;\n                    if(typeof (menuScope)!=\"undefined\" ){\n                        for(let ms of menuScope){\n                            let  scopeMenu = {};\n                            scopeMenu['menuId'] = ms.menuId\n                            scopeMenu['dsType'] = ms.dsType\n                            scopeMenu['dsScope'] = ms.dsScope\n                            scopeMenu['permission']=ms.permission\n                            scopeMenu['label'] = ''\n                            this.dictData.forEach(function(obj){\n                                if(obj.value===scopeMenu['dsType']){\n                                    scopeMenu['label'] = obj.label\n                                    return\n                                }\n                            })\n                            this.addMap(ms.menuId, scopeMenu);\n                        }\n                    }\n                });\n\n                fetchRoleTree(row.roleId)\n                    .then(response => {\n                        this.checkedKeys = response.data\n                        return fetchMenuTree()\n                    })\n                    .then(response => {\n                        this.treeData = response.data.data\n\n                        // 解析出所有的太监节点\n                        this.checkedKeys = this.resolveAllEunuchNodeId(this.treeData, this.checkedKeys, [])\n                        this.dialogStatus = 'permission'\n                        this.dialogPermissionVisible = true\n                        this.roleId = row.roleId\n                        this.roleCode = row.roleCode\n                    });\n\n\n\n\n            },\n            /**\n             * 解析出所有的太监节点id\n             * @param json 待解析的json串\n             * @param idArr 原始节点数组\n             * @param temp 临时存放节点id的数组\n             * @return 太监节点id数组\n             */\n            resolveAllEunuchNodeId(json, idArr, temp) {\n                for (let i = 0; i < json.length; i++) {\n                    const item = json[i]\n                    // 存在子节点，递归遍历;不存在子节点，将json的id添加到临时数组中\n                    if (item.children && item.children.length !== 0) {\n                        this.resolveAllEunuchNodeId(item.children, idArr, temp)\n                    } else {\n                        temp.push(idArr.filter(id => id === item.id))\n                    }\n                }\n                return temp\n            },\n            filterNode(value, data) {\n                if (!value) return true\n                return data.label.indexOf(value) !== -1\n            },\n            getNodeData(data, done) {\n                done();\n            },\n            handleDelete(row, index) {\n                var _this = this\n                this.$confirm('是否确认删除名称为\"' + row.roleName + '\"' + '\"的数据项?', '警告', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                }).then(function () {\n                    return delObj(row.roleId)\n                }).then(() => {\n                    this.getList(this.page)\n                    this.list.splice(index, 1);\n                    _this.$message({\n                        showClose: true,\n                        message: '删除成功',\n                        type: 'success'\n                    })\n                }).catch(function () {\n                })\n            },\n            create(row, done, loading) {\n                if (this.form.dsType === 1) {\n                    this.form.dsScope = this.$refs.scopeTree.getCheckedKeys().join(',')\n                }\n                addObj(this.form).then(() => {\n                    this.getList(this.page)\n                    done();\n                    this.$notify({\n                        title: '成功',\n                        message: '创建成功',\n                        type: 'success',\n                        duration: 2000\n                    })\n                }).catch(() => {\n                    loading();\n                });\n            },\n            update(row, index, done, loading) {\n                if (this.form.dsType === '7') {\n                    this.form.dsScope = this.$refs.scopeTree.getCheckedKeys().join(',')\n                }\n                putObj(this.form).then(() => {\n                    this.getList(this.page)\n                    done();\n                    this.$notify({\n                        title: '成功',\n                        message: '修改成功',\n                        type: 'success',\n                        duration: 2000\n                    })\n                }).catch(() => {\n                    loading();\n                });\n            },\n            updatePermession(roleId, roleCode) {\n                this.menuIds = ''\n                this.menuIds = this.$refs.menuTree.getCheckedKeys().join(',').concat(',').concat(this.$refs.menuTree.getHalfCheckedKeys().join(','))\n                let defineForm ={}\n                let nodes =new Array();\n                for(let value of this.scopeMenuInfo.values()){\n                    nodes.push(JSON.parse(JSON.stringify(value)));\n                }\n                defineForm['menuIds']=this.menuIds\n                defineForm['roleId']=roleId\n                defineForm['roleMenuScopeList']=nodes\n                updateRoleMenu(defineForm).then(() => {\n                    this.dialogPermissionVisible = false\n                    fetchMenuTree()\n                        .then(response => {\n                            this.form = response.data.data\n                            return fetchRoleTree(roleId)\n                        })\n                        .then(response => {\n                            this.checkedKeys = response.data\n                            this.$notify({\n                                title: '成功',\n                                message: '修改成功',\n                                type: 'success',\n                                duration: 2000\n                            })\n                        })\n                })\n            },\n            definedDataScope(id,permission) {\n                this.dialogDefinedPermission = true\n                this.definedForm.tempMenuId = id\n                this.definedForm.menuPermission=permission\n                let scopeMenu=this.scopeMenuInfo.get(\"menu_\"+id);\n                if(scopeMenu&&typeof (scopeMenu)!=\"undefined\"){\n                    this.definedForm.levelId=scopeMenu.dsType\n                    if(this.definedForm.levelId==='7' && scopeMenu.dsScope ){\n                        this.definedLevelId=scopeMenu.dsScope.split(',')\n                    }else{\n                        this.definedLevelId=[]\n                    }\n\n                }else{\n                    this.definedForm.levelId=''\n                }\n                if (this.definedDeptData) {\n                    fetchTree().then(response => {\n                        this.definedDeptData = response.data.data;\n                    });\n                }\n            },\n            clearDefinedDataScope(menuId){\n                this.deleteMap(menuId)\n            },\n            saveDefinedDataScope() {\n                if (this.definedForm.levelId === '7') {\n                    this.definedForm.tempDeptId = this.$refs.definedTree.getCheckedKeys().join(',')\n                    this.definedLevelId = this.$refs.definedTree.getCheckedKeys();\n                }else{\n                    this.definedForm.tempDeptId=''\n                    this.definedLevelId=[]\n                }\n\n                var  scopeMenu = {};\n                scopeMenu['menuId'] = this.definedForm.tempMenuId\n                scopeMenu['dsType'] = this.definedForm.levelId\n                scopeMenu['dsScope'] = this.definedForm.tempDeptId\n                scopeMenu['label'] = ''\n                scopeMenu['permission']=this.definedForm.menuPermission\n                this.dictData.forEach(function(obj){\n                   if(obj.value===scopeMenu['dsType']){\n                       scopeMenu['label'] = obj.label\n                       return\n                   }\n                })\n                this.addMap(this.definedForm.tempMenuId, scopeMenu);\n                this.dialogDefinedPermission = false\n\n            },\n\n            handleDept() {\n                fetchTree().then(response => {\n                    this.treeDeptData = response.data.data;\n                });\n            },\n\n        getDictLabel(value){\n            let label='未定义'\n            for(let dict of this.dictData){\n                if(dict.value === value){\n                    label=dict.label;\n                    return label\n                }\n            }\n\n            return label;\n        }\n        ,\n            getLevelLabel(menuId) {\n                let butText = '自定义';\n                let x = this.scopeMenuInfoChange;\n                let menuInfo = this.scopeMenuInfo.get(\"menu_\"+menuId);\n                if (typeof (menuInfo)!=\"undefined\" && null!=menuInfo) {\n                    butText = menuInfo.label;\n                }\n                return \"&nbsp;&nbsp;\" + butText;\n            }\n\n        }\n    }\n</script>\n"],"sourceRoot":"src/views/admin/role"}]}