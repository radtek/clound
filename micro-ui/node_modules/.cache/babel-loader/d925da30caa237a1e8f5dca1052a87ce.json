{"remainingRequest":"E:\\intellij work\\micro-ui\\node_modules\\babel-loader\\lib\\index.js!E:\\intellij work\\micro-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\intellij work\\micro-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\intellij work\\micro-ui\\src\\page\\login\\codelogin.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\intellij work\\micro-ui\\src\\page\\login\\codelogin.vue","mtime":1551167423417},{"path":"E:\\intellij work\\micro-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\intellij work\\micro-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\intellij work\\micro-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\intellij work\\micro-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"E:\\\\intellij work\\\\micro-ui\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar MSGINIT = \"发送验证码\",\n    MSGSCUCCESS = \"${time}秒后重发\",\n    MSGTIME = 60;\nimport { isvalidatemobile } from \"@/util/validate\";\nimport { mapGetters } from \"vuex\";\nimport request from '@/router/axios';\nexport default {\n  name: \"codelogin\",\n  data: function data() {\n    var validatePhone = function validatePhone(rule, value, callback) {\n      if (isvalidatemobile(value)[0]) {\n        callback(new Error(isvalidatemobile(value)[1]));\n      } else {\n        callback();\n      }\n    };\n\n    var validateCode = function validateCode(rule, value, callback) {\n      if (value.length != 4) {\n        callback(new Error(\"请输入4位数的验证码\"));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      msgText: MSGINIT,\n      msgTime: MSGTIME,\n      msgKey: false,\n      loginForm: {\n        mobile: '',\n        code: ''\n      },\n      loginRules: {\n        mobile: [{\n          required: true,\n          trigger: 'blur',\n          validator: validatePhone\n        }],\n        code: [{\n          required: true,\n          trigger: 'blur',\n          validator: validateCode\n        }]\n      }\n    };\n  },\n  created: function created() {},\n  mounted: function mounted() {},\n  computed: _objectSpread({}, mapGetters([\"tagWel\"])),\n  props: [],\n  methods: {\n    handleSend: function handleSend() {\n      var _this = this;\n\n      if (this.msgKey) return;\n      request({\n        url: '/admin/mobile/' + this.loginForm.mobile,\n        method: 'get'\n      }).then(function (response) {\n        if (response.data.data) {\n          _this.$message.success('验证码发送成功');\n        } else {\n          _this.$message.error(response.data.msg);\n        }\n      });\n      this.msgText = MSGSCUCCESS.replace('${time}', this.msgTime);\n      this.msgKey = true;\n      var time = setInterval(function () {\n        _this.msgTime--;\n        _this.msgText = MSGSCUCCESS.replace('${time}', _this.msgTime);\n\n        if (_this.msgTime == 0) {\n          _this.msgTime = MSGTIME;\n          _this.msgText = MSGINIT;\n          _this.msgKey = false;\n          clearInterval(time);\n        }\n      }, 1000);\n    },\n    handleLogin: function handleLogin() {\n      var _this2 = this;\n\n      this.$refs.loginForm.validate(function (valid) {\n        if (valid) {\n          _this2.$store.dispatch(\"LoginByPhone\", _this2.loginForm).then(function () {\n            _this2.$router.push({\n              path: _this2.tagWel.value\n            });\n          });\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["codelogin.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <el-form class=\"login-form\"\n           status-icon\n           :rules=\"loginRules\"\n           ref=\"loginForm\"\n           :model=\"loginForm\"\n           label-width=\"0\">\n    <el-form-item prop=\"phone\">\n      <el-input size=\"small\"\n                @keyup.enter.native=\"handleLogin\"\n                v-model=\"loginForm.mobile\"\n                auto-complete=\"off\"\n                placeholder=\"请输入手机号码\">\n        <i slot=\"prefix\"\n           class=\"icon-shouji\"></i>\n      </el-input>\n    </el-form-item>\n    <el-form-item prop=\"code\">\n      <el-input size=\"small\"\n                @keyup.enter.native=\"handleLogin\"\n                v-model=\"loginForm.code\"\n                auto-complete=\"off\"\n                placeholder=\"请输入验证码\">\n        <i slot=\"prefix\"\n           class=\"icon-yanzhengma\"\n           style=\"margin-top:6px;\"></i>\n        <template slot=\"append\">\n          <span @click=\"handleSend\"\n                class=\"msg-text\"\n                :class=\"[{display:msgKey}]\">{{msgText}}</span>\n        </template>\n      </el-input>\n    </el-form-item>\n    <el-form-item>\n      <el-button size=\"small\"\n                 type=\"primary\"\n                 @click.native.prevent=\"handleLogin\"\n                 class=\"login-submit\">登录</el-button>\n    </el-form-item>\n  </el-form>\n</template>\n\n<script>\nconst MSGINIT = \"发送验证码\",\n  MSGSCUCCESS = \"${time}秒后重发\",\n  MSGTIME = 60;\nimport { isvalidatemobile } from \"@/util/validate\";\nimport { mapGetters } from \"vuex\";\nimport request from '@/router/axios'\nexport default {\n  name: \"codelogin\",\n  data () {\n    const validatePhone = (rule, value, callback) => {\n      if (isvalidatemobile(value)[0]) {\n        callback(new Error(isvalidatemobile(value)[1]));\n      } else {\n        callback();\n      }\n    };\n    const validateCode = (rule, value, callback) => {\n      if (value.length != 4) {\n        callback(new Error(\"请输入4位数的验证码\"));\n      } else {\n        callback();\n      }\n    };\n    return {\n      msgText: MSGINIT,\n      msgTime: MSGTIME,\n      msgKey: false,\n      loginForm: {\n          mobile: '',\n          code: ''\n      },\n      loginRules: {\n          mobile: [{ required: true, trigger: 'blur', validator: validatePhone }],\n          code: [{ required: true, trigger: 'blur', validator: validateCode }]\n      }\n    };\n  },\n  created () { },\n  mounted () { },\n  computed: {\n    ...mapGetters([\"tagWel\"])\n  },\n  props: [],\n  methods: {\n    handleSend() {\n          if (this.msgKey) return\n\n          request({\n              url: '/admin/mobile/' + this.loginForm.mobile,\n              method: 'get'\n          }).then(response => {\n              if (response.data.data) {\n                  this.$message.success('验证码发送成功')\n              } else {\n                  this.$message.error(response.data.msg)\n              }\n          })\n\n          this.msgText = MSGSCUCCESS.replace('${time}', this.msgTime)\n          this.msgKey = true\n          const time = setInterval(() => {\n              this.msgTime--\n              this.msgText = MSGSCUCCESS.replace('${time}', this.msgTime)\n              if (this.msgTime == 0) {\n                  this.msgTime = MSGTIME\n                  this.msgText = MSGINIT\n                  this.msgKey = false\n                  clearInterval(time)\n              }\n          }, 1000)\n      },\n    handleLogin () {\n      this.$refs.loginForm.validate(valid => {\n        if (valid) {\n          this.$store.dispatch(\"LoginByPhone\", this.loginForm).then(() => {\n            this.$router.push({ path: this.tagWel.value });\n          });\n        }\n      });\n    }\n  }\n};\n</script>\n\n<style>\n.msg-text {\n  display: block;\n  width: 60px;\n  font-size: 12px;\n  text-align: center;\n  cursor: pointer;\n}\n.msg-text.display {\n  color: #ccc;\n}\n</style>\n"],"sourceRoot":"src/page/login"}]}