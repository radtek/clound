{"remainingRequest":"G:\\intellij work\\micro-ui\\node_modules\\babel-loader\\lib\\index.js!G:\\intellij work\\micro-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!G:\\intellij work\\micro-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\intellij work\\micro-ui\\src\\views\\portal\\unit\\standard\\metadata\\fieldIndex.vue?vue&type=script&lang=js&","dependencies":[{"path":"G:\\intellij work\\micro-ui\\src\\views\\portal\\unit\\standard\\metadata\\fieldIndex.vue","mtime":1560132718207},{"path":"G:\\intellij work\\micro-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\intellij work\\micro-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"G:\\intellij work\\micro-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\intellij work\\micro-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _JSON$stringify from \"G:\\\\intellij work\\\\micro-ui\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/json/stringify\";\nimport \"core-js/modules/es6.function.name\";\nimport _Object$assign from \"G:\\\\intellij work\\\\micro-ui\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/object/assign\";\nimport _objectSpread from \"G:\\\\intellij work\\\\micro-ui\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { fetchPreViewList, preViewAddObj, addObj, getObj, delObj, fetchList, putObj, checkDbConn } from '@/api/portal/metadata/standardfields/field';\nimport { tableOption, preViewOption, newVue } from '@/const/crud/portal/metadata/standardfields/field';\nimport { mapGetters } from 'vuex';\nexport default {\n  name: 'field',\n  data: function data() {\n    return {\n      preViewFlag: false,\n      tableData: [],\n      preViewData: [],\n      page: {\n        total: 0,\n        // 总页数\n        currentPage: 1,\n        // 当前页数\n        pageSize: 10 // 每页显示多少条\n\n      },\n      preViewPage: {\n        total: 0,\n        // 总页数\n        currentPage: 1,\n        // 当前页数\n        pageSize: 10 // 每页显示多少条\n\n      },\n      tableLoading: false,\n      preViewlistLoading: true,\n      tableOption: tableOption,\n      preViewOption: preViewOption,\n      tableId: undefined,\n      tableName: undefined,\n      dbId: undefined,\n      selData: [],\n      preViewSelData: [],\n      form: {},\n      editId: \"\"\n    };\n  },\n  created: function created() {\n    this.tableId = this.$route.query.tbId;\n    this.tableName = this.$route.query.tbName;\n    this.dbId = this.$route.query.dbId;\n    this.tableOption.column[1].valueDefault = this.tableName;\n    newVue.obj = this;\n  },\n  mounted: function mounted() {},\n  computed: _objectSpread({}, mapGetters(['permissions'])),\n  methods: {\n    getList: function getList(page, params) {\n      var _this2 = this;\n\n      this.tableLoading = true;\n      fetchList(_Object$assign({\n        current: page.currentPage,\n        size: page.pageSize,\n        tableId: this.tableId\n      }, params)).then(function (response) {\n        _this2.tableData = response.data.data.records;\n        _this2.page.total = response.data.data.total;\n        _this2.tableLoading = false;\n      });\n    },\n    getPreViewList: function getPreViewList(preViewPage, params) {\n      var _this3 = this;\n\n      this.preViewData = [];\n      this.preViewlistLoading = true;\n      fetchPreViewList(_Object$assign({\n        current: preViewPage.currentPage,\n        size: preViewPage.pageSize,\n        tableId: this.tableId\n      }, params)).then(function (response) {\n        _this3.preViewData = response.data.data;\n        _this3.preViewPage.total = response.data.data.total;\n        _this3.preViewlistLoading = false;\n      });\n      this.$refs.preViewCrud.selectClear();\n    },\n\n    /**\n     * @title 打开新增窗口\n     * @detail 调用crud的handleadd方法即可\n     *\n     **/\n    handleAdd: function handleAdd() {\n      this.$refs.crud.rowAdd();\n    },\n    handleEdit: function handleEdit(row, index) {\n      row.tableId = this.tableName;\n      this.$refs.crud.rowEdit(row, index);\n      this.editId = row.id;\n    },\n    handleOpenBefore: function handleOpenBefore(show, type) {\n      window.boxType = type;\n      show();\n    },\n    handleDel: function handleDel(row, index) {\n      var _this4 = this;\n\n      //删除行\n      var _this = this;\n\n      var title = '是否确认删除字段名为\"' + row.name + '\",字段类型为\"' + row.type + '\"的数据项?';\n      this.$confirm(title, '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        return delObj(row.id, _this.tableId);\n      }).then(function () {\n        _this4.getList(_this4.page);\n\n        _this.$message({\n          showClose: true,\n          message: '删除成功',\n          type: 'success'\n        });\n      }).catch(function () {});\n    },\n\n    /**\n     * @title 数据更新\n     * @param row 为当前的数据\n     * @param index 为当前更新数据的行数\n     * @param done 为表单关闭函数\n     *\n     **/\n    handleUpdate: function handleUpdate(row, index, done) {\n      var _this5 = this;\n\n      putObj(row).then(function () {\n        _this5.tableData.splice(index, 1, _Object$assign({}, row));\n\n        _this5.$message({\n          showClose: true,\n          message: '修改成功',\n          type: 'success'\n        });\n\n        _this5.getList(_this5.page);\n\n        done();\n      });\n    },\n\n    /**\n     * @title 数据添加\n     * @param row 为当前的数据\n     * @param done 为表单关闭函数\n     *\n     **/\n    handleSave: function handleSave(row, done) {\n      var _this6 = this;\n\n      row.tableId = this.tableId;\n      addObj(row).then(function (data) {\n        _this6.tableData.push(_Object$assign({}, row));\n\n        _this6.$message({\n          showClose: true,\n          message: '添加成功',\n          type: 'success'\n        });\n\n        _this6.getList(_this6.page);\n\n        done();\n      });\n    },\n    handleFilter: function handleFilter(param) {\n      this.page.page = 1;\n      this.getList(this.page, param);\n    },\n    preHandleFilter: function preHandleFilter(param) {\n      this.preViewPage.page = 1;\n      this.getPreViewList(this.preViewPage, param);\n    },\n    handleDelAll: function handleDelAll() {\n      var _this7 = this;\n\n      // 列表批量删除\n      if (this.selData.length > 0) {\n        this.$confirm('此操作将永久删除, 是否继续?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(function () {\n          var ids = \"\";\n\n          for (var i = 0; i < _this7.selData.length; i++) {\n            ids += _this7.selData[i].id + \",\";\n          }\n\n          delObj(ids).then(function () {\n            _this7.getList(_this7.page);\n\n            _this7.$message({\n              showClose: true,\n              message: '删除成功',\n              type: 'success'\n            });\n          });\n        });\n      } else {\n        this.$message({\n          showClose: true,\n          message: '请选择要删除的字段',\n          type: 'warning'\n        });\n      }\n    },\n    selectionChange: function selectionChange(data) {\n      this.selData = data;\n    },\n    importField: function importField() {\n      var _this8 = this;\n\n      if (this.preViewSelData.length > 0) {\n        this.$confirm('确认导入?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(function () {\n          var defineForm = {};\n          var nodes = new Array();\n\n          for (var i = 0; i < _this8.preViewSelData.length; i++) {\n            nodes.push(JSON.parse(_JSON$stringify(_this8.preViewSelData[i])));\n          }\n\n          defineForm['tableId'] = _this8.tableId;\n          defineForm['fieldList'] = nodes;\n          console.log(defineForm);\n          preViewAddObj(defineForm).then(function () {\n            _this8.preViewFlag = false;\n\n            _this8.getList(_this8.preViewPage);\n\n            _this8.$notify({\n              title: \"成功\",\n              message: \"导入成功\",\n              type: \"success\",\n              duration: 2000\n            });\n          });\n        });\n      } else {\n        this.$message({\n          showClose: true,\n          message: '请选择要导入的表',\n          type: 'warning'\n        });\n      }\n    },\n    preSelectionChange: function preSelectionChange(data) {\n      this.preViewSelData = data;\n    },\n    preViewTest: function preViewTest() {\n      var _this9 = this;\n\n      checkDbConn(this.dbId).then(function (response) {\n        if (response.data.message === \"测试数据源连接成功\") {\n          _this9.preViewFlag = true;\n\n          _this9.getPreViewList(_this9.preViewPage);\n        } else {\n          _this9.$alert(response.data.message, '连接结果', {\n            confirmButtonText: '确定',\n            type: 'warning',\n            callback: function callback(action) {}\n          });\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["fieldIndex.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"execution\">\n        <basic-container>\n\n            <avue-crud  ref=\"crud\"\n                        v-model=\"form\"\n                        :page=\"page\"\n                        :data=\"tableData\"\n                        :table-loading=\"tableLoading\"\n                        :option=\"tableOption\"\n                        @on-load=\"getList\"\n                        @row-update=\"handleUpdate\"\n                        @row-save=\"handleSave\"\n                        @search-change=\"handleFilter\"\n                        @refresh-change=\"getList\"\n                        @selection-change=\"selectionChange\"\n                        :before-open=\"handleOpenBefore\">\n\n                <template slot=\"menuLeft\">\n                    <el-button @click=\"handleAdd\"\n                               v-if=\"permissions.data_table_add\"\n                               icon=\"el-icon-plus\"\n                               type=\"primary\"\n                               size=\"small\">添加</el-button>\n                    <el-button type=\"primary\"\n                               v-if=\"permissions.data_table_del\"\n                               icon=\"el-icon-delete\"\n                               @click=\"handleDelAll\"\n                               size=\"small\">删除</el-button>\n                    <el-button @click=\"preViewTest()\"\n                               v-if=\"permissions.data_table_add\"\n                               icon=\"el-icon-download\"\n                               type=\"primary\"\n                               size=\"small\">预览导入</el-button>\n                </template>\n\n                <template slot-scope=\"scope\" slot=\"menu\">\n                    <el-button type=\"text\"\n                               v-if=\"permissions.data_table_edit\"\n                               icon=\"el-icon-edit\"\n                               size=\"mini\"\n                               plain\n                               @click=\"handleEdit(scope.row,scope.index)\">编辑\n                    </el-button>\n                    <el-button type=\"text\"\n                               v-if=\"permissions.data_table_del\"\n                               icon=\"el-icon-delete\"\n                               size=\"mini\"\n                               plain\n                               @click=\"handleDel(scope.row,scope.index)\">删除\n                    </el-button>\n                </template>\n            </avue-crud>\n        </basic-container>\n\n        <el-dialog title=\"预览导入\" fullscreen :visible.sync=\"preViewFlag\" :append-to-body=\"true\">\n            <avue-crud   ref=\"preViewCrud\"\n                        :option=\"preViewOption\"\n                        :data=\"preViewData\"\n                        :page=\"preViewPage\"\n                        :table-loading=\"preViewlistLoading\"\n                        @on-load=\"getPreViewList\"\n                        @search-change=\"preHandleFilter\"\n                        @refresh-change=\"getPreViewList\"\n                        @selection-change=\"preSelectionChange\">\n                <template slot=\"menuLeft\">\n                    <el-button v-if=\"permissions.data_table_add\"\n                               @click=\"importField\"\n                               size=\"small\"\n                               type=\"primary\"\n                               icon=\"el-icon-download\">导入\n                    </el-button>\n                </template>\n            </avue-crud>\n        </el-dialog>\n\n    </div>\n</template>\n\n<script>\n    import {fetchPreViewList,preViewAddObj,addObj, getObj,delObj, fetchList, putObj,checkDbConn} from '@/api/portal/metadata/standardfields/field'\n    import {tableOption,preViewOption,newVue} from '@/const/crud/portal/metadata/standardfields/field'\n    import {mapGetters} from 'vuex'\n\n    export default {\n        name: 'field',\n        data() {\n            return {\n                preViewFlag:false,\n                tableData: [],\n                preViewData: [],\n                page: {\n                    total: 0, // 总页数\n                    currentPage: 1, // 当前页数\n                    pageSize: 10 // 每页显示多少条\n                },\n                preViewPage: {\n                    total: 0, // 总页数\n                    currentPage: 1, // 当前页数\n                    pageSize: 10 // 每页显示多少条\n                },\n                tableLoading: false,\n                preViewlistLoading: true,\n                tableOption: tableOption,\n                preViewOption:preViewOption,\n                tableId: undefined,\n                tableName: undefined,\n                dbId:undefined,\n                selData: [],\n                preViewSelData: [],\n                form: {},\n                editId:\"\",\n            }\n        },\n        created() {\n            this.tableId = this.$route.query.tbId\n            this.tableName = this.$route.query.tbName\n            this.dbId = this.$route.query.dbId\n            this.tableOption.column[1].valueDefault = this.tableName\n            newVue.obj = this\n        },\n        mounted: function () {\n        },\n        computed: {\n            ...mapGetters(['permissions'])\n        },\n        methods: {\n            getList(page, params) {\n                this.tableLoading = true\n                fetchList(Object.assign({\n                    current: page.currentPage,\n                    size: page.pageSize,\n                    tableId : this.tableId\n                }, params)).then(response => {\n                    this.tableData = response.data.data.records\n                    this.page.total = response.data.data.total\n                    this.tableLoading = false\n                })\n            },\n            getPreViewList(preViewPage, params) {\n                this.preViewData=[]\n                this.preViewlistLoading = true;\n                fetchPreViewList(Object.assign({\n                    current: preViewPage.currentPage,\n                    size: preViewPage.pageSize,\n                    tableId: this.tableId\n                }, params)).then(response => {\n                    this.preViewData = response.data.data;\n                    this.preViewPage.total = response.data.data.total\n                    this.preViewlistLoading = false;\n                });\n                this.$refs.preViewCrud.selectClear();\n            },\n            /**\n             * @title 打开新增窗口\n             * @detail 调用crud的handleadd方法即可\n             *\n             **/\n            handleAdd: function () {\n                this.$refs.crud.rowAdd()\n            },\n            handleEdit(row, index) {\n                row.tableId = this.tableName;\n                this.$refs.crud.rowEdit(row, index)\n                this.editId=row.id;\n            },\n            handleOpenBefore(show, type) {\n                window.boxType = type;\n                show();\n            },\n            handleDel: function (row, index) { //删除行\n                var _this = this\n                let title = '是否确认删除字段名为\"' + row.name + '\",字段类型为\"' + row.type + '\"的数据项?'\n                this.$confirm(title, '警告', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                }).then(function () {\n                    return delObj(row.id, _this.tableId)\n                }).then(() => {\n                    this.getList(this.page)\n                    _this.$message({\n                        showClose: true,\n                        message: '删除成功',\n                        type: 'success'\n                    })\n                }).catch(function () {\n                })\n            },\n            /**\n             * @title 数据更新\n             * @param row 为当前的数据\n             * @param index 为当前更新数据的行数\n             * @param done 为表单关闭函数\n             *\n             **/\n            handleUpdate: function (row, index, done) {\n                putObj(row).then(() => {\n                    this.tableData.splice(index, 1, Object.assign({}, row))\n                    this.$message({\n                        showClose: true,\n                        message: '修改成功',\n                        type: 'success'\n                    })\n                    this.getList(this.page)\n                    done()\n                })\n            },\n            /**\n             * @title 数据添加\n             * @param row 为当前的数据\n             * @param done 为表单关闭函数\n             *\n             **/\n            handleSave: function (row, done) {\n                row.tableId = this.tableId;\n                addObj(row).then(data => {\n                    this.tableData.push(Object.assign({}, row))\n                    this.$message({\n                        showClose: true,\n                        message: '添加成功',\n                        type: 'success'\n                    })\n                    this.getList(this.page)\n                    done()\n                })\n            },\n            handleFilter(param) {\n                this.page.page = 1;\n                this.getList(this.page,param)\n            },\n            preHandleFilter(param){\n                this.preViewPage.page = 1;\n                this.getPreViewList(this.preViewPage,param);\n            },\n            handleDelAll(){// 列表批量删除\n                if(this.selData.length > 0){\n                    this.$confirm('此操作将永久删除, 是否继续?', '提示', {\n                        confirmButtonText: '确定',\n                        cancelButtonText: '取消',\n                        type: 'warning'\n                    }).then(() => {\n                        let ids = \"\"\n                        for(let i = 0; i < this.selData.length; i++){\n                            ids += this.selData[i].id + \",\"\n                        }\n                        delObj(ids).then(() => {\n                            this.getList(this.page)\n                            this.$message({\n                                showClose: true,\n                                message: '删除成功',\n                                type: 'success'\n                            })\n                        })\n                    })\n                }else {\n                    this.$message({\n                        showClose: true,\n                        message: '请选择要删除的字段',\n                        type: 'warning'\n                    })\n                }\n            },\n            selectionChange(data){\n                this.selData = data\n            },\n            importField() {\n                if(this.preViewSelData.length > 0){\n                    this.$confirm('确认导入?', '提示', {\n                        confirmButtonText: '确定',\n                        cancelButtonText: '取消',\n                        type: 'warning'\n                    }).then(() => {\n                        let defineForm ={}\n                        var nodes = new Array();\n                        for(let i = 0; i < this.preViewSelData.length; i++){\n                            nodes.push(JSON.parse(JSON.stringify(this.preViewSelData[i])));\n                        }\n                        defineForm['tableId']=this.tableId\n                        defineForm['fieldList']=nodes\n                        console.log(defineForm)\n                        preViewAddObj(defineForm).then(() => {\n                            this.preViewFlag = false;\n                            this.getList(this.preViewPage)\n                            this.$notify({\n                                title: \"成功\",\n                                message: \"导入成功\",\n                                type: \"success\",\n                                duration: 2000\n                            });\n                        })\n                    })\n                }else {\n                    this.$message({\n                        showClose: true,\n                        message: '请选择要导入的表',\n                        type: 'warning'\n                    })\n                }\n            },\n            preSelectionChange(data){\n                this.preViewSelData = data\n            },\n            preViewTest:function () {\n                checkDbConn(this.dbId).then(response => {\n                    if(response.data.message===\"测试数据源连接成功\"){\n                        this.preViewFlag=true\n                        this.getPreViewList(this.preViewPage);\n                    }else{\n                        this.$alert(response.data.message, '连接结果', {\n                            confirmButtonText: '确定',\n                            type: 'warning',\n                            callback: action => {\n                            },\n                        });\n                    }\n\n                })\n            }\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n</style>\n\n"],"sourceRoot":"src/views/portal/unit/standard/metadata"}]}