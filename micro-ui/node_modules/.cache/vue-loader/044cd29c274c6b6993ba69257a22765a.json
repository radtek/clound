{"remainingRequest":"G:\\intellij work\\micro-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\intellij work\\micro-ui\\src\\views\\portal\\archive\\contact\\contactList.vue?vue&type=script&lang=js&","dependencies":[{"path":"G:\\intellij work\\micro-ui\\src\\views\\portal\\archive\\contact\\contactList.vue","mtime":1560132717987},{"path":"G:\\intellij work\\micro-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\intellij work\\micro-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"G:\\intellij work\\micro-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\intellij work\\micro-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {tableOption,formOption} from '@/const/crud/portal/archive/contact/contact';\nimport {fetchGlList,fetchList,addObj} from \"@/api/portal/archive/contact/contact\";\nimport {fetchDictTree} from \"@/api/admin/dict\";\nimport {fetchArea} from '@/api/portal/archive/common-query/query'\n\nexport default {\n    name:'contactList',\n    props:[\"contactForm\"],\n    data(){\n        return {\n            listQuery:{\n                qtdwbh:'',\n            },//场所关联列表查询条件\n            form:{},\n            formTitle:'',//添加关联弹窗标题\n            showForm:false,\n            applyToBody: true,\n\n            tableLoading: false,\n            page: {\n                total: 0, // 总页数\n                currentPage: 1, // 当前页数\n                pageSize: 10 // 每页显示多少条\n            },\n            tableData: [],\n            option:tableOption,//关联列表\n\n            formData:[],\n            formOption:formOption,//添加要关联的场所列表\n            formPage:{\n                total: 0, // 总页数\n                currentPage: 1, // 当前页数\n                pageSize: 10 // 每页显示多少条\n            },\n            formLoading:false,\n            glForm:{},\n            searchForm:{\n                lyxtType:undefined,\n                qtdwbh:undefined,\n                sspcs:undefined,\n                areaCode:undefined,\n                dwmc:undefined,\n                address:undefined,\n                hylx:'',\n            },//场所关联 自定义搜索\n            hylxTreeData:[],\n            hylxTreeProps: {\n                label: \"label\",\n                value: 'value',\n            },\n            hylxQuery: {\n                type: 'HYLX'\n            },\n            xzqhTreeData:[],\n            xzqhTreeProps: {\n                label: \"name\",\n                value: 'code'\n            },\n            selData: [],//选中的要关联的场所数据\n        }\n    },\n    created(){\n        this.listQuery.qtdwbh = this.contactForm.qtdwbh\n        this.getGlList(this.page, this.listQuery)\n        this.getHylxData()\n        this.getXzqhData()\n    },\n    computed: {\n\n    },\n    methods:{\n        getGlList(page, params) {\n            this.tableData=[]\n            this.tableLoading = true;\n            fetchGlList(Object.assign({\n                current: page.currentPage,\n                size: page.pageSize\n            }, params)).then(response => {\n                this.tableData = response.data.data.records;\n                this.page.total = response.data.data.total\n                this.tableLoading = false;\n            });\n        },\n        addContact(){\n            this.formTitle=\"添加关联\"\n            this.showForm=true\n            this.searchForm.lyxtType=this.contactForm.lyxtType\n            this.searchForm.qtdwbh=this.contactForm.qtdwbh\n            this.searchForm.dwmc=this.contactForm.dwmc\n            this.searchForm.hylx = this.contactForm.hylx\n            this.searchForm.address = this.contactForm.address\n            this.searchForm.areaCode = this.contactForm.areaCode\n            this.searchForm.sspcs = this.contactForm.sspcs\n            this.getFormList(this.formPage,this.searchForm)\n        },\n        getFormList(formPage, params) {\n            this.formData=[]\n            this.formLoading = true;\n            fetchList(Object.assign({\n                current: formPage.currentPage,\n                size: formPage.pageSize\n            }, params)).then(response => {\n                this.formData = response.data.data.records;\n                this.formPage.total = response.data.data.total\n                this.formLoading = false;\n            });\n        },\n        getHylxData(){\n            this.hylxTreeData=[]\n            fetchDictTree(this.hylxQuery).then(response => {\n                this.hylxTreeData = response.data.data\n            })\n        },\n        getXzqhData(){\n            this.xzqhTreeData=[]\n            fetchArea().then(response => {\n                this.xzqhTreeData = response.data.data\n            })\n        },\n        selectionChange(data){\n            this.selData = data\n        },\n        refreshChange() {\n            this.getFormList(this.formPage, this.searchForm)\n        },\n        searchChange() {\n            this.formPage.page = 1;\n            this.getFormList(this.formPage, this.searchForm)\n        },\n        importData(){\n            if(this.selData.length > 0){\n                this.$confirm('确认关联?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                }).then(() => {\n                    let defineForm ={}\n                    let ids = \"\"\n                    for(let i = 0; i < this.selData.length; i++){\n                        ids += this.selData[i].dwbh + \",\"\n                    }\n                    defineForm['qtdwbh']=this.listQuery.qtdwbh\n                    defineForm['lyxtType']='0'\n                    defineForm['dwbh']=ids\n                    addObj(defineForm).then(() => {\n                        this.showForm = false;\n                        this.getGlList(this.formPage,this.listQuery)\n                        this.$notify({\n                            title: \"成功\",\n                            message: \"场所关联成功\",\n                            type: \"success\",\n                            duration: 2000\n                        });\n                    })\n                })\n            }else {\n                this.$message({\n                    showClose: true,\n                    message: '请选择要关联的数据',\n                    type: 'warning'\n                })\n            }\n        },\n        clearForm(){\n            this.searchForm.dwmc=''\n            this.searchForm.hylx=''\n            this.searchForm.address=''\n            this.searchForm.areaCode=''\n        },\n\n    },\n\n    watch: {\n        contactForm: {\n            //深度监控父组件传递过来的值、否则无法根据传递过来的值更新数据\n            handler() {\n                this.listQuery.qtdwbh = this.contactForm.qtdwbh\n                this.getGlList(this.page,this.listQuery);\n                this.getHylxData()\n                this.getXzqhData()\n            },\n            deep: true\n        },\n    }\n}\n",{"version":3,"sources":["contactList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+EA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"contactList.vue","sourceRoot":"src/views/portal/archive/contact","sourcesContent":["<template>\n <div class=\"execution\">\n   <basic-container>\n    <avue-crud :option=\"option\"\n               :data=\"tableData\"\n               v-model=\"form\"\n               ref=\"crud\"\n               :page=\"page\"\n               @on-load=\"getGlList\"\n               :table-loading=\"tableLoading\">\n        <template slot=\"menuLeft\">\n            <el-button @click=\"addContact\"\n                       icon=\"el-icon-plus\"\n                       type=\"primary\"\n                       size=\"small\">添加关联</el-button>\n        </template>\n    </avue-crud>\n   </basic-container>\n\n     <el-dialog :title=\"formTitle\" fullscreen :visible.sync=\"showForm\"  :append-to-body=\"applyToBody\">\n         <avue-crud :option=\"formOption\"\n                    :data=\"formData\"\n                    v-model=\"glForm\"\n                    ref=\"contact\"\n                    :page=\"formPage\"\n                    @search-reset=\"clearForm\"\n                    @search-change=\"searchChange\"\n                    @refresh-change=\"refreshChange\"\n                    :table-loading=\"formLoading\"\n                    @selection-change=\"selectionChange\">\n             <template slot=\"search\">\n                 <el-form-item label=\"场所名称\">\n                     <el-input\n                             placeholder=\"请输入内容\"\n                             v-model=\"searchForm.dwmc\"\n                             clearable>\n                     </el-input>\n                 </el-form-item>\n                 <el-form-item label=\"经营地址\">\n                     <el-input\n                             placeholder=\"请输入内容\"\n                             v-model=\"searchForm.address\"\n                             clearable>\n                     </el-input>\n                 </el-form-item>\n                 <el-form-item label=\"行业类型\">\n                     <avue-input v-model=\"searchForm.hylx\"\n                                 type=\"tree\"\n                                 placeholder=\"\"\n                                 expandLevel=\"1\"\n                                 :dic=\"hylxTreeData\"\n                                 :props=\"hylxTreeProps\">\n                     </avue-input>\n                 </el-form-item>\n                 <el-form-item label=\"行政区划\">\n                     <avue-input v-model=\"searchForm.areaCode\"\n                                 type=\"tree\"\n                                 placeholder=\"\"\n                                 expandLevel=\"1\"\n                                 :dic=\"xzqhTreeData\"\n                                 :props=\"xzqhTreeProps\">\n                     </avue-input>\n                 </el-form-item>\n             </template>\n             <template slot=\"menuLeft\">\n                 <el-button @click=\"importData\"\n                            icon=\"el-icon-plus\"\n                            type=\"primary\"\n                            size=\"small\">关联</el-button>\n             </template>\n         </avue-crud>\n\n     </el-dialog>\n\n    </div>\n</template>\n\n\n<script>\n    import {tableOption,formOption} from '@/const/crud/portal/archive/contact/contact';\n    import {fetchGlList,fetchList,addObj} from \"@/api/portal/archive/contact/contact\";\n    import {fetchDictTree} from \"@/api/admin/dict\";\n    import {fetchArea} from '@/api/portal/archive/common-query/query'\n\n    export default {\n        name:'contactList',\n        props:[\"contactForm\"],\n        data(){\n            return {\n                listQuery:{\n                    qtdwbh:'',\n                },//场所关联列表查询条件\n                form:{},\n                formTitle:'',//添加关联弹窗标题\n                showForm:false,\n                applyToBody: true,\n\n                tableLoading: false,\n                page: {\n                    total: 0, // 总页数\n                    currentPage: 1, // 当前页数\n                    pageSize: 10 // 每页显示多少条\n                },\n                tableData: [],\n                option:tableOption,//关联列表\n\n                formData:[],\n                formOption:formOption,//添加要关联的场所列表\n                formPage:{\n                    total: 0, // 总页数\n                    currentPage: 1, // 当前页数\n                    pageSize: 10 // 每页显示多少条\n                },\n                formLoading:false,\n                glForm:{},\n                searchForm:{\n                    lyxtType:undefined,\n                    qtdwbh:undefined,\n                    sspcs:undefined,\n                    areaCode:undefined,\n                    dwmc:undefined,\n                    address:undefined,\n                    hylx:'',\n                },//场所关联 自定义搜索\n                hylxTreeData:[],\n                hylxTreeProps: {\n                    label: \"label\",\n                    value: 'value',\n                },\n                hylxQuery: {\n                    type: 'HYLX'\n                },\n                xzqhTreeData:[],\n                xzqhTreeProps: {\n                    label: \"name\",\n                    value: 'code'\n                },\n                selData: [],//选中的要关联的场所数据\n            }\n        },\n        created(){\n            this.listQuery.qtdwbh = this.contactForm.qtdwbh\n            this.getGlList(this.page, this.listQuery)\n            this.getHylxData()\n            this.getXzqhData()\n        },\n        computed: {\n\n        },\n        methods:{\n            getGlList(page, params) {\n                this.tableData=[]\n                this.tableLoading = true;\n                fetchGlList(Object.assign({\n                    current: page.currentPage,\n                    size: page.pageSize\n                }, params)).then(response => {\n                    this.tableData = response.data.data.records;\n                    this.page.total = response.data.data.total\n                    this.tableLoading = false;\n                });\n            },\n            addContact(){\n                this.formTitle=\"添加关联\"\n                this.showForm=true\n                this.searchForm.lyxtType=this.contactForm.lyxtType\n                this.searchForm.qtdwbh=this.contactForm.qtdwbh\n                this.searchForm.dwmc=this.contactForm.dwmc\n                this.searchForm.hylx = this.contactForm.hylx\n                this.searchForm.address = this.contactForm.address\n                this.searchForm.areaCode = this.contactForm.areaCode\n                this.searchForm.sspcs = this.contactForm.sspcs\n                this.getFormList(this.formPage,this.searchForm)\n            },\n            getFormList(formPage, params) {\n                this.formData=[]\n                this.formLoading = true;\n                fetchList(Object.assign({\n                    current: formPage.currentPage,\n                    size: formPage.pageSize\n                }, params)).then(response => {\n                    this.formData = response.data.data.records;\n                    this.formPage.total = response.data.data.total\n                    this.formLoading = false;\n                });\n            },\n            getHylxData(){\n                this.hylxTreeData=[]\n                fetchDictTree(this.hylxQuery).then(response => {\n                    this.hylxTreeData = response.data.data\n                })\n            },\n            getXzqhData(){\n                this.xzqhTreeData=[]\n                fetchArea().then(response => {\n                    this.xzqhTreeData = response.data.data\n                })\n            },\n            selectionChange(data){\n                this.selData = data\n            },\n            refreshChange() {\n                this.getFormList(this.formPage, this.searchForm)\n            },\n            searchChange() {\n                this.formPage.page = 1;\n                this.getFormList(this.formPage, this.searchForm)\n            },\n            importData(){\n                if(this.selData.length > 0){\n                    this.$confirm('确认关联?', '提示', {\n                        confirmButtonText: '确定',\n                        cancelButtonText: '取消',\n                        type: 'warning'\n                    }).then(() => {\n                        let defineForm ={}\n                        let ids = \"\"\n                        for(let i = 0; i < this.selData.length; i++){\n                            ids += this.selData[i].dwbh + \",\"\n                        }\n                        defineForm['qtdwbh']=this.listQuery.qtdwbh\n                        defineForm['lyxtType']='0'\n                        defineForm['dwbh']=ids\n                        addObj(defineForm).then(() => {\n                            this.showForm = false;\n                            this.getGlList(this.formPage,this.listQuery)\n                            this.$notify({\n                                title: \"成功\",\n                                message: \"场所关联成功\",\n                                type: \"success\",\n                                duration: 2000\n                            });\n                        })\n                    })\n                }else {\n                    this.$message({\n                        showClose: true,\n                        message: '请选择要关联的数据',\n                        type: 'warning'\n                    })\n                }\n            },\n            clearForm(){\n                this.searchForm.dwmc=''\n                this.searchForm.hylx=''\n                this.searchForm.address=''\n                this.searchForm.areaCode=''\n            },\n\n        },\n\n        watch: {\n            contactForm: {\n                //深度监控父组件传递过来的值、否则无法根据传递过来的值更新数据\n                handler() {\n                    this.listQuery.qtdwbh = this.contactForm.qtdwbh\n                    this.getGlList(this.page,this.listQuery);\n                    this.getHylxData()\n                    this.getXzqhData()\n                },\n                deep: true\n            },\n        }\n    }\n</script>"]}]}