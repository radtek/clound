{"remainingRequest":"G:\\intellij work\\micro-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\intellij work\\micro-ui\\src\\views\\admin\\file\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"G:\\intellij work\\micro-ui\\src\\views\\admin\\file\\index.vue","mtime":1552876440341},{"path":"G:\\intellij work\\micro-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\intellij work\\micro-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"G:\\intellij work\\micro-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\intellij work\\micro-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {fetchFileList,  getObj, delObj, putObj, download} from '@/api/admin/file'\nimport {tableOption} from '@/const/crud/admin/file'\nimport fileUpload from \"@/page/file/fileUpload\"\nexport default {\n    name: \"file\",\n    components: { \"fileUpload\" : fileUpload},\n    data() {\n        return {\n            tbPk: 'test_id', // 用于示例测试，不是真实id\n            tbName: 'sys_file',// 用于示例测试，不是真实id\n            tableData: [],\n            page: {\n                total: 0, // 总页数\n                currentPage: 1, // 当前页数\n                pageSize: 20 // 每页显示多少条\n            },\n            tableLoading: false,\n            tableOption: tableOption\n        }\n    },\n    created() {},\n    methods: {\n        getList(page, params) {\n            this.tableLoading = true\n            fetchFileList(Object.assign({\n                current: page.currentPage,\n                size: page.pageSize\n            }, params)).then(response => {\n                this.tableData = response.data.data.records\n                this.page.total = response.data.data.total\n                this.tableLoading = false\n            })\n        },\n        refreshChange({page, searchForm}){\n            let params = this.getParams(searchForm);\n            if(page == undefined){\n                page = this.page\n            }\n            this.getList(page, params)\n        },\n        getParams(form){\n            let params ={}\n            if(form.fileName != \"\")\n                params.fileName = form.fileName\n            if(form.extName != \"\")\n                params.extName = form.extName\n            return params;\n        },\n        searchChange(form) {\n            let params = this.getParams(form);\n            this.getList(this.page, params)\n        },\n        handleDownload(row, index){\n            download(row.id, row.fileName + row.extName, this.$message)\n        }\n    }\n};\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/admin/file","sourcesContent":["\r\n<template>\r\n    <div class=\"execution\">\r\n        <basic-container>\r\n            <avue-crud ref=\"crud\"\r\n                       :page=\"page\"\r\n                       :data=\"tableData\"\r\n                       :table-loading=\"tableLoading\"\r\n                       :option=\"tableOption\"\r\n                       @on-load=\"getList\"\r\n                       @search-change=\"searchChange\"\r\n                       @refresh-change=\"refreshChange\">\r\n                <template slot-scope=\"scope\"\r\n                          slot=\"menu\">\r\n\r\n                    <el-button type=\"text\"\r\n                               icon=\"el-icon-tickets\"\r\n                               size=\"mini\"\r\n                               plain\r\n                               @click=\"handleDownload(scope.row,scope.index)\">下载\r\n                    </el-button>\r\n                </template>\r\n            </avue-crud>\r\n\r\n            <file-upload :tbPk=\"tbPk\"\r\n                         :tbName=\"tbName\">\r\n            </file-upload>\r\n\r\n        </basic-container>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import {fetchFileList,  getObj, delObj, putObj, download} from '@/api/admin/file'\r\n    import {tableOption} from '@/const/crud/admin/file'\r\n    import fileUpload from \"@/page/file/fileUpload\"\r\n    export default {\r\n        name: \"file\",\r\n        components: { \"fileUpload\" : fileUpload},\r\n        data() {\r\n            return {\r\n                tbPk: 'test_id', // 用于示例测试，不是真实id\r\n                tbName: 'sys_file',// 用于示例测试，不是真实id\r\n                tableData: [],\r\n                page: {\r\n                    total: 0, // 总页数\r\n                    currentPage: 1, // 当前页数\r\n                    pageSize: 20 // 每页显示多少条\r\n                },\r\n                tableLoading: false,\r\n                tableOption: tableOption\r\n            }\r\n        },\r\n        created() {},\r\n        methods: {\r\n            getList(page, params) {\r\n                this.tableLoading = true\r\n                fetchFileList(Object.assign({\r\n                    current: page.currentPage,\r\n                    size: page.pageSize\r\n                }, params)).then(response => {\r\n                    this.tableData = response.data.data.records\r\n                    this.page.total = response.data.data.total\r\n                    this.tableLoading = false\r\n                })\r\n            },\r\n            refreshChange({page, searchForm}){\r\n                let params = this.getParams(searchForm);\r\n                if(page == undefined){\r\n                    page = this.page\r\n                }\r\n                this.getList(page, params)\r\n            },\r\n            getParams(form){\r\n                let params ={}\r\n                if(form.fileName != \"\")\r\n                    params.fileName = form.fileName\r\n                if(form.extName != \"\")\r\n                    params.extName = form.extName\r\n                return params;\r\n            },\r\n            searchChange(form) {\r\n                let params = this.getParams(form);\r\n                this.getList(this.page, params)\r\n            },\r\n            handleDownload(row, index){\r\n                download(row.id, row.fileName + row.extName, this.$message)\r\n            }\r\n        }\r\n    };\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n</style>"]}]}