{"remainingRequest":"G:\\intellij work\\micro-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\intellij work\\micro-ui\\src\\views\\portal\\unit\\standard\\datasource\\RdbSource.vue?vue&type=script&lang=js&","dependencies":[{"path":"G:\\intellij work\\micro-ui\\src\\views\\portal\\unit\\standard\\datasource\\RdbSource.vue","mtime":1557716956463},{"path":"G:\\intellij work\\micro-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\intellij work\\micro-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"G:\\intellij work\\micro-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\intellij work\\micro-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { fetchList,handleCheck, getObj,addObj, putObj, delObj } from '@/api/portal/metadata/datasource/RdbSource'\nimport { tableOption,addsourceOption,listOption,editsourceOption } from '@/const/crud/portal/metadata/datasource/RdbSource'\nimport { mapGetters } from 'vuex'\nexport default {\n    name: \"RdbSource\",\n    data() {\n\n        return {\n            formInline:{\n                name:'',\n                type:'',\n            },\n            form:{\n                type:''\n            },\n            addForm:{\n                type:'',\n                ip:'',\n                account:'',\n                pwd:'',\n                port:'',\n                serverName:'',\n            },\n            editForm:{\n                type:'',\n                ip:'',\n                account:'',\n                pwd:'',\n                port:'',\n                serverName:'',\n            },\n            listform:{ type:'',name:''},\n            page: {\n                total: 0, // 总页数\n                currentPage: 1, // 当前页数\n                pageSize: 10 // 每页显示多少条\n            },\n            tableLoading: false,\n            addsource:false,\n            listsource:false,\n            editsource:false,\n            listOption:listOption,\n            addOption:addsourceOption,\n            addData:[],\n            editOption:editsourceOption,\n            editData:[],\n            listData:[\n\n            ],\n            option: tableOption,\n            data: [\n               {\n                title: 'Oracle',\n                type:'Oracle',\n                text1: '25',\n                img: 'https://gw.alipayobjects.com/zos/rmsportal/WdGqmHpayyMjiEhcKoVE.png'\n            },\n                {\n                title: 'MySql',\n                 type:'MySql',\n                text2: '25',\n                img: 'https://gw.alipayobjects.com/zos/rmsportal/zOsKZmFRdUtvpqCImOVY.png'\n            },\n                {\n                title: 'SQL Server',\n                type:'SQLServer',\n                text3: '25',\n                img: 'https://gw.alipayobjects.com/zos/rmsportal/dURIMkkrRFpPgTuzkwnB.png'\n            },\n                {\n                    title: 'DB2',\n                    type:'DB2',\n                    text3: '25',\n                    img: 'https://gw.alipayobjects.com/zos/rmsportal/dURIMkkrRFpPgTuzkwnB.png'\n                }\n            ]\n        }\n    },\n    computed: {\n    },\n    methods:{\n        listtype:function(row, index){\n\n            this.listsource = true;\n            this.formInline.type = row.type\n            this.$emit(\"input\",this.formInline)\n            this.handlelistsource();\n\n        },\n\n        addtype:function(row, index){\n            this.addsource = true;\n            this.addForm = row\n            this.$emit(\"input\",this.addForm)\n        },\n\n        addalltype:function(formInline){\n            this.addsource = true;\n            this.addForm.type = this.formInline.type\n            this.$emit(\"input\",this.addForm)\n        },\n\n        editbutton:function(row, index){\n            this.editsource = true;\n            this.editForm=row,\n            this.$emit(\"input\",this.editForm)\n        },\n\n        handlelistsource(param) {\n            this.page.page = 1;\n            this.getList(this.page,this.formInline)\n        },\n\n        getList(page, params) {\n            this.tableLoading = true\n            fetchList(Object.assign({\n                current: page.currentPage,\n                size: page.pageSize,\n                type: this.formInline.type\n            }, params)).then(response => {\n                this.listData = response.data.data.records\n                this.page.total = response.data.data.total\n                this.tableLoading = false\n            })\n        },\n\n        /**\n         * @title 测试连接数据库\n         * @param params 为当前的数据\n         **/\n        handletest(formName) {\n            this.$refs[formName].validate((valid) => {\n                if (valid) {\n            var params = this.addForm;\n            let JdbcUrl = '';\n            if(params.type == 'MySql'){\n                JdbcUrl += 'jdbc:mysql://'+params.ip+':'+params.port+'/'+params.serverName+'';\n            }else if(this.addForm.type == 'Oracle'){\n                JdbcUrl += 'jdbc:oracle:thin:@'+params.ip+':'+params.port+'/'+params.serverName+'';\n            }else if (this.addForm.type == 'DB2'){\n                JdbcUrl += 'jdbc:DB2://'+params.ip+':'+params.port+'/'+params.serverName+'';\n            }else if (this.addForm.type == 'SQLServer'){\n                JdbcUrl += 'jdbc:sqlserver://'+params.ip+':'+params.port+'';\n            }\n\n            handleCheck(Object.assign({\n                type:this.addForm.type,\n                account: this.addForm.account,\n                pwd:this.addForm.pwd,\n                JdbcUrl:JdbcUrl,\n            }, formName)).then(response => {\n                    this.$alert(response.data.message, '连接结果', {\n                        confirmButtonText: '确定',\n                        type: 'warning',\n                        callback: action => {\n\n                        },\n                    });\n            })\n                } else {\n                    this.$message({\n                        showClose: true,\n                        message: '请填写完整信息后再测试!',\n                        type: 'error submit!!'\n                    })\n\n                    return false;\n                }\n            });\n        },\n\n        /**\n         * @title edit测试连接数据库\n         * @param params 为当前的数据\n         **/\n        edittest(formName) {\n            this.$refs[formName].validate((valid) => {\n                if (valid) {\n                    var params = this.editForm;\n                    let JdbcUrl = '';\n                    if(params.type == 'MySql'){\n                        JdbcUrl += 'jdbc:mysql://'+params.ip+':'+params.port+'/'+params.serverName+'';\n                    }else if(params.type == 'Oracle'){\n                        JdbcUrl += 'jdbc:oracle:thin:@'+params.ip+':'+params.port+'/'+params.serverName+'';\n                    }else if (params.type == 'DB2'){\n                        JdbcUrl += 'jdbc:DB2://'+params.ip+':'+params.port+'/'+params.serverName+'';\n                    }else if (params.type == 'SQLServer'){\n                        JdbcUrl += 'jdbc:sqlserver://'+params.ip+':'+params.port+'';\n                    }\n\n                    handleCheck(Object.assign({\n                        type:params.type,\n                        account: params.account,\n                        pwd:params.pwd,\n                        JdbcUrl:JdbcUrl,\n                    }, formName)).then(response => {\n                        this.$alert(response.data.message, '连接结果', {\n                            confirmButtonText: '确定',\n                            type: 'warning',\n                            callback: action => {\n\n                            },\n                        });\n                    })\n                } else {\n                    this.$message({\n                        showClose: true,\n                        message: '请填写完整信息后再测试!',\n                        type: 'error submit!!'\n                    })\n\n                    return false;\n                }\n            });\n        },\n\n        /**\n         * @title 数据添加\n         * @param data 为当前的数据\n         **/\n        submitForm(formName) {\n            this.$refs[formName].validate((valid) => {\n                if (valid) {\n                    addObj(this.addForm).then((res) => {\n                        if(res.status==200){\n                           /* this.$refs[formName].resetForm();*/\n                            this.addsource = false;\n                            this.handlelistsource();\n                            this.$notify({\n                                title: '成功',\n                                message: '保存成功',\n                                type: 'success',\n                                duration: 2000\n                            }).catch(() => {\n                                loading();\n                            });\n\n                        }else{\n                            this.$alert(\"提交失败\", '提交结果', {\n                                confirmButtonText: '确定',\n                                type: 'warning',\n                                callback: action => {\n\n                                },\n                            });\n                        }\n                    })\n                } else {\n                    this.$message({\n                        showClose: true,\n                        message: '请填写完整信息后再保存!',\n                        type: 'error submit!!'\n                    })\n\n                    return false;\n                }\n            });\n        },\n\n        resetForm(formName) {\n            this.$refs[formName].resetForm();\n            this.addForm.type = this.formInline.type\n            this.$emit(\"input\",this.addForm)\n        },\n\n        reset(formName) {\n            this.$refs[formName].resetFields();\n        },\n\n\n        /**\n         * @title 修改\n         * @param data 为当前的数据\n         **/\n        handleOpt(formName){\n            this.$refs[formName].validate((valid) => {\n                if (valid) {\n                    putObj(this.editForm).then((res) => {\n                        if(res.status==200){\n                            this.editsource = false;\n                            this.handlelistsource();\n                            this.$notify({\n                                title: '成功',\n                                message: '修改成功',\n                                type: 'success',\n                                duration: 2000\n                            }).catch(() => {\n                                loading();\n                            });\n\n                        }else{\n                            this.$alert(\"修改失败\", '修改结果', {\n                                confirmButtonText: '确定',\n                                type: 'warning',\n                                callback: action => {\n\n                                },\n                            });\n                        }\n                    })\n                } else {\n                    this.$message({\n                        showClose: true,\n                        message: '请填写完整信息后再修改!',\n                        type: 'error submit!!'\n                    })\n\n                    return false;\n                }\n            });\n        },\n\n        handleDelete(row) {\n            this.$confirm('此操作将永久删除, 是否继续?', '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n            }).then(() => {\n                delObj(row.id,row.type).then(() => {\n                    this.handlelistsource();\n                    this.$notify({\n                        title: '成功',\n                        message: '删除成功',\n                        type: 'success',\n                        duration: 2000\n                    })\n                })\n            })\n        },\n        },\n}\n",{"version":3,"sources":["RdbSource.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0GA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"RdbSource.vue","sourceRoot":"src/views/portal/unit/standard/datasource","sourcesContent":["<template>\n    <div class=\"app-container calendar-list-container\">\n        <basic-container>\n            <avue-card  ref=\"form\" :option=\"option\" :data=\"data\" v-model=\"form\">\n                <template slot=\"menu\" slot-scope=\"scope\">\n                    <span @click.stop=\"addtype(scope.row,scope.index)\">添加数据源</span>\n                    <span @click.stop=\"listtype(scope.row,scope.index)\">查看数据源</span>\n                </template>\n            </avue-card>\n            <el-dialog title=\"添加数据源\" fullscreen :visible.sync=\"addsource\" :append-to-body=\"true\">\n                <avue-form  :option=\"addOption\" :data=\"addData\" v-model=\"addForm\" ref=\"addForm\">\n\n                </avue-form>\n\n                    <div slot=\"footer\"  class=\"el-dialog--center\">\n                        <el-button type=\"primary\" @click=\"handletest('addForm')\">测试连接  </el-button>\n\n                        <el-button type=\"primary\" @click=\"submitForm('addForm')\">保存 </el-button>\n\n                        <el-button @click=\"resetForm('addForm')\">清空 </el-button>\n                    </div>\n            </el-dialog>\n\n            <el-dialog title=\"修改数据源\" fullscreen :visible.sync=\"editsource\" :append-to-body=\"true\">\n                <avue-form  :option=\"editOption\" :data=\"editData\" v-model=\"editForm\" ref=\"editForm\">\n\n                </avue-form>\n\n\n                <div slot=\"footer\"  class=\"el-dialog--center\">\n                    <el-button type=\"primary\" @click=\"edittest('editForm')\">测试连接  </el-button>\n\n                    <el-button type=\"primary\" @click=\"handleOpt('editForm')\">修改 </el-button>\n\n                    <el-button type=\"primary\" @click=\"editsource=false\">关闭 </el-button>\n\n                </div>\n            </el-dialog>\n\n            <el-dialog title=\"数据源列表\" fullscreen :visible.sync=\"listsource\" :append-to-body=\"true\">\n                <el-form :inline=\"true\" :v-model=\"formInline\" ref=\"formInline\" class=\"demo-form-inline\">\n                    <el-form-item label=\"数据库名称\">\n                        <el-input v-model=\"formInline.name\" placeholder=\"数据库名称\"></el-input>\n                    </el-form-item>\n                    <el-form-item label=\"数据库类型\">\n                    <el-select  v-model=\"formInline.type\"  placeholder=\"数据库类型\">\n                        <el-option label=\"MySql\" value=\"MySql\"></el-option>\n                        <el-option label=\"Oracle\" value=\"Oracle\"></el-option>\n                        <el-option label=\"SQLServer\" value=\"SQLServer\"></el-option>\n                        <el-option label=\"DB2\" value=\"DB2\"></el-option>\n                    </el-select >\n\n                    </el-form-item>\n                    <el-form-item>\n                        <el-button type=\"primary\"\n                                   size=\"small\"\n                                   icon=\"el-icon-search\"\n                                   @click=\"handlelistsource('formInline')\">搜索</el-button>\n                    </el-form-item>\n                    <el-form-item>\n                        <el-button\n                                size=\"small\"\n                                icon=\"el-icon-delete\"\n                                @click=\"reset('formInline')\">清空</el-button>\n                    </el-form-item>\n                </el-form>\n                    <avue-crud :option=\"listOption\" :data=\"listData\"\n                               :page=\"page\"\n                               :table-loading=\"tableLoading\"\n\n                               @refresh-change=\"getList\"\n                               @search-change=\"handlelistsource\"\n                               @row-update=\"handleOpt\"\n                               v-model=\"listform\" ref=\"listForm\">\n\n                        <template slot-scope=\"scope\" slot=\"menuLeft\">\n                            <el-button type=\"primary\"\n                                       icon=\"el-icon-plus\"\n                                       size=\"small\"\n                                       @click=\"addalltype('formInline')\">新增</el-button>\n                        </template>\n\n                        <template slot=\"menu\" slot-scope=\"scope\">\n                            <el-button size=\"mini\"\n                                       type=\"text\"\n                                       icon=\"el-icon-edit\"\n                                       @click=\"editbutton(scope.row,scope.index)\">编辑\n                            </el-button>\n\n                            <el-button\n                                    size=\"small\"\n                                    type=\"text\"\n                                    icon=\"el-icon-delete\"\n                                    @click=\"handleDelete(scope.row,scope.index)\">删除\n                            </el-button>\n                        </template>\n                    </avue-crud>\n            </el-dialog>\n        </basic-container>\n\n    </div>\n</template>\n\n\n\n<script>\n    import { fetchList,handleCheck, getObj,addObj, putObj, delObj } from '@/api/portal/metadata/datasource/RdbSource'\n    import { tableOption,addsourceOption,listOption,editsourceOption } from '@/const/crud/portal/metadata/datasource/RdbSource'\n    import { mapGetters } from 'vuex'\n    export default {\n        name: \"RdbSource\",\n        data() {\n\n            return {\n                formInline:{\n                    name:'',\n                    type:'',\n                },\n                form:{\n                    type:''\n                },\n                addForm:{\n                    type:'',\n                    ip:'',\n                    account:'',\n                    pwd:'',\n                    port:'',\n                    serverName:'',\n                },\n                editForm:{\n                    type:'',\n                    ip:'',\n                    account:'',\n                    pwd:'',\n                    port:'',\n                    serverName:'',\n                },\n                listform:{ type:'',name:''},\n                page: {\n                    total: 0, // 总页数\n                    currentPage: 1, // 当前页数\n                    pageSize: 10 // 每页显示多少条\n                },\n                tableLoading: false,\n                addsource:false,\n                listsource:false,\n                editsource:false,\n                listOption:listOption,\n                addOption:addsourceOption,\n                addData:[],\n                editOption:editsourceOption,\n                editData:[],\n                listData:[\n\n                ],\n                option: tableOption,\n                data: [\n                   {\n                    title: 'Oracle',\n                    type:'Oracle',\n                    text1: '25',\n                    img: 'https://gw.alipayobjects.com/zos/rmsportal/WdGqmHpayyMjiEhcKoVE.png'\n                },\n                    {\n                    title: 'MySql',\n                     type:'MySql',\n                    text2: '25',\n                    img: 'https://gw.alipayobjects.com/zos/rmsportal/zOsKZmFRdUtvpqCImOVY.png'\n                },\n                    {\n                    title: 'SQL Server',\n                    type:'SQLServer',\n                    text3: '25',\n                    img: 'https://gw.alipayobjects.com/zos/rmsportal/dURIMkkrRFpPgTuzkwnB.png'\n                },\n                    {\n                        title: 'DB2',\n                        type:'DB2',\n                        text3: '25',\n                        img: 'https://gw.alipayobjects.com/zos/rmsportal/dURIMkkrRFpPgTuzkwnB.png'\n                    }\n                ]\n            }\n        },\n        computed: {\n        },\n        methods:{\n            listtype:function(row, index){\n\n                this.listsource = true;\n                this.formInline.type = row.type\n                this.$emit(\"input\",this.formInline)\n                this.handlelistsource();\n\n            },\n\n            addtype:function(row, index){\n                this.addsource = true;\n                this.addForm = row\n                this.$emit(\"input\",this.addForm)\n            },\n\n            addalltype:function(formInline){\n                this.addsource = true;\n                this.addForm.type = this.formInline.type\n                this.$emit(\"input\",this.addForm)\n            },\n\n            editbutton:function(row, index){\n                this.editsource = true;\n                this.editForm=row,\n                this.$emit(\"input\",this.editForm)\n            },\n\n            handlelistsource(param) {\n                this.page.page = 1;\n                this.getList(this.page,this.formInline)\n            },\n\n            getList(page, params) {\n                this.tableLoading = true\n                fetchList(Object.assign({\n                    current: page.currentPage,\n                    size: page.pageSize,\n                    type: this.formInline.type\n                }, params)).then(response => {\n                    this.listData = response.data.data.records\n                    this.page.total = response.data.data.total\n                    this.tableLoading = false\n                })\n            },\n\n            /**\n             * @title 测试连接数据库\n             * @param params 为当前的数据\n             **/\n            handletest(formName) {\n                this.$refs[formName].validate((valid) => {\n                    if (valid) {\n                var params = this.addForm;\n                let JdbcUrl = '';\n                if(params.type == 'MySql'){\n                    JdbcUrl += 'jdbc:mysql://'+params.ip+':'+params.port+'/'+params.serverName+'';\n                }else if(this.addForm.type == 'Oracle'){\n                    JdbcUrl += 'jdbc:oracle:thin:@'+params.ip+':'+params.port+'/'+params.serverName+'';\n                }else if (this.addForm.type == 'DB2'){\n                    JdbcUrl += 'jdbc:DB2://'+params.ip+':'+params.port+'/'+params.serverName+'';\n                }else if (this.addForm.type == 'SQLServer'){\n                    JdbcUrl += 'jdbc:sqlserver://'+params.ip+':'+params.port+'';\n                }\n\n                handleCheck(Object.assign({\n                    type:this.addForm.type,\n                    account: this.addForm.account,\n                    pwd:this.addForm.pwd,\n                    JdbcUrl:JdbcUrl,\n                }, formName)).then(response => {\n                        this.$alert(response.data.message, '连接结果', {\n                            confirmButtonText: '确定',\n                            type: 'warning',\n                            callback: action => {\n\n                            },\n                        });\n                })\n                    } else {\n                        this.$message({\n                            showClose: true,\n                            message: '请填写完整信息后再测试!',\n                            type: 'error submit!!'\n                        })\n\n                        return false;\n                    }\n                });\n            },\n\n            /**\n             * @title edit测试连接数据库\n             * @param params 为当前的数据\n             **/\n            edittest(formName) {\n                this.$refs[formName].validate((valid) => {\n                    if (valid) {\n                        var params = this.editForm;\n                        let JdbcUrl = '';\n                        if(params.type == 'MySql'){\n                            JdbcUrl += 'jdbc:mysql://'+params.ip+':'+params.port+'/'+params.serverName+'';\n                        }else if(params.type == 'Oracle'){\n                            JdbcUrl += 'jdbc:oracle:thin:@'+params.ip+':'+params.port+'/'+params.serverName+'';\n                        }else if (params.type == 'DB2'){\n                            JdbcUrl += 'jdbc:DB2://'+params.ip+':'+params.port+'/'+params.serverName+'';\n                        }else if (params.type == 'SQLServer'){\n                            JdbcUrl += 'jdbc:sqlserver://'+params.ip+':'+params.port+'';\n                        }\n\n                        handleCheck(Object.assign({\n                            type:params.type,\n                            account: params.account,\n                            pwd:params.pwd,\n                            JdbcUrl:JdbcUrl,\n                        }, formName)).then(response => {\n                            this.$alert(response.data.message, '连接结果', {\n                                confirmButtonText: '确定',\n                                type: 'warning',\n                                callback: action => {\n\n                                },\n                            });\n                        })\n                    } else {\n                        this.$message({\n                            showClose: true,\n                            message: '请填写完整信息后再测试!',\n                            type: 'error submit!!'\n                        })\n\n                        return false;\n                    }\n                });\n            },\n\n            /**\n             * @title 数据添加\n             * @param data 为当前的数据\n             **/\n            submitForm(formName) {\n                this.$refs[formName].validate((valid) => {\n                    if (valid) {\n                        addObj(this.addForm).then((res) => {\n                            if(res.status==200){\n                               /* this.$refs[formName].resetForm();*/\n                                this.addsource = false;\n                                this.handlelistsource();\n                                this.$notify({\n                                    title: '成功',\n                                    message: '保存成功',\n                                    type: 'success',\n                                    duration: 2000\n                                }).catch(() => {\n                                    loading();\n                                });\n\n                            }else{\n                                this.$alert(\"提交失败\", '提交结果', {\n                                    confirmButtonText: '确定',\n                                    type: 'warning',\n                                    callback: action => {\n\n                                    },\n                                });\n                            }\n                        })\n                    } else {\n                        this.$message({\n                            showClose: true,\n                            message: '请填写完整信息后再保存!',\n                            type: 'error submit!!'\n                        })\n\n                        return false;\n                    }\n                });\n            },\n\n            resetForm(formName) {\n                this.$refs[formName].resetForm();\n                this.addForm.type = this.formInline.type\n                this.$emit(\"input\",this.addForm)\n            },\n\n            reset(formName) {\n                this.$refs[formName].resetFields();\n            },\n\n\n            /**\n             * @title 修改\n             * @param data 为当前的数据\n             **/\n            handleOpt(formName){\n                this.$refs[formName].validate((valid) => {\n                    if (valid) {\n                        putObj(this.editForm).then((res) => {\n                            if(res.status==200){\n                                this.editsource = false;\n                                this.handlelistsource();\n                                this.$notify({\n                                    title: '成功',\n                                    message: '修改成功',\n                                    type: 'success',\n                                    duration: 2000\n                                }).catch(() => {\n                                    loading();\n                                });\n\n                            }else{\n                                this.$alert(\"修改失败\", '修改结果', {\n                                    confirmButtonText: '确定',\n                                    type: 'warning',\n                                    callback: action => {\n\n                                    },\n                                });\n                            }\n                        })\n                    } else {\n                        this.$message({\n                            showClose: true,\n                            message: '请填写完整信息后再修改!',\n                            type: 'error submit!!'\n                        })\n\n                        return false;\n                    }\n                });\n            },\n\n            handleDelete(row) {\n                this.$confirm('此操作将永久删除, 是否继续?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                }).then(() => {\n                    delObj(row.id,row.type).then(() => {\n                        this.handlelistsource();\n                        this.$notify({\n                            title: '成功',\n                            message: '删除成功',\n                            type: 'success',\n                            duration: 2000\n                        })\n                    })\n                })\n            },\n            },\n    }\n</script>"]}]}