{"remainingRequest":"G:\\intellij work\\micro-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\intellij work\\micro-ui\\src\\views\\admin\\dict\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"G:\\intellij work\\micro-ui\\src\\views\\admin\\dict\\index.vue","mtime":1552876440545},{"path":"G:\\intellij work\\micro-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\intellij work\\micro-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"G:\\intellij work\\micro-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\intellij work\\micro-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {addObj, delObj, fetchList, putObj, fetchDictTree} from '@/api/admin/dict'\nimport {tableOption} from '@/const/crud/admin/dict'\nimport {mapGetters} from 'vuex'\n\nexport default {\n    name: 'dict',\n    data() {\n        return {\n            tableData: [],\n            page: {\n                total: 0, // 总页数\n                currentPage: 1, // 当前页数\n                pageSize: 20 // 每页显示多少条\n            },\n            tableLoading: false,\n            tableOption: tableOption,\n            isTree: false,\n            type: undefined,\n            parentId: '0',\n            parentIds: '0',\n            selData: []\n        }\n    },\n    created() {\n        this.type = this.$route.query.type\n        this.isTree = this.$route.query.isTree\n        this.tableOption.column[2].valueDefault = this.type\n        if(this.isTree == 0){\n            this.tableOption.selection = true\n            this.tableOption.column[6].editDisplay = false\n            this.tableOption.column[7].editDisplay = false\n        }else {\n            this.tableOption.selection = false\n            this.tableOption.column[6].editDisplay = true\n            this.tableOption.column[7].editDisplay = true\n        }\n    },\n    mounted: function () {\n    },\n    computed: {\n        ...mapGetters(['permissions'])\n    },\n    methods: {\n        getList(page, params) {\n            this.tableLoading = true\n            fetchList(Object.assign({\n                current: page.currentPage,\n                size: page.pageSize,\n                type : this.type,\n                isTree: this.isTree\n            }, params)).then(response => {\n                this.tableData = response.data.data.records\n                this.page.total = response.data.data.total\n                this.tableLoading = false\n            })\n        },\n        /**\n         * @title 打开新增窗口\n         * @detail 调用crud的handleadd方法即可\n         *\n         **/\n        handleAdd: function () {\n            this.parentId = '0'\n            this.parentIds = '0'\n            this.$refs.crud.rowAdd()\n        },\n        handleEdit(row, index) {\n            this.parentId = row.parentId\n            this.parentIds = row.parentIds\n            this.$refs.crud.rowEdit(row, index)\n        },\n        /**\n         * 添加下级节点\n         */\n        handleAddChild(row, index){\n            this.parentId = row.id\n            this.parentIds = row.parentIds + ',' + row.id\n            this.$refs.crud.rowAdd()\n        },\n        handleDel: function (row, index) { //删除行\n            var _this = this\n            let title = '是否确认删除标签名为\"' + row.label + '\",数据类型为\"' + row.type + '\"'\n            if(this.isTree == 1){\n                title += '及其子节点'\n            }\n            title += '的数据项?'\n            this.$confirm(title, '警告', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n            }).then(function () {\n                return delObj(row.id, _this.type, _this.isTree)\n            }).then(() => {\n                this.getList(this.page)\n                _this.$message({\n                    showClose: true,\n                    message: '删除成功',\n                    type: 'success'\n                })\n            }).catch(function () {\n            })\n        },\n        /**\n         * @title 数据更新\n         * @param row 为当前的数据\n         * @param index 为当前更新数据的行数\n         * @param done 为表单关闭函数\n         *\n         **/\n        handleUpdate: function (row, index, done) {\n            row.parentId = this.parentId\n            row.parentIds = this.parentIds\n            putObj(row).then(() => {\n                this.tableData.splice(index, 1, Object.assign({}, row))\n                this.$message({\n                    showClose: true,\n                    message: '修改成功',\n                    type: 'success'\n                })\n                this.getList(this.page)\n                done()\n            })\n        },\n        /**\n         * @title 数据添加\n         * @param row 为当前的数据\n         * @param done 为表单关闭函数\n         *\n         **/\n        handleSave: function (row, done) {\n            row.parentId = this.parentId\n            row.parentIds = this.parentIds\n            addObj(row).then(data => {\n                this.tableData.push(Object.assign({}, row))\n                this.$message({\n                    showClose: true,\n                    message: '添加成功',\n                    type: 'success'\n                })\n                this.getList(this.page)\n                done()\n            })\n        },\n        searchChange(form) {\n            this.getList(this.page, form)\n        },\n        handleDelAll(){// 列表批量删除\n            if(this.selData.length > 0){\n                this.$confirm('此操作将永久删除, 是否继续?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                }).then(() => {\n                    let ids = \"\"\n                    for(let i = 0; i < this.selData.length; i++){\n                        ids += this.selData[i].id + \",\"\n                    }\n                    delObj(ids, this.type, this.isTree).then(() => {\n                        this.getList(this.page)\n                        this.$message({\n                            showClose: true,\n                            message: '删除成功',\n                            type: 'success'\n                        })\n                    })\n                })\n            }else {\n                this.$message({\n                    showClose: true,\n                    message: '请选择要删除的字典',\n                    type: 'warning'\n                })\n            }\n        },\n        selectionChange(data){\n            this.selData = data\n        }\n    }\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0DA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/admin/dict","sourcesContent":["<template>\n  <div class=\"execution\">\n    <basic-container>\n\n\n      <avue-crud  ref=\"crud\"\n                  :page=\"page\"\n                  :data=\"tableData\"\n                  :table-loading=\"tableLoading\"\n                  :option=\"tableOption\"\n                  @on-load=\"getList\"\n                  @row-update=\"handleUpdate\"\n                  @row-save=\"handleSave\"\n                  @search-change=\"searchChange\"\n                  @refresh-change=\"getList\"\n                  @selection-change=\"selectionChange\">\n\n      <template slot=\"menuLeft\">\n        <el-button @click=\"handleAdd\"\n                     v-if=\"permissions.sys_dict_add\"\n                     icon=\"el-icon-plus\"\n                     type=\"primary\"\n                     size=\"small\">添加</el-button>\n        <el-button type=\"danger\"\n                     v-if=\"permissions.sys_dict_del && isTree == 0\"\n                     icon=\"el-icon-delete\"\n                     @click=\"handleDelAll\"\n                     size=\"small\">删除</el-button>\n      </template>\n\n        <template slot-scope=\"scope\" slot=\"menu\">\n          <el-button type=\"text\" v-if=\"isTree == 1\"\n                     icon=\"el-icon-plus\"\n                     size=\"mini\"\n                     plain\n                     @click=\"handleAddChild(scope.row,scope.index)\">添加下级节点\n          </el-button>\n          <el-button type=\"text\"\n                     v-if=\"permissions.sys_dict_edit\"\n                     icon=\"el-icon-edit\"\n                     size=\"mini\"\n                     plain\n                     @click=\"handleEdit(scope.row,scope.index)\">编辑\n          </el-button>\n          <el-button type=\"text\"\n                     v-if=\"permissions.sys_dict_del\"\n                     icon=\"el-icon-delete\"\n                     size=\"mini\"\n                     plain\n                     @click=\"handleDel(scope.row,scope.index)\">删除\n          </el-button>\n        </template>\n      </avue-crud>\n    </basic-container>\n  </div>\n</template>\n\n<script>\n    import {addObj, delObj, fetchList, putObj, fetchDictTree} from '@/api/admin/dict'\n    import {tableOption} from '@/const/crud/admin/dict'\n    import {mapGetters} from 'vuex'\n\n    export default {\n        name: 'dict',\n        data() {\n            return {\n                tableData: [],\n                page: {\n                    total: 0, // 总页数\n                    currentPage: 1, // 当前页数\n                    pageSize: 20 // 每页显示多少条\n                },\n                tableLoading: false,\n                tableOption: tableOption,\n                isTree: false,\n                type: undefined,\n                parentId: '0',\n                parentIds: '0',\n                selData: []\n            }\n        },\n        created() {\n            this.type = this.$route.query.type\n            this.isTree = this.$route.query.isTree\n            this.tableOption.column[2].valueDefault = this.type\n            if(this.isTree == 0){\n                this.tableOption.selection = true\n                this.tableOption.column[6].editDisplay = false\n                this.tableOption.column[7].editDisplay = false\n            }else {\n                this.tableOption.selection = false\n                this.tableOption.column[6].editDisplay = true\n                this.tableOption.column[7].editDisplay = true\n            }\n        },\n        mounted: function () {\n        },\n        computed: {\n            ...mapGetters(['permissions'])\n        },\n        methods: {\n            getList(page, params) {\n                this.tableLoading = true\n                fetchList(Object.assign({\n                    current: page.currentPage,\n                    size: page.pageSize,\n                    type : this.type,\n                    isTree: this.isTree\n                }, params)).then(response => {\n                    this.tableData = response.data.data.records\n                    this.page.total = response.data.data.total\n                    this.tableLoading = false\n                })\n            },\n            /**\n             * @title 打开新增窗口\n             * @detail 调用crud的handleadd方法即可\n             *\n             **/\n            handleAdd: function () {\n                this.parentId = '0'\n                this.parentIds = '0'\n                this.$refs.crud.rowAdd()\n            },\n            handleEdit(row, index) {\n                this.parentId = row.parentId\n                this.parentIds = row.parentIds\n                this.$refs.crud.rowEdit(row, index)\n            },\n            /**\n             * 添加下级节点\n             */\n            handleAddChild(row, index){\n                this.parentId = row.id\n                this.parentIds = row.parentIds + ',' + row.id\n                this.$refs.crud.rowAdd()\n            },\n            handleDel: function (row, index) { //删除行\n                var _this = this\n                let title = '是否确认删除标签名为\"' + row.label + '\",数据类型为\"' + row.type + '\"'\n                if(this.isTree == 1){\n                    title += '及其子节点'\n                }\n                title += '的数据项?'\n                this.$confirm(title, '警告', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                }).then(function () {\n                    return delObj(row.id, _this.type, _this.isTree)\n                }).then(() => {\n                    this.getList(this.page)\n                    _this.$message({\n                        showClose: true,\n                        message: '删除成功',\n                        type: 'success'\n                    })\n                }).catch(function () {\n                })\n            },\n            /**\n             * @title 数据更新\n             * @param row 为当前的数据\n             * @param index 为当前更新数据的行数\n             * @param done 为表单关闭函数\n             *\n             **/\n            handleUpdate: function (row, index, done) {\n                row.parentId = this.parentId\n                row.parentIds = this.parentIds\n                putObj(row).then(() => {\n                    this.tableData.splice(index, 1, Object.assign({}, row))\n                    this.$message({\n                        showClose: true,\n                        message: '修改成功',\n                        type: 'success'\n                    })\n                    this.getList(this.page)\n                    done()\n                })\n            },\n            /**\n             * @title 数据添加\n             * @param row 为当前的数据\n             * @param done 为表单关闭函数\n             *\n             **/\n            handleSave: function (row, done) {\n                row.parentId = this.parentId\n                row.parentIds = this.parentIds\n                addObj(row).then(data => {\n                    this.tableData.push(Object.assign({}, row))\n                    this.$message({\n                        showClose: true,\n                        message: '添加成功',\n                        type: 'success'\n                    })\n                    this.getList(this.page)\n                    done()\n                })\n            },\n            searchChange(form) {\n                this.getList(this.page, form)\n            },\n            handleDelAll(){// 列表批量删除\n                if(this.selData.length > 0){\n                    this.$confirm('此操作将永久删除, 是否继续?', '提示', {\n                        confirmButtonText: '确定',\n                        cancelButtonText: '取消',\n                        type: 'warning'\n                    }).then(() => {\n                        let ids = \"\"\n                        for(let i = 0; i < this.selData.length; i++){\n                            ids += this.selData[i].id + \",\"\n                        }\n                        delObj(ids, this.type, this.isTree).then(() => {\n                            this.getList(this.page)\n                            this.$message({\n                                showClose: true,\n                                message: '删除成功',\n                                type: 'success'\n                            })\n                        })\n                    })\n                }else {\n                    this.$message({\n                        showClose: true,\n                        message: '请选择要删除的字典',\n                        type: 'warning'\n                    })\n                }\n            },\n            selectionChange(data){\n                this.selData = data\n            }\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n</style>\n\n"]}]}