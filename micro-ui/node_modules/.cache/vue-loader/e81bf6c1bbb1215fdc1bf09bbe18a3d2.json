{"remainingRequest":"E:\\intellij work\\micro-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\intellij work\\micro-ui\\src\\page\\index\\top\\top-search.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\intellij work\\micro-ui\\src\\page\\index\\top\\top-search.vue","mtime":1551167423293},{"path":"E:\\intellij work\\micro-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\intellij work\\micro-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\intellij work\\micro-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\intellij work\\micro-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport config from \"../sidebar/config.js\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  data() {\n    return {\n      config: config,\n      value: \"\",\n      menuList: []\n    };\n  },\n  created() {\n    this.getMenuList();\n  },\n\n  watch: {\n    menu() {\n      this.getMenuList();\n    }\n  },\n  computed: {\n    labelKey() {\n      return this.website.menu.props.label || this.config.propsDefault.label;\n    },\n    pathKey() {\n      return this.website.menu.props.path || this.config.propsDefault.path;\n    },\n    iconKey() {\n      return this.website.menu.props.icon || this.config.propsDefault.icon;\n    },\n    childrenKey() {\n      return (\n        this.website.menu.props.children || this.config.propsDefault.children\n      );\n    },\n    ...mapGetters([\"menu\", \"website\"])\n  },\n  methods: {\n    getMenuList() {\n      const findMenu = list => {\n        for (let i = 0; i < list.length; i++) {\n          const ele = Object.assign({}, list[i]);\n          if (ele[this.childrenKey]) findMenu(ele[this.childrenKey]);\n          delete ele[this.childrenKey];\n          this.menuList.push(ele);\n        }\n      };\n      this.menuList = [];\n      findMenu(this.menu);\n    },\n    querySearch(queryString, cb) {\n      var restaurants = this.menuList;\n      var results = queryString\n        ? restaurants.filter(this.createFilter(queryString))\n        : restaurants;\n      // 调用 callback 返回建议列表的数据\n      cb(results);\n    },\n    createFilter(queryString) {\n      return restaurant => {\n        return (\n          restaurant.label.toLowerCase().indexOf(queryString.toLowerCase()) ===\n          0\n        );\n      };\n    },\n    handleSelect(item) {\n      this.value = \"\";\n      this.$router.push({\n        path: this.$router.$avueRouter.getPath({\n          name: item[this.labelKey],\n          src: item[this.pathKey]\n        }),\n        query: item.query\n      });\n    }\n  }\n};\n",{"version":3,"sources":["top-search.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"top-search.vue","sourceRoot":"src/page/index/top","sourcesContent":["<template>\n  <el-autocomplete class=\"top-search\"\n                   popper-class=\"my-autocomplete\"\n                   v-model=\"value\"\n                   :fetch-suggestions=\"querySearch\"\n                   placeholder=\"请输入搜索内容\"\n                   @select=\"handleSelect\">\n\n    <template slot-scope=\"{ item }\">\n      <i :class=\"[item[iconKey],'icon']\"></i>\n      <div class=\"name\">{{ item[labelKey] }}</div>\n      <div class=\"addr\">{{ item[pathKey] }}</div>\n    </template>\n  </el-autocomplete>\n</template>\n\n<script>\nimport config from \"../sidebar/config.js\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  data() {\n    return {\n      config: config,\n      value: \"\",\n      menuList: []\n    };\n  },\n  created() {\n    this.getMenuList();\n  },\n\n  watch: {\n    menu() {\n      this.getMenuList();\n    }\n  },\n  computed: {\n    labelKey() {\n      return this.website.menu.props.label || this.config.propsDefault.label;\n    },\n    pathKey() {\n      return this.website.menu.props.path || this.config.propsDefault.path;\n    },\n    iconKey() {\n      return this.website.menu.props.icon || this.config.propsDefault.icon;\n    },\n    childrenKey() {\n      return (\n        this.website.menu.props.children || this.config.propsDefault.children\n      );\n    },\n    ...mapGetters([\"menu\", \"website\"])\n  },\n  methods: {\n    getMenuList() {\n      const findMenu = list => {\n        for (let i = 0; i < list.length; i++) {\n          const ele = Object.assign({}, list[i]);\n          if (ele[this.childrenKey]) findMenu(ele[this.childrenKey]);\n          delete ele[this.childrenKey];\n          this.menuList.push(ele);\n        }\n      };\n      this.menuList = [];\n      findMenu(this.menu);\n    },\n    querySearch(queryString, cb) {\n      var restaurants = this.menuList;\n      var results = queryString\n        ? restaurants.filter(this.createFilter(queryString))\n        : restaurants;\n      // 调用 callback 返回建议列表的数据\n      cb(results);\n    },\n    createFilter(queryString) {\n      return restaurant => {\n        return (\n          restaurant.label.toLowerCase().indexOf(queryString.toLowerCase()) ===\n          0\n        );\n      };\n    },\n    handleSelect(item) {\n      this.value = \"\";\n      this.$router.push({\n        path: this.$router.$avueRouter.getPath({\n          name: item[this.labelKey],\n          src: item[this.pathKey]\n        }),\n        query: item.query\n      });\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\">\n.my-autocomplete {\n  li {\n    line-height: normal;\n    padding: 7px;\n    .icon {\n      margin-right: 5px;\n      display: inline-block;\n      vertical-align: middle;\n    }\n    .name {\n      display: inline-block;\n      text-overflow: ellipsis;\n      overflow: hidden;\n      vertical-align: middle;\n    }\n    .addr {\n      padding-top: 5px;\n      width: 100%;\n      font-size: 12px;\n      color: #b4b4b4;\n    }\n\n    .highlighted .addr {\n      color: #ddd;\n    }\n  }\n}\n</style>"]}]}