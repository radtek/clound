{"remainingRequest":"G:\\intellij work\\micro-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\intellij work\\micro-ui\\src\\views\\portal\\unit\\standard\\metadata\\fieldIndex.vue?vue&type=script&lang=js&","dependencies":[{"path":"G:\\intellij work\\micro-ui\\src\\views\\portal\\unit\\standard\\metadata\\fieldIndex.vue","mtime":1560132718207},{"path":"G:\\intellij work\\micro-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\intellij work\\micro-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"G:\\intellij work\\micro-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\intellij work\\micro-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {fetchPreViewList,preViewAddObj,addObj, getObj,delObj, fetchList, putObj,checkDbConn} from '@/api/portal/metadata/standardfields/field'\nimport {tableOption,preViewOption,newVue} from '@/const/crud/portal/metadata/standardfields/field'\nimport {mapGetters} from 'vuex'\n\nexport default {\n    name: 'field',\n    data() {\n        return {\n            preViewFlag:false,\n            tableData: [],\n            preViewData: [],\n            page: {\n                total: 0, // 总页数\n                currentPage: 1, // 当前页数\n                pageSize: 10 // 每页显示多少条\n            },\n            preViewPage: {\n                total: 0, // 总页数\n                currentPage: 1, // 当前页数\n                pageSize: 10 // 每页显示多少条\n            },\n            tableLoading: false,\n            preViewlistLoading: true,\n            tableOption: tableOption,\n            preViewOption:preViewOption,\n            tableId: undefined,\n            tableName: undefined,\n            dbId:undefined,\n            selData: [],\n            preViewSelData: [],\n            form: {},\n            editId:\"\",\n        }\n    },\n    created() {\n        this.tableId = this.$route.query.tbId\n        this.tableName = this.$route.query.tbName\n        this.dbId = this.$route.query.dbId\n        this.tableOption.column[1].valueDefault = this.tableName\n        newVue.obj = this\n    },\n    mounted: function () {\n    },\n    computed: {\n        ...mapGetters(['permissions'])\n    },\n    methods: {\n        getList(page, params) {\n            this.tableLoading = true\n            fetchList(Object.assign({\n                current: page.currentPage,\n                size: page.pageSize,\n                tableId : this.tableId\n            }, params)).then(response => {\n                this.tableData = response.data.data.records\n                this.page.total = response.data.data.total\n                this.tableLoading = false\n            })\n        },\n        getPreViewList(preViewPage, params) {\n            this.preViewData=[]\n            this.preViewlistLoading = true;\n            fetchPreViewList(Object.assign({\n                current: preViewPage.currentPage,\n                size: preViewPage.pageSize,\n                tableId: this.tableId\n            }, params)).then(response => {\n                this.preViewData = response.data.data;\n                this.preViewPage.total = response.data.data.total\n                this.preViewlistLoading = false;\n            });\n            this.$refs.preViewCrud.selectClear();\n        },\n        /**\n         * @title 打开新增窗口\n         * @detail 调用crud的handleadd方法即可\n         *\n         **/\n        handleAdd: function () {\n            this.$refs.crud.rowAdd()\n        },\n        handleEdit(row, index) {\n            row.tableId = this.tableName;\n            this.$refs.crud.rowEdit(row, index)\n            this.editId=row.id;\n        },\n        handleOpenBefore(show, type) {\n            window.boxType = type;\n            show();\n        },\n        handleDel: function (row, index) { //删除行\n            var _this = this\n            let title = '是否确认删除字段名为\"' + row.name + '\",字段类型为\"' + row.type + '\"的数据项?'\n            this.$confirm(title, '警告', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n            }).then(function () {\n                return delObj(row.id, _this.tableId)\n            }).then(() => {\n                this.getList(this.page)\n                _this.$message({\n                    showClose: true,\n                    message: '删除成功',\n                    type: 'success'\n                })\n            }).catch(function () {\n            })\n        },\n        /**\n         * @title 数据更新\n         * @param row 为当前的数据\n         * @param index 为当前更新数据的行数\n         * @param done 为表单关闭函数\n         *\n         **/\n        handleUpdate: function (row, index, done) {\n            putObj(row).then(() => {\n                this.tableData.splice(index, 1, Object.assign({}, row))\n                this.$message({\n                    showClose: true,\n                    message: '修改成功',\n                    type: 'success'\n                })\n                this.getList(this.page)\n                done()\n            })\n        },\n        /**\n         * @title 数据添加\n         * @param row 为当前的数据\n         * @param done 为表单关闭函数\n         *\n         **/\n        handleSave: function (row, done) {\n            row.tableId = this.tableId;\n            addObj(row).then(data => {\n                this.tableData.push(Object.assign({}, row))\n                this.$message({\n                    showClose: true,\n                    message: '添加成功',\n                    type: 'success'\n                })\n                this.getList(this.page)\n                done()\n            })\n        },\n        handleFilter(param) {\n            this.page.page = 1;\n            this.getList(this.page,param)\n        },\n        preHandleFilter(param){\n            this.preViewPage.page = 1;\n            this.getPreViewList(this.preViewPage,param);\n        },\n        handleDelAll(){// 列表批量删除\n            if(this.selData.length > 0){\n                this.$confirm('此操作将永久删除, 是否继续?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                }).then(() => {\n                    let ids = \"\"\n                    for(let i = 0; i < this.selData.length; i++){\n                        ids += this.selData[i].id + \",\"\n                    }\n                    delObj(ids).then(() => {\n                        this.getList(this.page)\n                        this.$message({\n                            showClose: true,\n                            message: '删除成功',\n                            type: 'success'\n                        })\n                    })\n                })\n            }else {\n                this.$message({\n                    showClose: true,\n                    message: '请选择要删除的字段',\n                    type: 'warning'\n                })\n            }\n        },\n        selectionChange(data){\n            this.selData = data\n        },\n        importField() {\n            if(this.preViewSelData.length > 0){\n                this.$confirm('确认导入?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                }).then(() => {\n                    let defineForm ={}\n                    var nodes = new Array();\n                    for(let i = 0; i < this.preViewSelData.length; i++){\n                        nodes.push(JSON.parse(JSON.stringify(this.preViewSelData[i])));\n                    }\n                    defineForm['tableId']=this.tableId\n                    defineForm['fieldList']=nodes\n                    console.log(defineForm)\n                    preViewAddObj(defineForm).then(() => {\n                        this.preViewFlag = false;\n                        this.getList(this.preViewPage)\n                        this.$notify({\n                            title: \"成功\",\n                            message: \"导入成功\",\n                            type: \"success\",\n                            duration: 2000\n                        });\n                    })\n                })\n            }else {\n                this.$message({\n                    showClose: true,\n                    message: '请选择要导入的表',\n                    type: 'warning'\n                })\n            }\n        },\n        preSelectionChange(data){\n            this.preViewSelData = data\n        },\n        preViewTest:function () {\n            checkDbConn(this.dbId).then(response => {\n                if(response.data.message===\"测试数据源连接成功\"){\n                    this.preViewFlag=true\n                    this.getPreViewList(this.preViewPage);\n                }else{\n                    this.$alert(response.data.message, '连接结果', {\n                        confirmButtonText: '确定',\n                        type: 'warning',\n                        callback: action => {\n                        },\n                    });\n                }\n\n            })\n        }\n    }\n}\n",{"version":3,"sources":["fieldIndex.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"fieldIndex.vue","sourceRoot":"src/views/portal/unit/standard/metadata","sourcesContent":["<template>\n    <div class=\"execution\">\n        <basic-container>\n\n            <avue-crud  ref=\"crud\"\n                        v-model=\"form\"\n                        :page=\"page\"\n                        :data=\"tableData\"\n                        :table-loading=\"tableLoading\"\n                        :option=\"tableOption\"\n                        @on-load=\"getList\"\n                        @row-update=\"handleUpdate\"\n                        @row-save=\"handleSave\"\n                        @search-change=\"handleFilter\"\n                        @refresh-change=\"getList\"\n                        @selection-change=\"selectionChange\"\n                        :before-open=\"handleOpenBefore\">\n\n                <template slot=\"menuLeft\">\n                    <el-button @click=\"handleAdd\"\n                               v-if=\"permissions.data_table_add\"\n                               icon=\"el-icon-plus\"\n                               type=\"primary\"\n                               size=\"small\">添加</el-button>\n                    <el-button type=\"primary\"\n                               v-if=\"permissions.data_table_del\"\n                               icon=\"el-icon-delete\"\n                               @click=\"handleDelAll\"\n                               size=\"small\">删除</el-button>\n                    <el-button @click=\"preViewTest()\"\n                               v-if=\"permissions.data_table_add\"\n                               icon=\"el-icon-download\"\n                               type=\"primary\"\n                               size=\"small\">预览导入</el-button>\n                </template>\n\n                <template slot-scope=\"scope\" slot=\"menu\">\n                    <el-button type=\"text\"\n                               v-if=\"permissions.data_table_edit\"\n                               icon=\"el-icon-edit\"\n                               size=\"mini\"\n                               plain\n                               @click=\"handleEdit(scope.row,scope.index)\">编辑\n                    </el-button>\n                    <el-button type=\"text\"\n                               v-if=\"permissions.data_table_del\"\n                               icon=\"el-icon-delete\"\n                               size=\"mini\"\n                               plain\n                               @click=\"handleDel(scope.row,scope.index)\">删除\n                    </el-button>\n                </template>\n            </avue-crud>\n        </basic-container>\n\n        <el-dialog title=\"预览导入\" fullscreen :visible.sync=\"preViewFlag\" :append-to-body=\"true\">\n            <avue-crud   ref=\"preViewCrud\"\n                        :option=\"preViewOption\"\n                        :data=\"preViewData\"\n                        :page=\"preViewPage\"\n                        :table-loading=\"preViewlistLoading\"\n                        @on-load=\"getPreViewList\"\n                        @search-change=\"preHandleFilter\"\n                        @refresh-change=\"getPreViewList\"\n                        @selection-change=\"preSelectionChange\">\n                <template slot=\"menuLeft\">\n                    <el-button v-if=\"permissions.data_table_add\"\n                               @click=\"importField\"\n                               size=\"small\"\n                               type=\"primary\"\n                               icon=\"el-icon-download\">导入\n                    </el-button>\n                </template>\n            </avue-crud>\n        </el-dialog>\n\n    </div>\n</template>\n\n<script>\n    import {fetchPreViewList,preViewAddObj,addObj, getObj,delObj, fetchList, putObj,checkDbConn} from '@/api/portal/metadata/standardfields/field'\n    import {tableOption,preViewOption,newVue} from '@/const/crud/portal/metadata/standardfields/field'\n    import {mapGetters} from 'vuex'\n\n    export default {\n        name: 'field',\n        data() {\n            return {\n                preViewFlag:false,\n                tableData: [],\n                preViewData: [],\n                page: {\n                    total: 0, // 总页数\n                    currentPage: 1, // 当前页数\n                    pageSize: 10 // 每页显示多少条\n                },\n                preViewPage: {\n                    total: 0, // 总页数\n                    currentPage: 1, // 当前页数\n                    pageSize: 10 // 每页显示多少条\n                },\n                tableLoading: false,\n                preViewlistLoading: true,\n                tableOption: tableOption,\n                preViewOption:preViewOption,\n                tableId: undefined,\n                tableName: undefined,\n                dbId:undefined,\n                selData: [],\n                preViewSelData: [],\n                form: {},\n                editId:\"\",\n            }\n        },\n        created() {\n            this.tableId = this.$route.query.tbId\n            this.tableName = this.$route.query.tbName\n            this.dbId = this.$route.query.dbId\n            this.tableOption.column[1].valueDefault = this.tableName\n            newVue.obj = this\n        },\n        mounted: function () {\n        },\n        computed: {\n            ...mapGetters(['permissions'])\n        },\n        methods: {\n            getList(page, params) {\n                this.tableLoading = true\n                fetchList(Object.assign({\n                    current: page.currentPage,\n                    size: page.pageSize,\n                    tableId : this.tableId\n                }, params)).then(response => {\n                    this.tableData = response.data.data.records\n                    this.page.total = response.data.data.total\n                    this.tableLoading = false\n                })\n            },\n            getPreViewList(preViewPage, params) {\n                this.preViewData=[]\n                this.preViewlistLoading = true;\n                fetchPreViewList(Object.assign({\n                    current: preViewPage.currentPage,\n                    size: preViewPage.pageSize,\n                    tableId: this.tableId\n                }, params)).then(response => {\n                    this.preViewData = response.data.data;\n                    this.preViewPage.total = response.data.data.total\n                    this.preViewlistLoading = false;\n                });\n                this.$refs.preViewCrud.selectClear();\n            },\n            /**\n             * @title 打开新增窗口\n             * @detail 调用crud的handleadd方法即可\n             *\n             **/\n            handleAdd: function () {\n                this.$refs.crud.rowAdd()\n            },\n            handleEdit(row, index) {\n                row.tableId = this.tableName;\n                this.$refs.crud.rowEdit(row, index)\n                this.editId=row.id;\n            },\n            handleOpenBefore(show, type) {\n                window.boxType = type;\n                show();\n            },\n            handleDel: function (row, index) { //删除行\n                var _this = this\n                let title = '是否确认删除字段名为\"' + row.name + '\",字段类型为\"' + row.type + '\"的数据项?'\n                this.$confirm(title, '警告', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                }).then(function () {\n                    return delObj(row.id, _this.tableId)\n                }).then(() => {\n                    this.getList(this.page)\n                    _this.$message({\n                        showClose: true,\n                        message: '删除成功',\n                        type: 'success'\n                    })\n                }).catch(function () {\n                })\n            },\n            /**\n             * @title 数据更新\n             * @param row 为当前的数据\n             * @param index 为当前更新数据的行数\n             * @param done 为表单关闭函数\n             *\n             **/\n            handleUpdate: function (row, index, done) {\n                putObj(row).then(() => {\n                    this.tableData.splice(index, 1, Object.assign({}, row))\n                    this.$message({\n                        showClose: true,\n                        message: '修改成功',\n                        type: 'success'\n                    })\n                    this.getList(this.page)\n                    done()\n                })\n            },\n            /**\n             * @title 数据添加\n             * @param row 为当前的数据\n             * @param done 为表单关闭函数\n             *\n             **/\n            handleSave: function (row, done) {\n                row.tableId = this.tableId;\n                addObj(row).then(data => {\n                    this.tableData.push(Object.assign({}, row))\n                    this.$message({\n                        showClose: true,\n                        message: '添加成功',\n                        type: 'success'\n                    })\n                    this.getList(this.page)\n                    done()\n                })\n            },\n            handleFilter(param) {\n                this.page.page = 1;\n                this.getList(this.page,param)\n            },\n            preHandleFilter(param){\n                this.preViewPage.page = 1;\n                this.getPreViewList(this.preViewPage,param);\n            },\n            handleDelAll(){// 列表批量删除\n                if(this.selData.length > 0){\n                    this.$confirm('此操作将永久删除, 是否继续?', '提示', {\n                        confirmButtonText: '确定',\n                        cancelButtonText: '取消',\n                        type: 'warning'\n                    }).then(() => {\n                        let ids = \"\"\n                        for(let i = 0; i < this.selData.length; i++){\n                            ids += this.selData[i].id + \",\"\n                        }\n                        delObj(ids).then(() => {\n                            this.getList(this.page)\n                            this.$message({\n                                showClose: true,\n                                message: '删除成功',\n                                type: 'success'\n                            })\n                        })\n                    })\n                }else {\n                    this.$message({\n                        showClose: true,\n                        message: '请选择要删除的字段',\n                        type: 'warning'\n                    })\n                }\n            },\n            selectionChange(data){\n                this.selData = data\n            },\n            importField() {\n                if(this.preViewSelData.length > 0){\n                    this.$confirm('确认导入?', '提示', {\n                        confirmButtonText: '确定',\n                        cancelButtonText: '取消',\n                        type: 'warning'\n                    }).then(() => {\n                        let defineForm ={}\n                        var nodes = new Array();\n                        for(let i = 0; i < this.preViewSelData.length; i++){\n                            nodes.push(JSON.parse(JSON.stringify(this.preViewSelData[i])));\n                        }\n                        defineForm['tableId']=this.tableId\n                        defineForm['fieldList']=nodes\n                        console.log(defineForm)\n                        preViewAddObj(defineForm).then(() => {\n                            this.preViewFlag = false;\n                            this.getList(this.preViewPage)\n                            this.$notify({\n                                title: \"成功\",\n                                message: \"导入成功\",\n                                type: \"success\",\n                                duration: 2000\n                            });\n                        })\n                    })\n                }else {\n                    this.$message({\n                        showClose: true,\n                        message: '请选择要导入的表',\n                        type: 'warning'\n                    })\n                }\n            },\n            preSelectionChange(data){\n                this.preViewSelData = data\n            },\n            preViewTest:function () {\n                checkDbConn(this.dbId).then(response => {\n                    if(response.data.message===\"测试数据源连接成功\"){\n                        this.preViewFlag=true\n                        this.getPreViewList(this.preViewPage);\n                    }else{\n                        this.$alert(response.data.message, '连接结果', {\n                            confirmButtonText: '确定',\n                            type: 'warning',\n                            callback: action => {\n                            },\n                        });\n                    }\n\n                })\n            }\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n</style>\n\n"]}]}