{"remainingRequest":"G:\\intellij work\\micro-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\intellij work\\micro-ui\\src\\page\\index\\top\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"G:\\intellij work\\micro-ui\\src\\page\\index\\top\\index.vue","mtime":1551167423271},{"path":"G:\\intellij work\\micro-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\intellij work\\micro-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"G:\\intellij work\\micro-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\intellij work\\micro-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapGetters, mapState } from \"vuex\";\nimport { fullscreenToggel, listenfullscreen,handleImg } from \"@/util/util\";\nimport topLock from \"./top-lock\";\nimport topMenu from \"./top-menu\";\nimport topSearch from \"./top-search\";\nimport topTheme from \"./top-theme\";\nimport topLogs from \"./top-logs\";\nimport topColor from \"./top-color\";\nimport topSetting from \"./top-setting\";\nexport default {\n  components: {\n    topLock,\n    topMenu,\n    topSearch,\n    topTheme,\n    topLogs,\n    topColor,\n    topSetting\n  },\n  name: \"top\",\n  data() {\n    return {};\n  },\n  filters: {},\n  created() {\n    handleImg(this.userInfo.avatar, 'thumbnail');\n  },\n  mounted() {\n    listenfullscreen(this.setScreen);\n  },\n  computed: {\n    ...mapState({\n      showDebug: state => state.common.showDebug,\n      showTheme: state => state.common.showTheme,\n      showLock: state => state.common.showLock,\n      showFullScren: state => state.common.showFullScren,\n      showCollapse: state => state.common.showCollapse,\n      showSearch: state => state.common.showSearch,\n      showMenu: state => state.common.showMenu,\n      showColor: state => state.common.showColor\n    }),\n    ...mapGetters([\n      \"userInfo\",\n      \"isFullScren\",\n      \"tagWel\",\n      \"tagList\",\n      \"isCollapse\",\n      \"tag\",\n      \"logsLen\",\n      \"logsFlag\"\n    ])\n  },\n  methods: {\n    handleScreen() {\n      fullscreenToggel();\n    },\n    setCollapse() {\n      this.$store.commit(\"SET_COLLAPSE\");\n    },\n    setScreen() {\n      this.$store.commit(\"SET_FULLSCREN\");\n    },\n    logout() {\n      this.$confirm(\"是否退出系统, 是否继续?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(() => {\n        this.$store.dispatch(\"LogOut\").then(() => {\n          this.$router.push({ path: \"/login\" });\n        });\n      });\n    }\n  }\n};\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/page/index/top","sourcesContent":["<template>\n  <div class=\"avue-top\">\n    <div class=\"top-bar__left\">\n      <div class=\"avue-breadcrumb\"\n           :class=\"[{ 'avue-breadcrumb--active': isCollapse }]\"\n           v-if=\"showCollapse\">\n        <i class=\"icon-navicon\"\n           @click=\"setCollapse\"></i>\n      </div>\n    </div>\n    <div class=\"top-bar__title\">\n      <div class=\"top-bar__item top-bar__item--show\"\n           v-if=\"showMenu\">\n        <top-menu></top-menu>\n      </div>\n      <span class=\"top-bar__item\"\n            v-if=\"showSearch\">\n        <top-search></top-search>\n      </span>\n    </div>\n    <div class=\"top-bar__right\">\n      <el-tooltip v-if=\"showColor\"\n                  effect=\"dark\"\n                  content=\"主题色\"\n                  placement=\"bottom\">\n        <div class=\"top-bar__item\">\n          <top-color></top-color>\n        </div>\n      </el-tooltip>\n      <el-tooltip v-if=\"showDebug\"\n                  effect=\"dark\"\n                  :content=\"logsFlag?'没有错误日志':`${logsLen}条错误日志`\"\n                  placement=\"bottom\">\n        <div class=\"top-bar__item\">\n          <top-logs></top-logs>\n        </div>\n      </el-tooltip>\n      <el-tooltip v-if=\"showLock\"\n                  effect=\"dark\"\n                  content=\"锁屏\"\n                  placement=\"bottom\">\n        <div class=\"top-bar__item\">\n          <top-lock></top-lock>\n        </div>\n      </el-tooltip>\n      <el-tooltip v-if=\"showTheme\"\n                  effect=\"dark\"\n                  content=\"特色主题\"\n                  placement=\"bottom\">\n        <div class=\"top-bar__item top-bar__item--show\">\n          <top-theme></top-theme>\n        </div>\n      </el-tooltip>\n      <el-tooltip v-if=\"showFullScren\"\n                  effect=\"dark\"\n                  :content=\"isFullScren?'退出全屏':'全屏'\"\n                  placement=\"bottom\">\n        <div class=\"top-bar__item\">\n          <i :class=\"isFullScren?'icon-tuichuquanping':'icon-quanping'\"\n             @click=\"handleScreen\"></i>\n        </div>\n      </el-tooltip>\n      <el-tooltip v-if=\"this.userInfo.avatar\" effect=\"dark\"\n                  content=\"用户头像\"\n                  placement=\"bottom\">\n        <img id=\"thumbnail\" class=\"top-bar__img\">\n      </el-tooltip>\n      <el-dropdown>\n        <span class=\"el-dropdown-link\">\n          {{userInfo.username}}\n          <i class=\"el-icon-arrow-down el-icon--right\"></i>\n        </span>\n        <el-dropdown-menu slot=\"dropdown\">\n          <el-dropdown-item>\n            <router-link to=\"/\">首页</router-link>\n          </el-dropdown-item>\n          <el-dropdown-item>\n            <router-link to=\"/info/index\">个人信息</router-link>\n          </el-dropdown-item>\n          <el-dropdown-item @click.native=\"logout\"\n                            divided>退出系统</el-dropdown-item>\n        </el-dropdown-menu>\n      </el-dropdown>\n      <top-setting></top-setting>\n    </div>\n  </div>\n</template>\n<script>\nimport { mapGetters, mapState } from \"vuex\";\nimport { fullscreenToggel, listenfullscreen,handleImg } from \"@/util/util\";\nimport topLock from \"./top-lock\";\nimport topMenu from \"./top-menu\";\nimport topSearch from \"./top-search\";\nimport topTheme from \"./top-theme\";\nimport topLogs from \"./top-logs\";\nimport topColor from \"./top-color\";\nimport topSetting from \"./top-setting\";\nexport default {\n  components: {\n    topLock,\n    topMenu,\n    topSearch,\n    topTheme,\n    topLogs,\n    topColor,\n    topSetting\n  },\n  name: \"top\",\n  data() {\n    return {};\n  },\n  filters: {},\n  created() {\n    handleImg(this.userInfo.avatar, 'thumbnail');\n  },\n  mounted() {\n    listenfullscreen(this.setScreen);\n  },\n  computed: {\n    ...mapState({\n      showDebug: state => state.common.showDebug,\n      showTheme: state => state.common.showTheme,\n      showLock: state => state.common.showLock,\n      showFullScren: state => state.common.showFullScren,\n      showCollapse: state => state.common.showCollapse,\n      showSearch: state => state.common.showSearch,\n      showMenu: state => state.common.showMenu,\n      showColor: state => state.common.showColor\n    }),\n    ...mapGetters([\n      \"userInfo\",\n      \"isFullScren\",\n      \"tagWel\",\n      \"tagList\",\n      \"isCollapse\",\n      \"tag\",\n      \"logsLen\",\n      \"logsFlag\"\n    ])\n  },\n  methods: {\n    handleScreen() {\n      fullscreenToggel();\n    },\n    setCollapse() {\n      this.$store.commit(\"SET_COLLAPSE\");\n    },\n    setScreen() {\n      this.$store.commit(\"SET_FULLSCREN\");\n    },\n    logout() {\n      this.$confirm(\"是否退出系统, 是否继续?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(() => {\n        this.$store.dispatch(\"LogOut\").then(() => {\n          this.$router.push({ path: \"/login\" });\n        });\n      });\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n</style>\n"]}]}