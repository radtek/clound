{"remainingRequest":"E:\\intellij work\\micro-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\intellij work\\micro-ui\\src\\views\\portal\\unit\\standard\\datasource\\datasourceType.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\intellij work\\micro-ui\\src\\views\\portal\\unit\\standard\\datasource\\datasourceType.vue","mtime":1555664327975},{"path":"E:\\intellij work\\micro-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\intellij work\\micro-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\intellij work\\micro-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\intellij work\\micro-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { fetchList, getObj, addObj, putObj, delObj } from '@/api/portal/concern/datasourceType'\nimport { tableOption,addsourceOption,listOption } from '@/const/crud/portal/concern/datasourceType'\nimport { mapGetters } from 'vuex'\nexport default {\n    name: \"datasourceType\",\n    data() {\n        return {\n            addsource:false,\n            listsource:false,\n            listOption:listOption,\n            addOption:addsourceOption,\n            option: tableOption,\n            data: [\n               {\n                title: 'Oracle',\n                text1: '25',\n                img: 'https://gw.alipayobjects.com/zos/rmsportal/WdGqmHpayyMjiEhcKoVE.png'\n            },\n                {\n                title: 'Mysql',\n                text2: '25',\n                img: 'https://gw.alipayobjects.com/zos/rmsportal/zOsKZmFRdUtvpqCImOVY.png'\n            },\n                {\n                title: 'SQL Server',\n                text3: '25',\n                img: 'https://gw.alipayobjects.com/zos/rmsportal/dURIMkkrRFpPgTuzkwnB.png'\n            }\n            ]\n        }\n    },\n    computed: {\n        infoData() {\n            return this.form.info\n        }\n    },\n    methods:{\n        submitForm(formName) {\n            this.$refs[formName].validate(valid => {\n                if (valid) {\n                    request({\n                        url: '/admin/user/edit',\n                        method: 'put',\n                        data: this.ruleForm2\n                    }).then(response => {\n                        if (response.data.data) {\n                            this.$notify({\n                                title: '成功',\n                                message: '修改成功',\n                                type: 'success',\n                                duration: 2000\n                            })\n                            // 修改密码之后强制重新登录\n                            if (this.switchStatus === 'passwordManager') {\n                                this.$store.dispatch('LogOut').then(() => {\n                                    location.reload() // 为了重新实例化vue-router对象 避免bug\n                                })\n                            }\n                        } else {\n                            this.$notify({\n                                title: '失败',\n                                message: response.data.msg,\n                                type: 'error',\n                                duration: 2000\n                            })\n                        }\n                    }).catch(() => {\n                        this.$notify({\n                            title: '失败',\n                            message: '修改失败',\n                            type: 'error',\n                            duration: 2000\n                        })\n                    })\n                } else {\n                    return false\n                }\n            })\n        },\n        resetForm(formName) {\n            this.$refs[formName].resetFields()\n        },\n\n            tip(row, index) {\n                this.$message.success('查看控制台')\n                console.log(row, index)\n            },\n\n        handleOpt(row, index, done, loading){\n            done();\n            this.$notify({\n                title: '成功',\n                message: '操作成功',\n                type: 'success',\n                duration: 2000\n            })\n        },\n        /**\n         * @title 数据添加\n         * @param row 为当前的数据\n         * @param done 为表单关闭函数\n         *\n         **/\n        handleSav: function (row, done) {\n            addObj(row).then(data => {\n                this.tableData.push(Object.assign({}, row))\n                this.$message({\n                    showClose: true,\n                    message: '添加成功',\n                    type: 'success'\n                })\n                this.getList(this.page)\n                done()\n            })\n        },\n        handleDelete() {\n            var _this = this\n            this.$confirm('是否确认删除该记录吗\"?', '警告', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n            }).then(function () {\n                _this.$message({\n                    showClose: true,\n                    message: '删除成功',\n                    type: 'success'\n                })\n            }).catch(function (err) {\n            })\n        },\n    }\n}\n",{"version":3,"sources":["datasourceType.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"datasourceType.vue","sourceRoot":"src/views/portal/unit/standard/datasource","sourcesContent":["<template>\n    <div class=\"app-container calendar-list-container\">\n        <basic-container>\n            <avue-card  ref=\"crud\" :option=\"option\" :data=\"data\" @row-click=\"listsource=true\" @row-add=\"listsource=true\"  v-model=\"form\">\n                <template slot=\"menu\" slot-scope=\"scope\">\n                    <span @click.stop=\"addsource=true\">添加数据源</span>\n                    <span @click.stop=\"listsource=true\">查看数据源</span>\n                </template>\n            </avue-card>\n            <el-dialog title=\"添加数据源\" fullscreen :visible.sync=\"addsource\" :append-to-body=\"true\">\n                <avue-form  :option=\"addOption\"  v-model=\"addData\" >\n                </avue-form>\n                     <div slot=\"footer\"  class=\"el-dialog--center\">\n                         <el-button type=\"primary\" @click=\"handletest\">测试连接\n                         </el-button>\n\n                    <el-button type=\"primary\" @click=\"submitForm(formName)\">保存\n                    </el-button>\n\n                    <el-button type=\"primary\" @click=\"resetForm(formName)\">清空\n                    </el-button>\n                </div>\n            </el-dialog>\n            <el-dialog title=\"数据源列表\" fullscreen :visible.sync=\"listsource\" :append-to-body=\"true\">\n                    <avue-crud :option=\"listOption\" :data=\"listData\"\n                               :page=\"page\"\n                               @row-update=\"handleOpt\"\n                               @row-save=\"handleSav\"\n                               v-model=\"form\">\n\n                        <template slot=\"menu\" slot-scope=\"scope\">\n\n                            <el-button\n                                    size=\"small\"\n                                    type=\"text\"\n                                    icon=\"el-icon-delete\"\n                                    @click=\"handleDelete()\">删除\n                            </el-button>\n                        </template>\n                    </avue-crud>\n            </el-dialog>\n        </basic-container>\n\n    </div>\n</template>\n\n\n\n<script>\n    import { fetchList, getObj, addObj, putObj, delObj } from '@/api/portal/concern/datasourceType'\n    import { tableOption,addsourceOption,listOption } from '@/const/crud/portal/concern/datasourceType'\n    import { mapGetters } from 'vuex'\n    export default {\n        name: \"datasourceType\",\n        data() {\n            return {\n                addsource:false,\n                listsource:false,\n                listOption:listOption,\n                addOption:addsourceOption,\n                option: tableOption,\n                data: [\n                   {\n                    title: 'Oracle',\n                    text1: '25',\n                    img: 'https://gw.alipayobjects.com/zos/rmsportal/WdGqmHpayyMjiEhcKoVE.png'\n                },\n                    {\n                    title: 'Mysql',\n                    text2: '25',\n                    img: 'https://gw.alipayobjects.com/zos/rmsportal/zOsKZmFRdUtvpqCImOVY.png'\n                },\n                    {\n                    title: 'SQL Server',\n                    text3: '25',\n                    img: 'https://gw.alipayobjects.com/zos/rmsportal/dURIMkkrRFpPgTuzkwnB.png'\n                }\n                ]\n            }\n        },\n        computed: {\n            infoData() {\n                return this.form.info\n            }\n        },\n        methods:{\n            submitForm(formName) {\n                this.$refs[formName].validate(valid => {\n                    if (valid) {\n                        request({\n                            url: '/admin/user/edit',\n                            method: 'put',\n                            data: this.ruleForm2\n                        }).then(response => {\n                            if (response.data.data) {\n                                this.$notify({\n                                    title: '成功',\n                                    message: '修改成功',\n                                    type: 'success',\n                                    duration: 2000\n                                })\n                                // 修改密码之后强制重新登录\n                                if (this.switchStatus === 'passwordManager') {\n                                    this.$store.dispatch('LogOut').then(() => {\n                                        location.reload() // 为了重新实例化vue-router对象 避免bug\n                                    })\n                                }\n                            } else {\n                                this.$notify({\n                                    title: '失败',\n                                    message: response.data.msg,\n                                    type: 'error',\n                                    duration: 2000\n                                })\n                            }\n                        }).catch(() => {\n                            this.$notify({\n                                title: '失败',\n                                message: '修改失败',\n                                type: 'error',\n                                duration: 2000\n                            })\n                        })\n                    } else {\n                        return false\n                    }\n                })\n            },\n            resetForm(formName) {\n                this.$refs[formName].resetFields()\n            },\n\n                tip(row, index) {\n                    this.$message.success('查看控制台')\n                    console.log(row, index)\n                },\n\n            handleOpt(row, index, done, loading){\n                done();\n                this.$notify({\n                    title: '成功',\n                    message: '操作成功',\n                    type: 'success',\n                    duration: 2000\n                })\n            },\n            /**\n             * @title 数据添加\n             * @param row 为当前的数据\n             * @param done 为表单关闭函数\n             *\n             **/\n            handleSav: function (row, done) {\n                addObj(row).then(data => {\n                    this.tableData.push(Object.assign({}, row))\n                    this.$message({\n                        showClose: true,\n                        message: '添加成功',\n                        type: 'success'\n                    })\n                    this.getList(this.page)\n                    done()\n                })\n            },\n            handleDelete() {\n                var _this = this\n                this.$confirm('是否确认删除该记录吗\"?', '警告', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                }).then(function () {\n                    _this.$message({\n                        showClose: true,\n                        message: '删除成功',\n                        type: 'success'\n                    })\n                }).catch(function (err) {\n                })\n            },\n        }\n    }\n</script>"]}]}