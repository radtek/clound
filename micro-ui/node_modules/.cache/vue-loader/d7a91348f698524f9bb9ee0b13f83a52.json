{"remainingRequest":"E:\\intellij work\\micro-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\intellij work\\micro-ui\\src\\views\\admin\\dicttype\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\intellij work\\micro-ui\\src\\views\\admin\\dicttype\\index.vue","mtime":1552876440414},{"path":"E:\\intellij work\\micro-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\intellij work\\micro-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\intellij work\\micro-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\intellij work\\micro-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {fetchDictTypeList, addObj, getObj, delObj, putObj} from '@/api/admin/dict-type'\nimport {tableOption} from '@/const/crud/admin/dict-type'\nimport {mapGetters} from 'vuex'\nexport default {\n    name: \"dictType\",\n    data() {\n        return {\n            tableData: [],\n            page: {\n                total: 0, // 总页数\n                currentPage: 1, // 当前页数\n                pageSize: 20 // 每页显示多少条\n            },\n            tableLoading: false,\n            tableOption: tableOption\n        }\n    },\n    created() {\n    },\n    computed: {\n        ...mapGetters(['permissions'])\n    },\n    methods: {\n        getList(page, params) {\n            this.tableLoading = true\n            fetchDictTypeList(Object.assign({\n                current: page.currentPage,\n                size: page.pageSize\n            }, params)).then(response => {\n                this.tableData = response.data.data.records\n                this.page.total = response.data.data.total\n                this.tableLoading = false\n            })\n        },\n        handleDel(row, index) {\n            this.$refs.crud.rowDel(row, index)\n        },\n        refreshChange({page, searchForm}){\n            let params = this.getParams(searchForm);\n            this.getList(page, params)\n        },\n        rowDel: function (row, index) {\n            var _this = this\n            this.$confirm('是否确认删除字典类型为\"' + row.innerFlag + '\",字典名称为\"' + row.chineseName + '\"的数据项?', '警告', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n            }).then(function () {\n                return delObj(row)\n            }).then(() => {\n                this.getList(this.page)\n                _this.$message({\n                    showClose: true,\n                    message: '删除成功',\n                    type: 'success'\n                })\n            }).catch(function () {\n            })\n        },\n        /**\n         * @title 数据更新\n         * @param row 为当前的数据\n         * @param index 为当前更新数据的行数\n         * @param done 为表单关闭函数\n         *\n         **/\n        handleUpdate: function (row, index, done) {\n            putObj(row).then(() => {\n                this.tableData.splice(index, 1, Object.assign({}, row))\n                this.$message({\n                    showClose: true,\n                    message: '修改成功',\n                    type: 'success'\n                })\n                this.getList(this.page)\n                done()\n            }).catch(function (error) {\n                console.log(error);\n            })\n        },\n        /**\n         * @title 数据添加\n         * @param row 为当前的数据\n         * @param done 为表单关闭函数\n         *\n         **/\n        handleSave: function (row, done) {\n            addObj(row).then(data => {\n                this.tableData.push(Object.assign({}, row))\n                this.$message({\n                    showClose: true,\n                    message: '添加成功',\n                    type: 'success'\n                })\n                this.getList(this.page)\n                done()\n            })\n        },\n        getParams(form){\n            let params ={\n                innerFlag: undefined,\n                chineseName: undefined,\n                isTree: undefined\n            }\n            if(form.innerFlag != \"\")\n                params.innerFlag = form.innerFlag\n            if(form.chineseName != \"\")\n                params.chineseName = form.chineseName\n            if(form.isTree != \"\")\n                params.isTree = form.isTree\n            return params;\n        },\n        searchChange(form) {\n            let params = this.getParams(form);\n            this.getList(this.page, params)\n        },\n        handleEdit(row, index) {\n            this.$refs.crud.rowEdit(row, index)\n        },\n        handleDictDetail(row, index){\n            console.log(3333)\n            this.$router.push({\n                path: this.$router.$avueRouter.getPath({\n                    name: \"字典项\",\n                    src: \"/admin/dict\"\n                }),\n                query: {type: row.innerFlag, isTree: row.isTree}\n            });\n        }\n    }\n};\n",{"version":3,"sources":["index.vue"],"names":[],"mappingsfile":"index.vue","sourceRoot":"src/views/admin/dicttype","sourcesContent":["\r\n<template>\r\n    <div class=\"execution\">\r\n        <basic-container>\r\n            <avue-crud ref=\"crud\"\r\n                       :page=\"page\"\r\n                       :data=\"tableData\"\r\n                       :table-loading=\"tableLoading\"\r\n                       :option=\"tableOption\"\r\n                       @on-load=\"getList\"\r\n                       @row-update=\"handleUpdate\"\r\n                       @row-save=\"handleSave\"\r\n                       @search-change=\"searchChange\"\r\n                       @refresh-change=\"refreshChange\"\r\n                       @row-del=\"rowDel\">\r\n                <template slot-scope=\"scope\"\r\n                          slot=\"menu\">\r\n\r\n                    <el-button type=\"text\"\r\n                               icon=\"el-icon-tickets\"\r\n                               size=\"mini\"\r\n                               plain\r\n                               @click=\"handleDictDetail(scope.row,scope.index)\">字典项\r\n                    </el-button>\r\n\r\n                    <el-button type=\"text\"\r\n                               v-if=\"permissions.sys_dict_edit\"\r\n                               icon=\"el-icon-edit\"\r\n                               size=\"mini\"\r\n                               plain\r\n                               @click=\"handleEdit(scope.row,scope.index)\">编辑\r\n                    </el-button>\r\n                    <el-button type=\"text\"\r\n                               v-if=\"permissions.sys_dict_del\"\r\n                               icon=\"el-icon-delete\"\r\n                               size=\"mini\"\r\n                               plain\r\n                               @click=\"handleDel(scope.row,scope.index)\">删除\r\n                    </el-button>\r\n                </template>\r\n            </avue-crud>\r\n        </basic-container>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import {fetchDictTypeList, addObj, getObj, delObj, putObj} from '@/api/admin/dict-type'\r\n    import {tableOption} from '@/const/crud/admin/dict-type'\r\n    import {mapGetters} from 'vuex'\r\n    export default {\r\n        name: \"dictType\",\r\n        data() {\r\n            return {\r\n                tableData: [],\r\n                page: {\r\n                    total: 0, // 总页数\r\n                    currentPage: 1, // 当前页数\r\n                    pageSize: 20 // 每页显示多少条\r\n                },\r\n                tableLoading: false,\r\n                tableOption: tableOption\r\n            }\r\n        },\r\n        created() {\r\n        },\r\n        computed: {\r\n            ...mapGetters(['permissions'])\r\n        },\r\n        methods: {\r\n            getList(page, params) {\r\n                this.tableLoading = true\r\n                fetchDictTypeList(Object.assign({\r\n                    current: page.currentPage,\r\n                    size: page.pageSize\r\n                }, params)).then(response => {\r\n                    this.tableData = response.data.data.records\r\n                    this.page.total = response.data.data.total\r\n                    this.tableLoading = false\r\n                })\r\n            },\r\n            handleDel(row, index) {\r\n                this.$refs.crud.rowDel(row, index)\r\n            },\r\n            refreshChange({page, searchForm}){\r\n                let params = this.getParams(searchForm);\r\n                this.getList(page, params)\r\n            },\r\n            rowDel: function (row, index) {\r\n                var _this = this\r\n                this.$confirm('是否确认删除字典类型为\"' + row.innerFlag + '\",字典名称为\"' + row.chineseName + '\"的数据项?', '警告', {\r\n                    confirmButtonText: '确定',\r\n                    cancelButtonText: '取消',\r\n                    type: 'warning'\r\n                }).then(function () {\r\n                    return delObj(row)\r\n                }).then(() => {\r\n                    this.getList(this.page)\r\n                    _this.$message({\r\n                        showClose: true,\r\n                        message: '删除成功',\r\n                        type: 'success'\r\n                    })\r\n                }).catch(function () {\r\n                })\r\n            },\r\n            /**\r\n             * @title 数据更新\r\n             * @param row 为当前的数据\r\n             * @param index 为当前更新数据的行数\r\n             * @param done 为表单关闭函数\r\n             *\r\n             **/\r\n            handleUpdate: function (row, index, done) {\r\n                putObj(row).then(() => {\r\n                    this.tableData.splice(index, 1, Object.assign({}, row))\r\n                    this.$message({\r\n                        showClose: true,\r\n                        message: '修改成功',\r\n                        type: 'success'\r\n                    })\r\n                    this.getList(this.page)\r\n                    done()\r\n                }).catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n            },\r\n            /**\r\n             * @title 数据添加\r\n             * @param row 为当前的数据\r\n             * @param done 为表单关闭函数\r\n             *\r\n             **/\r\n            handleSave: function (row, done) {\r\n                addObj(row).then(data => {\r\n                    this.tableData.push(Object.assign({}, row))\r\n                    this.$message({\r\n                        showClose: true,\r\n                        message: '添加成功',\r\n                        type: 'success'\r\n                    })\r\n                    this.getList(this.page)\r\n                    done()\r\n                })\r\n            },\r\n            getParams(form){\r\n                let params ={\r\n                    innerFlag: undefined,\r\n                    chineseName: undefined,\r\n                    isTree: undefined\r\n                }\r\n                if(form.innerFlag != \"\")\r\n                    params.innerFlag = form.innerFlag\r\n                if(form.chineseName != \"\")\r\n                    params.chineseName = form.chineseName\r\n                if(form.isTree != \"\")\r\n                    params.isTree = form.isTree\r\n                return params;\r\n            },\r\n            searchChange(form) {\r\n                let params = this.getParams(form);\r\n                this.getList(this.page, params)\r\n            },\r\n            handleEdit(row, index) {\r\n                this.$refs.crud.rowEdit(row, index)\r\n            },\r\n            handleDictDetail(row, index){\r\n                console.log(3333)\r\n                this.$router.push({\r\n                    path: this.$router.$avueRouter.getPath({\r\n                        name: \"字典项\",\r\n                        src: \"/admin/dict\"\r\n                    }),\r\n                    query: {type: row.innerFlag, isTree: row.isTree}\r\n                });\r\n            }\r\n        }\r\n    };\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n</style>"]}]}