{"remainingRequest":"E:\\intellij work\\micro-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\intellij work\\micro-ui\\node_modules\\avue-plugin-ueditor\\packages\\ueditor\\src\\main.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"E:\\intellij work\\micro-ui\\node_modules\\avue-plugin-ueditor\\packages\\ueditor\\src\\main.vue","mtime":1549191189000},{"path":"E:\\intellij work\\micro-ui\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"E:\\intellij work\\micro-ui\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\intellij work\\micro-ui\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\intellij work\\micro-ui\\node_modules\\sass-loader\\lib\\loader.js","mtime":1533139052000},{"path":"E:\\intellij work\\micro-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\intellij work\\micro-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import \"../../theme-chack/src/index.scss\";\n",{"version":3,"sources":["main.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwRA","file":"main.vue","sourceRoot":"node_modules/avue-plugin-ueditor/packages/ueditor/src","sourcesContent":["<template>\n  <div class=\"avue-ueditor\">\n    <quill-editor :style=\"{height:`${minRows*40+100}px`,maxHeight:`${maxRows*40+100}px`}\"\n                  v-model=\"text\"\n                  @change=\"handleChange\"\n                  @click.native=\"handleClick\"\n                  ref=\"myQuillEditor\"\n                  :options=\"options\">\n\n    </quill-editor>\n    <div class=\"avue-ueditor__dialog\"\n         v-if=\"box\">\n      <div class=\"avue-ueditor__mask\"\n           @click.stop=\"box=false\"></div>\n      <div class=\"avue-ueditor__content\">\n        <p class=\"avue-ueditor__tip\"\n           v-if=\"loading\">正在上传，请稍后</p>\n        <div class=\"avue-ueditor__img\">\n          <div class=\"avue-ueditor__img-left\">\n            <p>\n              宽度:<input type=\"text\"\n                     class=\"avue-ueditor__img-input\"\n                     v-model=\"img.width\" />\n            </p>\n            <p>\n              高度:<input type=\"text\"\n                     class=\"avue-ueditor__img-input\"\n                     v-model=\"img.height\" />\n            </p>\n          </div>\n          <div class=\"avue-ueditor__img-right\">\n            <img :src=\"img.url\"\n                 class=\"avue-ueditor__img-img\"\n                 ref=\"img\"\n                 :style=\"styles\"\n                 alt=\"\" />\n          </div>\n        </div>\n        <div class=\"avue-ueditor__menu\">\n          <div class=\"avue-ueditor__upload\">\n            <button class=\"avue-ueditor__btn\">上传</button>\n            <input type=\"file\"\n                   id=\"file\"\n                   @change=\"handleUpload\"\n                   class=\"avue-ueditor__file\" />\n          </div>\n          <button class=\"avue-ueditor__btn\"\n                  @click=\"handleSubmit\">确定</button>\n        </div>\n\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport quillEditor from \"vue-quill-editor/src/editor\";\nimport { getClient } from \"./upload/ali\";\nimport { getToken } from \"./upload/qiniu\";\nimport { getObjValue } from \"./upload/util\";\nexport default {\n  name: \"AvueUeditor\",\n  components: {\n    quillEditor\n  },\n  computed: {\n    props() {\n      return this.upload.props;\n    },\n    oss() {\n      return this.upload.oss;\n    },\n    action() {\n      return this.upload.action;\n    },\n    qiniu() {\n      return this.upload.qiniu;\n    },\n    ali() {\n      return this.upload.ali;\n    },\n    styles() {\n      if (this.img.width === 0 || this.img.height === 0) {\n        return {};\n      }\n      return {\n        width: this.img.width + \"px\",\n        height: this.img.height + \"px\"\n      };\n    },\n    isQiniuOSS() {\n      return this.oss === \"qiniu\";\n    },\n    isAliOSS() {\n      return this.oss === \"ali\";\n    }\n  },\n  props: {\n    upload: {\n      type: Object,\n      default: () => {\n        return {};\n      }\n    },\n    value: {\n      type: String,\n      default: \"\"\n    },\n    readonly: {\n      type: Boolean,\n      default: false\n    },\n    height: {\n      default: \"\"\n    },\n    minRows: {\n      type: Number,\n      default: 5\n    },\n    maxRows: {\n      type: Number,\n      default: 10\n    }\n  },\n  data() {\n    return {\n      loading: false,\n      text: undefined,\n      box: false,\n      img: {\n        url: \"\",\n        width: 0,\n        height: 0,\n        calc: \"\"\n      },\n      options: {\n        placeholder: \"请输入内容\",\n        readonly: false\n      }\n    };\n  },\n  watch: {\n    \"img.width\"(n, o) {\n      if (n === 0 || o === 0) return;\n      this.img.height = parseInt(n * this.img.calc);\n    },\n    value() {\n      this.text = this.value;\n    }\n  },\n  created() {\n    this.init();\n  },\n  mounted() {\n    this.$refs.myQuillEditor.quill\n      .getModule(\"toolbar\")\n      .addHandler(\"image\", this.imgHandler);\n  },\n  methods: {\n    handleSubmit() {\n      let quill = this.$refs.myQuillEditor.quill;\n      quill.root.innerHTML = this.text + this.$refs.img.outerHTML;\n      quill.focus();\n      this.img.url = \"\";\n      this.img.width = 0;\n      this.img.height = 0;\n      this.box = false;\n    },\n    handleUpload(e) {\n      this.loading = true;\n      const file = e.target.files[0];\n      this.handleFile(file).then(() => {\n        this.setImgParam();\n      });\n    },\n    handleFile(file) {\n      return new Promise(resolve => {\n        const headers = { \"Content-Type\": \"multipart/form-data\" };\n        let oss_config = {};\n        let client;\n        let param = new FormData();\n        let url = this.action;\n        param.append(\"file\", file, file.name);\n        if (this.isQiniuOSS) {\n          oss_config = this.qiniu;\n          const token = getToken(oss_config.AK, oss_config.SK, {\n            scope: oss_config.scope,\n            deadline: new Date().getTime() + oss_config.deadline * 3600\n          });\n          param.append(\"token\", token);\n          url = \"http://up.qiniu.com/\";\n        } else if (this.isAliOSS) {\n          oss_config = this.ali;\n          client = getClient({\n            region: oss_config.region,\n            endpoint: oss_config.endpoint,\n            accessKeyId: oss_config.accessKeyId,\n            accessKeySecret: oss_config.accessKeySecret,\n            bucket: oss_config.bucket\n          });\n        }\n        (() => {\n          if (this.isAliOSS) {\n            return client.put(file.name, file);\n          } else {\n            return this.$httpajax.post(url, param, { headers });\n          }\n        })().then(res => {\n          let list = {};\n          if (this.isAliOSS) {\n            list = res;\n            this.img.url = list.url;\n          } else if (this.isQiniuOSS) {\n            list = res.data;\n            list.key = oss_config.url + list.key;\n            this.img.url = list.key;\n          } else {\n            list = getObjValue(res.data, this.props.res, \"object\");\n            this.img.url = list[this.props.url];\n          }\n          this.loading = false;\n          resolve();\n        });\n      });\n    },\n    setImgParam() {\n      const img = this.$refs.img;\n      img.onload = () => {\n        this.img.width = img.width;\n        this.img.height = img.height;\n        this.img.calc = img.height / img.width;\n      };\n    },\n    imgHandler() {\n      this.box = true;\n    },\n    init() {\n      this.text = this.value;\n      this.options.placeholder = this.placeholder || \"请输入内容\";\n      this.options.readonly = this.readonly;\n      //粘贴键\n      document.addEventListener(\"paste\", e => {\n        //获取剪切板文件\n        const getFile = event => {\n          if (event.clipboardData || event.originalEvent) {\n            var clipboardData =\n              event.clipboardData || event.originalEvent.clipboardData;\n            if (clipboardData.items) {\n              var items = clipboardData.items,\n                len = items.length,\n                blob = null;\n              for (var i = 0; i < len; i++) {\n                if (items[i].type.indexOf(\"image\") !== -1) {\n                  blob = items[i].getAsFile();\n                  return blob;\n                }\n              }\n            }\n          }\n        };\n        const file = getFile(e);\n        this.box = true;\n        this.handleFile(file).then(() => {\n          this.setImgParam();\n        });\n      });\n    },\n    handleClick() {\n      if (typeof this.click === \"function\")\n        this.click({ value: this.text, column: this.column });\n    },\n    handleChange(value) {\n      if (typeof this.change === \"function\")\n        this.change({ value: value.html, column: this.column });\n      this.$emit(\"input\", value.html);\n      this.$emit(\"change\", value.html);\n    }\n  }\n};\n</script>\n<style lang=\"scss\">\n@import \"../../theme-chack/src/index.scss\";\n</style>\n"]}]}