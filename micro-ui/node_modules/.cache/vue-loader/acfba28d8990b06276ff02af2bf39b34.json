{"remainingRequest":"G:\\intellij work\\micro-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\intellij work\\micro-ui\\src\\page\\login\\login.vue?vue&type=script&lang=js&","dependencies":[{"path":"G:\\intellij work\\micro-ui\\src\\page\\login\\login.vue","mtime":1559705782827},{"path":"G:\\intellij work\\micro-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\intellij work\\micro-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"G:\\intellij work\\micro-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\intellij work\\micro-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {randomLenNum} from \"@/util/util\";\nimport {mapGetters} from \"vuex\";\nlet userAgent;\nexport default {\n    name: \"newlogin\",\n    data() {\n\n        return {\n            socialForm: {\n                code: '',\n                state: ''\n            },\n            pkiForm: {\n                code: '',\n                state: ''\n            },\n            loginForm: {\n                username: \"admin\",\n                password: \"123456\",\n                code: \"\",\n                redomStr: \"\"\n            },\n            JITDSignOcx: [],\n            checked: false,\n            code: {\n                src: \"/code\",\n                value: \"\",\n                len: 4,\n                type: \"image\"\n            },\n            loginRules: {\n                username: [\n                    {required: true, message: \"请输入用户名\", trigger: \"blur\"}\n                ],\n                password: [\n                    {required: true, message: \"请输入密码\", trigger: \"blur\"},\n                    {min: 6, message: \"密码长度最少为6位\", trigger: \"blur\"}\n                ]/*,\n    code: [\n      { required: true, message: \"请输入验证码\", trigger: \"blur\" },\n      { min: 4, max: 4, message: \"验证码长度为4位\", trigger: \"blur\" }\n    ]*/\n            },\n            passwordType: \"password\"\n        };\n    },\n    watch: {\n        $route() {\n            const params = this.$route.query\n            this.socialForm.state = params.state\n            this.socialForm.code = params.code\n            if (!validatenull(this.socialForm.state)) {\n                const loading = this.$loading({\n                    lock: true,\n                    text: `登录中,请稍后。。。`,\n                    spinner: 'el-icon-loading'\n                })\n                setTimeout(() => {\n                    loading.close()\n                }, 2000)\n                this.handleSocialLogin()\n            }\n        }\n    },\n    created() {\n        this.refreshCode();\n        this.choseBrowser();\n    },\n    mounted() {\n        this.JITDSignOcx = document.getElementById('JITDSignOcx')\n    },\n    computed: {\n        ...mapGetters([\"tagWel\"])\n    },\n    props: [],\n    methods: {\n        choseBrowser(){\n            let browser = navigator.userAgent.toLocaleLowerCase();\n            if(browser.indexOf(\"msie\") >= 0 || browser.indexOf(\"trident\") >= 0){\n                this.userAgent=true\n            }else{\n                this.userAgent=false\n            }\n\n        },\n        refreshCode() {\n            this.loginForm.code = ''\n            this.loginForm.randomStr = randomLenNum(this.code.len, true)\n            this.code.type === 'text'\n                ? (this.code.value = randomLenNum(this.code.len))\n                : (this.code.src = `${this.codeUrl}?randomStr=${this.loginForm.randomStr}`)\n        },\n        showPassword() {\n            this.passwordType == ''\n                ? (this.passwordType = 'password')\n                : (this.passwordType = '')\n        },\n        handleSocialLogin() {\n            this.$store.dispatch('LoginBySocial', this.socialForm).then(\n                () => {\n                    this.$router.push({path: this.tagWel.value});\n                }\n            )\n        },\n        handleLogin() {\n            this.$refs.loginForm.validate(valid => {\n                if (valid) {\n                    this.$store.dispatch(\"LoginByUsername\", this.loginForm).then(() => {\n                        this.$router.push({path: this.tagWel.value});\n                    }).catch(() => {\n                        this.refreshCode()\n                    })\n\n                }\n            });\n        },\n        pkiLogin() {\n            const loading = this.$loading({\n                lock: true,\n                text: `登录中,请稍后。。。`,\n                spinner: 'el-icon-loading'\n            })\n            this.initJitOcx(loading)\n            if(this.pkiForm.code){\n\n                this.$store.dispatch(\"LoginByPki\", this.pkiForm).then(() => {\n                    this.$router.push({path: this.tagWel.value});\n                    setTimeout(() => {\n                        loading.close()\n                    }, 2000)\n                }).catch(() => {\n                    setTimeout(() => {\n                        loading.close()\n                    }, 2000)\n                });\n\n            }\n        },\n        msg(msg){\n            this.$message({\n                type:'error',\n                dangerouslyUseHTMLString: true,\n                duration:4000,\n                message: msg\n            });\n\n        },\n        initJitOcx(loading) {\n            try {\n                let InitParam = \"<?xml version=\\\"1.0\\\" encoding=\\\"gb2312\\\"?><authinfo><liblist><lib type=\\\"CSP\\\" version=\\\"1.0\\\" dllname=\\\"\\\" ><algid val=\\\"SHA1\\\" sm2_hashalg=\\\"sm3\\\"/></lib><lib type=\\\"SKF\\\" version=\\\"1.1\\\" dllname=\\\"SERfR01DQUlTLmRsbA==\\\" ><algid val=\\\"SHA1\\\" sm2_hashalg=\\\"sm3\\\"/></lib><lib type=\\\"SKF\\\" version=\\\"1.1\\\" dllname=\\\"U2h1dHRsZUNzcDExXzMwMDBHTS5kbGw=\\\" ><algid val=\\\"SHA1\\\" sm2_hashalg=\\\"sm3\\\"/></lib><lib type=\\\"SKF\\\" version=\\\"1.1\\\" dllname=\\\"U0tGQVBJLmRsbA==\\\" ><algid val=\\\"SHA1\\\" sm2_hashalg=\\\"sm3\\\"/></lib></liblist></authinfo>\";\n                this.JITDSignOcx.Initialize(InitParam);\n                if (this.JITDSignOcx.GetErrorCode() != 0) {\n                    loading.close()\n                    this.msg(\"初始化失败，错误码：\" + this.JITDSignOcx.GetErrorCode() + \" 错误信息：\" + this.JITDSignOcx.GetErrorMessage(this.JITDSignOcx.GetErrorCode()))\n                    this.JITDSignOcx.Finalize();\n\n                    return false;\n                }\n                //控制证书为一个时，不弹出证书选择框\n                this.JITDSignOcx.SetCertChooseType(1);\n                this.JITDSignOcx.SetCert(\"SC\", \"\", \"\", \"\", \"\", \"\");\n                if (this.JITDSignOcx.GetErrorCode() != 0) {\n                    loading.close()\n                    this.msg(\"错误码：\" + this.JITDSignOcx.GetErrorCode() + \"　错误信息：\" + this.JITDSignOcx.GetErrorMessage(this.JITDSignOcx.GetErrorCode()))\n                    this.JITDSignOcx.Finalize();\n\n                    return false;\n                } else {\n                    let temp_DSign_Result = this.JITDSignOcx.DetachSignStr(\"\", \"ygnet\");\n                    if (this.JITDSignOcx.GetErrorCode() != 0) {\n                        loading.close()\n                        this.msg(\"错误码：\" + JITDSignOcx.GetErrorCode() + \"　错误信息：\" + this.JITDSignOcx.GetErrorMessage(this.JITDSignOcx.GetErrorCode()));\n                        this.JITDSignOcx.Finalize();\n\n                        return false;\n                    }\n                    this.JITDSignOcx.Finalize();\n                    this.pkiForm.code=temp_DSign_Result;\n                }\n                loading.close()\n                return false;\n            } catch (e) {\n                loading.close()\n                this.msg('PKI证书驱动存在问题、无法获取PKI证书。\\n浏览器不兼容证书登录:\\n');\n\n            }\n        }\n\n    }\n};\n",{"version":3,"sources":["login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+DA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA","file":"login.vue","sourceRoot":"src/page/login","sourcesContent":["<template>\r\n    <div class=\"loginPage\">\r\n        <div class=\"login_box\">\r\n            <div class=\"login_img\"><img src=\"../../../public/img/gaw.png\" alt=\"\"></div>\r\n            <div class=\"login_title\">智慧新防控特行场所管理系统</div>\r\n            <el-form class=\"login-form\"\r\n                     status-icon\r\n                     :rules=\"loginRules\"\r\n                     ref=\"loginForm\"\r\n                     :model=\"loginForm\"\r\n                     label-width=\"0\">\r\n\r\n                <el-form-item prop=\"username\" class=\"username_box box_style\">\r\n                    <el-input size=\"small\"\r\n                              @keyup.enter.native=\"handleLogin\"\r\n                              v-model=\"loginForm.username\"\r\n                              auto-complete=\"off\"\r\n                              placeholder=\"请输入用户名\">\r\n                        <i slot=\"prefix\"\r\n                           class=\"icon-yonghu icon_style\"></i>\r\n                    </el-input>\r\n                </el-form-item>\r\n                <el-form-item prop=\"password\" class=\"password_box box_style\">\r\n                    <el-input size=\"small\"\r\n                              @keyup.enter.native=\"handleLogin\"\r\n                              :type=\"passwordType\"\r\n                              v-model=\"loginForm.password\"\r\n                              auto-complete=\"off\"\r\n                              placeholder=\"请输入密码\">\r\n                        <i class=\"el-icon-view el-input__icon icon_style\"\r\n                           slot=\"suffix\"\r\n                           @click=\"showPassword\"></i>\r\n                        <i slot=\"prefix\"\r\n                           class=\"icon-mima icon_style\" ></i>\r\n                    </el-input>\r\n                </el-form-item>\r\n                <el-form-item class=\"login_btnbox\">\r\n                        <div style=\"float: left;width:50%\" class=\"login_btn\">\r\n                            <el-button type=\"primary\"\r\n                                       size=\"small\"\r\n                                       @click.native.prevent=\"handleLogin\"\r\n                                       class=\"login-submit\">登录\r\n                            </el-button>\r\n                        </div>\r\n                        <div style=\"float: right;width: 50%\" class=\"login_btn\">\r\n                            <el-button type=\"primary\"\r\n                                       size=\"small\"\r\n                                       @click.native.prevent=\"pkiLogin\"\r\n                                       class=\"login-submit\">PKI登陆\r\n                            </el-button>\r\n                        </div>\r\n                        <object v-if=\"userAgent\" id=\"JITDSignOcx\" classid=\"clsid:B0EF56AD-D711-412D-BE74-A751595F3633\"\r\n                                codebase=\"/oci/JITComVCTK_S.cab#version=2,1,1,3\"></object>\r\n                        <embed v-else id=\"JITDSignOcx\" type=\"application/x-jit-sign-vctk-s-plugin-boc\" height=\"0px\" width=\"0px\"/>\r\n                </el-form-item>\r\n            </el-form>\r\n            <div class=\"hint\">您使用浏览器的版本不兼容，请使用谷歌浏览器49版本进行登录。<a class=\"dawnload\" href=\"https://dl.softmgr.qq.com/original/Browser/chrome_x32_v74.0.3729.131_installer.exe\" target=\"_blank\" data-hottag=\"download.detail.normal.2661\" data-id=\"2661\">点此下载</a></div>\r\n        </div>\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\n    import {randomLenNum} from \"@/util/util\";\r\n    import {mapGetters} from \"vuex\";\r\n    let userAgent;\r\n    export default {\r\n        name: \"newlogin\",\r\n        data() {\r\n\r\n            return {\r\n                socialForm: {\r\n                    code: '',\r\n                    state: ''\r\n                },\r\n                pkiForm: {\r\n                    code: '',\r\n                    state: ''\r\n                },\r\n                loginForm: {\r\n                    username: \"admin\",\r\n                    password: \"123456\",\r\n                    code: \"\",\r\n                    redomStr: \"\"\r\n                },\r\n                JITDSignOcx: [],\r\n                checked: false,\r\n                code: {\r\n                    src: \"/code\",\r\n                    value: \"\",\r\n                    len: 4,\r\n                    type: \"image\"\r\n                },\r\n                loginRules: {\r\n                    username: [\r\n                        {required: true, message: \"请输入用户名\", trigger: \"blur\"}\r\n                    ],\r\n                    password: [\r\n                        {required: true, message: \"请输入密码\", trigger: \"blur\"},\r\n                        {min: 6, message: \"密码长度最少为6位\", trigger: \"blur\"}\r\n                    ]/*,\r\n        code: [\r\n          { required: true, message: \"请输入验证码\", trigger: \"blur\" },\r\n          { min: 4, max: 4, message: \"验证码长度为4位\", trigger: \"blur\" }\r\n        ]*/\r\n                },\r\n                passwordType: \"password\"\r\n            };\r\n        },\r\n        watch: {\r\n            $route() {\r\n                const params = this.$route.query\r\n                this.socialForm.state = params.state\r\n                this.socialForm.code = params.code\r\n                if (!validatenull(this.socialForm.state)) {\r\n                    const loading = this.$loading({\r\n                        lock: true,\r\n                        text: `登录中,请稍后。。。`,\r\n                        spinner: 'el-icon-loading'\r\n                    })\r\n                    setTimeout(() => {\r\n                        loading.close()\r\n                    }, 2000)\r\n                    this.handleSocialLogin()\r\n                }\r\n            }\r\n        },\r\n        created() {\r\n            this.refreshCode();\r\n            this.choseBrowser();\r\n        },\r\n        mounted() {\r\n            this.JITDSignOcx = document.getElementById('JITDSignOcx')\r\n        },\r\n        computed: {\r\n            ...mapGetters([\"tagWel\"])\r\n        },\r\n        props: [],\r\n        methods: {\r\n            choseBrowser(){\r\n                let browser = navigator.userAgent.toLocaleLowerCase();\r\n                if(browser.indexOf(\"msie\") >= 0 || browser.indexOf(\"trident\") >= 0){\r\n                    this.userAgent=true\r\n                }else{\r\n                    this.userAgent=false\r\n                }\r\n\r\n            },\r\n            refreshCode() {\r\n                this.loginForm.code = ''\r\n                this.loginForm.randomStr = randomLenNum(this.code.len, true)\r\n                this.code.type === 'text'\r\n                    ? (this.code.value = randomLenNum(this.code.len))\r\n                    : (this.code.src = `${this.codeUrl}?randomStr=${this.loginForm.randomStr}`)\r\n            },\r\n            showPassword() {\r\n                this.passwordType == ''\r\n                    ? (this.passwordType = 'password')\r\n                    : (this.passwordType = '')\r\n            },\r\n            handleSocialLogin() {\r\n                this.$store.dispatch('LoginBySocial', this.socialForm).then(\r\n                    () => {\r\n                        this.$router.push({path: this.tagWel.value});\r\n                    }\r\n                )\r\n            },\r\n            handleLogin() {\r\n                this.$refs.loginForm.validate(valid => {\r\n                    if (valid) {\r\n                        this.$store.dispatch(\"LoginByUsername\", this.loginForm).then(() => {\r\n                            this.$router.push({path: this.tagWel.value});\r\n                        }).catch(() => {\r\n                            this.refreshCode()\r\n                        })\r\n\r\n                    }\r\n                });\r\n            },\r\n            pkiLogin() {\r\n                const loading = this.$loading({\r\n                    lock: true,\r\n                    text: `登录中,请稍后。。。`,\r\n                    spinner: 'el-icon-loading'\r\n                })\r\n                this.initJitOcx(loading)\r\n                if(this.pkiForm.code){\r\n\r\n                    this.$store.dispatch(\"LoginByPki\", this.pkiForm).then(() => {\r\n                        this.$router.push({path: this.tagWel.value});\r\n                        setTimeout(() => {\r\n                            loading.close()\r\n                        }, 2000)\r\n                    }).catch(() => {\r\n                        setTimeout(() => {\r\n                            loading.close()\r\n                        }, 2000)\r\n                    });\r\n\r\n                }\r\n            },\r\n            msg(msg){\r\n                this.$message({\r\n                    type:'error',\r\n                    dangerouslyUseHTMLString: true,\r\n                    duration:4000,\r\n                    message: msg\r\n                });\r\n\r\n            },\r\n            initJitOcx(loading) {\r\n                try {\r\n                    let InitParam = \"<?xml version=\\\"1.0\\\" encoding=\\\"gb2312\\\"?><authinfo><liblist><lib type=\\\"CSP\\\" version=\\\"1.0\\\" dllname=\\\"\\\" ><algid val=\\\"SHA1\\\" sm2_hashalg=\\\"sm3\\\"/></lib><lib type=\\\"SKF\\\" version=\\\"1.1\\\" dllname=\\\"SERfR01DQUlTLmRsbA==\\\" ><algid val=\\\"SHA1\\\" sm2_hashalg=\\\"sm3\\\"/></lib><lib type=\\\"SKF\\\" version=\\\"1.1\\\" dllname=\\\"U2h1dHRsZUNzcDExXzMwMDBHTS5kbGw=\\\" ><algid val=\\\"SHA1\\\" sm2_hashalg=\\\"sm3\\\"/></lib><lib type=\\\"SKF\\\" version=\\\"1.1\\\" dllname=\\\"U0tGQVBJLmRsbA==\\\" ><algid val=\\\"SHA1\\\" sm2_hashalg=\\\"sm3\\\"/></lib></liblist></authinfo>\";\r\n                    this.JITDSignOcx.Initialize(InitParam);\r\n                    if (this.JITDSignOcx.GetErrorCode() != 0) {\r\n                        loading.close()\r\n                        this.msg(\"初始化失败，错误码：\" + this.JITDSignOcx.GetErrorCode() + \" 错误信息：\" + this.JITDSignOcx.GetErrorMessage(this.JITDSignOcx.GetErrorCode()))\r\n                        this.JITDSignOcx.Finalize();\r\n\r\n                        return false;\r\n                    }\r\n                    //控制证书为一个时，不弹出证书选择框\r\n                    this.JITDSignOcx.SetCertChooseType(1);\r\n                    this.JITDSignOcx.SetCert(\"SC\", \"\", \"\", \"\", \"\", \"\");\r\n                    if (this.JITDSignOcx.GetErrorCode() != 0) {\r\n                        loading.close()\r\n                        this.msg(\"错误码：\" + this.JITDSignOcx.GetErrorCode() + \"　错误信息：\" + this.JITDSignOcx.GetErrorMessage(this.JITDSignOcx.GetErrorCode()))\r\n                        this.JITDSignOcx.Finalize();\r\n\r\n                        return false;\r\n                    } else {\r\n                        let temp_DSign_Result = this.JITDSignOcx.DetachSignStr(\"\", \"ygnet\");\r\n                        if (this.JITDSignOcx.GetErrorCode() != 0) {\r\n                            loading.close()\r\n                            this.msg(\"错误码：\" + JITDSignOcx.GetErrorCode() + \"　错误信息：\" + this.JITDSignOcx.GetErrorMessage(this.JITDSignOcx.GetErrorCode()));\r\n                            this.JITDSignOcx.Finalize();\r\n\r\n                            return false;\r\n                        }\r\n                        this.JITDSignOcx.Finalize();\r\n                        this.pkiForm.code=temp_DSign_Result;\r\n                    }\r\n                    loading.close()\r\n                    return false;\r\n                } catch (e) {\r\n                    loading.close()\r\n                    this.msg('PKI证书驱动存在问题、无法获取PKI证书。\\n浏览器不兼容证书登录:\\n');\r\n\r\n                }\r\n            }\r\n\r\n        }\r\n    };\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n    .loginPage{\r\n        position: relative;\r\n        width: 100%;\r\n        height: 100%;\r\n        background: url(\"../../../public/img/loginbg.png\")no-repeat;\r\n        background-size:100% 100%;\r\n        overflow: hidden;\r\n        .login_box{\r\n            position: absolute;\r\n            top: 50%;\r\n            left: 50%;\r\n            height: 30%;\r\n            width: 50%;\r\n            min-width: 600px;\r\n            margin: -15% 0 0 -25%;\r\n            .login_img{\r\n                text-align: center;\r\n            }\r\n        }\r\n        .login_title{\r\n            text-align: center;\r\n            font-size: 28px;\r\n            color: #fff;\r\n            font-weight: bold;\r\n            text-shadow: 1px 4px 2px #303133;\r\n        }\r\n        .box_style{\r\n            width: 300px;\r\n            margin: 0 auto;\r\n            margin-top: 20px;\r\n        }\r\n        .el-form-item__content {\r\n           opacity: 0.7;\r\n        }\r\n       .el-input__inner {\r\n            height: 38px;\r\n            line-height: 38px;\r\n            background-color: #040f64 !important;\r\n            color: #fff;\r\n            border:1px solid #040f64;\r\n        }\r\n        .el-form-item.is-success .el-input__inner{\r\n            border-color: #409eff !important;\r\n        }\r\n        .el-form-item.is-success .el-input__validateIcon {\r\n            color: #409eff !important;\r\n        }\r\n        .el-textarea__inner, .el-form-item.is-success .el-textarea__inner:focus {\r\n            border-color: #409eff;\r\n        }\r\n        .icon_style{\r\n            color:#00a0e9;\r\n        }\r\n        .login_btnbox{\r\n            width:70%;\r\n            margin: auto;\r\n            margin-top: 20px;\r\n        }\r\n        .login_btn{\r\n            display: flex;\r\n            .login-submit{\r\n                margin: auto;\r\n            }\r\n            .login-submit:hover{\r\n               color: #1867cf;\r\n                background: -webkit-linear-gradient(left, #49c8fe, #49c8fe);\r\n                font-weight: bold;\r\n            }\r\n        }\r\n        .el-button--small {\r\n            font-size: 12px;\r\n            border-radius: 36px;\r\n            width: 200px;\r\n            height: 35px;\r\n            font-size: 16px;\r\n            border: 1px solid #09b8fb;\r\n            background: -webkit-linear-gradient(left, #49c8fe, #1867cf);\r\n        }\r\n        .hint{\r\n            text-align: center;\r\n            font-size: 14px;\r\n            margin-top: 50px;\r\n            .dawnload{\r\n                display: inline-block;\r\n                color:#fff;\r\n            }\r\n        }\r\n    }\r\n</style>\r\n"]}]}