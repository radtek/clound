{"remainingRequest":"E:\\intellij work\\micro-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\intellij work\\micro-ui\\src\\page\\login\\codelogin.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\intellij work\\micro-ui\\src\\page\\login\\codelogin.vue","mtime":1551167423417},{"path":"E:\\intellij work\\micro-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\intellij work\\micro-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\intellij work\\micro-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\intellij work\\micro-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nconst MSGINIT = \"发送验证码\",\n  MSGSCUCCESS = \"${time}秒后重发\",\n  MSGTIME = 60;\nimport { isvalidatemobile } from \"@/util/validate\";\nimport { mapGetters } from \"vuex\";\nimport request from '@/router/axios'\nexport default {\n  name: \"codelogin\",\n  data () {\n    const validatePhone = (rule, value, callback) => {\n      if (isvalidatemobile(value)[0]) {\n        callback(new Error(isvalidatemobile(value)[1]));\n      } else {\n        callback();\n      }\n    };\n    const validateCode = (rule, value, callback) => {\n      if (value.length != 4) {\n        callback(new Error(\"请输入4位数的验证码\"));\n      } else {\n        callback();\n      }\n    };\n    return {\n      msgText: MSGINIT,\n      msgTime: MSGTIME,\n      msgKey: false,\n      loginForm: {\n          mobile: '',\n          code: ''\n      },\n      loginRules: {\n          mobile: [{ required: true, trigger: 'blur', validator: validatePhone }],\n          code: [{ required: true, trigger: 'blur', validator: validateCode }]\n      }\n    };\n  },\n  created () { },\n  mounted () { },\n  computed: {\n    ...mapGetters([\"tagWel\"])\n  },\n  props: [],\n  methods: {\n    handleSend() {\n          if (this.msgKey) return\n\n          request({\n              url: '/admin/mobile/' + this.loginForm.mobile,\n              method: 'get'\n          }).then(response => {\n              if (response.data.data) {\n                  this.$message.success('验证码发送成功')\n              } else {\n                  this.$message.error(response.data.msg)\n              }\n          })\n\n          this.msgText = MSGSCUCCESS.replace('${time}', this.msgTime)\n          this.msgKey = true\n          const time = setInterval(() => {\n              this.msgTime--\n              this.msgText = MSGSCUCCESS.replace('${time}', this.msgTime)\n              if (this.msgTime == 0) {\n                  this.msgTime = MSGTIME\n                  this.msgText = MSGINIT\n                  this.msgKey = false\n                  clearInterval(time)\n              }\n          }, 1000)\n      },\n    handleLogin () {\n      this.$refs.loginForm.validate(valid => {\n        if (valid) {\n          this.$store.dispatch(\"LoginByPhone\", this.loginForm).then(() => {\n            this.$router.push({ path: this.tagWel.value });\n          });\n        }\n      });\n    }\n  }\n};\n",{"version":3,"sources":["codelogin.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"codelogin.vue","sourceRoot":"src/page/login","sourcesContent":["<template>\n  <el-form class=\"login-form\"\n           status-icon\n           :rules=\"loginRules\"\n           ref=\"loginForm\"\n           :model=\"loginForm\"\n           label-width=\"0\">\n    <el-form-item prop=\"phone\">\n      <el-input size=\"small\"\n                @keyup.enter.native=\"handleLogin\"\n                v-model=\"loginForm.mobile\"\n                auto-complete=\"off\"\n                placeholder=\"请输入手机号码\">\n        <i slot=\"prefix\"\n           class=\"icon-shouji\"></i>\n      </el-input>\n    </el-form-item>\n    <el-form-item prop=\"code\">\n      <el-input size=\"small\"\n                @keyup.enter.native=\"handleLogin\"\n                v-model=\"loginForm.code\"\n                auto-complete=\"off\"\n                placeholder=\"请输入验证码\">\n        <i slot=\"prefix\"\n           class=\"icon-yanzhengma\"\n           style=\"margin-top:6px;\"></i>\n        <template slot=\"append\">\n          <span @click=\"handleSend\"\n                class=\"msg-text\"\n                :class=\"[{display:msgKey}]\">{{msgText}}</span>\n        </template>\n      </el-input>\n    </el-form-item>\n    <el-form-item>\n      <el-button size=\"small\"\n                 type=\"primary\"\n                 @click.native.prevent=\"handleLogin\"\n                 class=\"login-submit\">登录</el-button>\n    </el-form-item>\n  </el-form>\n</template>\n\n<script>\nconst MSGINIT = \"发送验证码\",\n  MSGSCUCCESS = \"${time}秒后重发\",\n  MSGTIME = 60;\nimport { isvalidatemobile } from \"@/util/validate\";\nimport { mapGetters } from \"vuex\";\nimport request from '@/router/axios'\nexport default {\n  name: \"codelogin\",\n  data () {\n    const validatePhone = (rule, value, callback) => {\n      if (isvalidatemobile(value)[0]) {\n        callback(new Error(isvalidatemobile(value)[1]));\n      } else {\n        callback();\n      }\n    };\n    const validateCode = (rule, value, callback) => {\n      if (value.length != 4) {\n        callback(new Error(\"请输入4位数的验证码\"));\n      } else {\n        callback();\n      }\n    };\n    return {\n      msgText: MSGINIT,\n      msgTime: MSGTIME,\n      msgKey: false,\n      loginForm: {\n          mobile: '',\n          code: ''\n      },\n      loginRules: {\n          mobile: [{ required: true, trigger: 'blur', validator: validatePhone }],\n          code: [{ required: true, trigger: 'blur', validator: validateCode }]\n      }\n    };\n  },\n  created () { },\n  mounted () { },\n  computed: {\n    ...mapGetters([\"tagWel\"])\n  },\n  props: [],\n  methods: {\n    handleSend() {\n          if (this.msgKey) return\n\n          request({\n              url: '/admin/mobile/' + this.loginForm.mobile,\n              method: 'get'\n          }).then(response => {\n              if (response.data.data) {\n                  this.$message.success('验证码发送成功')\n              } else {\n                  this.$message.error(response.data.msg)\n              }\n          })\n\n          this.msgText = MSGSCUCCESS.replace('${time}', this.msgTime)\n          this.msgKey = true\n          const time = setInterval(() => {\n              this.msgTime--\n              this.msgText = MSGSCUCCESS.replace('${time}', this.msgTime)\n              if (this.msgTime == 0) {\n                  this.msgTime = MSGTIME\n                  this.msgText = MSGINIT\n                  this.msgKey = false\n                  clearInterval(time)\n              }\n          }, 1000)\n      },\n    handleLogin () {\n      this.$refs.loginForm.validate(valid => {\n        if (valid) {\n          this.$store.dispatch(\"LoginByPhone\", this.loginForm).then(() => {\n            this.$router.push({ path: this.tagWel.value });\n          });\n        }\n      });\n    }\n  }\n};\n</script>\n\n<style>\n.msg-text {\n  display: block;\n  width: 60px;\n  font-size: 12px;\n  text-align: center;\n  cursor: pointer;\n}\n.msg-text.display {\n  color: #ccc;\n}\n</style>\n"]}]}