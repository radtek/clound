{"remainingRequest":"E:\\intellij work\\micro-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\intellij work\\micro-ui\\src\\views\\admin\\menu\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\intellij work\\micro-ui\\src\\views\\admin\\menu\\index.vue","mtime":1554773148045},{"path":"E:\\intellij work\\micro-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\intellij work\\micro-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\intellij work\\micro-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\intellij work\\micro-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {addObj, delObj, fetchMenuTree, getObj, putObj} from '@/api/admin/menu'\nimport {mapGetters} from 'vuex'\nimport {tableOption} from '@/const/crud/admin/menu';\nexport default {\n  name: 'menu',\n  data() {\n    return {\n      list: null,\n      total: null,\n      formEdit: true,\n      formAdd: true,\n      option: tableOption,\n        listLoading: true,\n      listQuery: {\n        name: undefined\n      },\n      checkedKeys:[],\n      treeData: [],\n      dicTreeData:[],\n      form: {\n        menuId:''\n      },\n      dicTreeProps: {\n        label: \"name\",\n        value: 'id'\n      },\n      menuManager_btn_add: false,\n      menuManager_btn_edit: false,\n      menuManager_btn_del: false\n    }\n  },\n  created() {\n    this.getList()\n      this.getDicTreeData()\n    this.menuManager_btn_add = this.permissions['sys_menu_add']\n    this.menuManager_btn_edit = this.permissions['sys_menu_edit']\n    this.menuManager_btn_del = this.permissions['sys_menu_del']\n  },\n  computed: {\n    ...mapGetters([\n      'elements',\n      'permissions'\n    ])\n  },\n  methods: {\n    getList() {\n        this.listLoading = true\n      fetchMenuTree(this.listQuery).then(response => {\n        this.treeData = response.data.data\n          this.listLoading = false\n      })\n    },\n    getDicTreeData(){\n        if(this.treeData){\n            fetchMenuTree().then(response => {\n                this.dicTreeData=response.data.data\n            })\n        }\n\n    },\n    handleAdd: function () {\n\n      this.form={}\n      this.$refs.crud.rowAdd()\n    },\n    handAdd: function (row) {\n      this.form.parentId=row.id\n      this.option.column[1].valueDefault = this.form.parentId\n      this.$refs.crud.rowAdd()\n    },\n    handleEdit(row, index) {\n      this.$refs.crud.rowEdit(row, index)\n    },\n\n    handleDelete(row) {\n      this.$confirm('此操作将永久删除, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        delObj(row.id).then(() => {\n          this.getList()\n          this.getDicTreeData()\n          this.$notify({\n            title: '成功',\n            message: '删除成功',\n            type: 'success',\n            duration: 2000\n          })\n        })\n      })\n    },\n    handleUpdate(row, index, done, loading) {\n      this.form.menuId=row.id\n      putObj(this.form).then(() => {\n        this.getList()\n        this.getDicTreeData()\n        done();\n        this.$notify({\n          title: '成功',\n          message: '更新成功',\n          type: 'success',\n          duration: 2000\n        })\n      }).catch(() => {\n        loading();\n      });\n    },\n    handleSave(row, done, loading) {\n      addObj(this.form).then(() => {\n        this.getList()\n        this.getDicTreeData()\n        done();\n        this.$notify({\n          title: '成功',\n          message: '创建成功',\n          type: 'success',\n          duration: 2000\n        }).catch(() => {\n          loading();\n        });\n      })\n    } ,handleFilter(param) {\n      this.listQuery.name=param.name\n      this.getList();\n    }\n\n  },\n\n  watch:{\n    'form.type'(){\n      if(this.form.type==='1'){\n        this.option.column[6].rules[0].required=false;\n        this.option.column[7].rules[0].required=false;\n      }else{\n        this.option.column[6].rules[0].required=true;\n        this.option.column[7].rules[0].required=true;\n      }\n    }\n  }\n\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"index.vue","sourceRoot":"src/views/admin/menu","sourcesContent":["<template>\n  <div class=\"app-container calendar-list-container\">\n    <basic-container>\n\n\n      <avue-crud  :option=\"option\"  ref=\"crud\" :data=\"treeData\"\n                  @search-change=\"handleFilter\"\n                  @refresh-change=\"handleFilter\"\n                  @row-update=\"handleUpdate\"\n                  @row-save=\"handleSave\"\n                  :table-loading=\"listLoading\"\n                  v-model=\"form\"\n      >\n        <template slot=\"menuLeft\">\n          <el-button type=\"primary\"\n                     @click=\"handleAdd\"\n                     size=\"small\"\n                     v-if=\"menuManager_btn_add\">新 增</el-button>\n        </template>\n        <template slot=\"icon\" slot-scope=\"scope\">\n          <i v-if=\"scope.row.icon\" :class=\"scope.row.icon\" style=\"font-size:24px\"></i>\n        </template>\n\n        <template slot=\"parentIdForm\" slot-scope=\"scope\">\n          <avue-input v-model=\"form.parentId\"\n                      type=\"tree\"\n                      placeholder=\"父级菜单\"\n                      :dic=\"dicTreeData\"\n                      :props=\"dicTreeProps\">\n          </avue-input>\n        </template>\n        <template slot=\"menu\"\n                  slot-scope=\"scope\" >\n          <el-button size=\"mini\"\n                     type=\"text\"\n                     icon=\"el-icon-plus\"\n                     v-if=\"menuManager_btn_add\"\n                     @click=\"handAdd(scope.row)\">添加子级\n          </el-button>\n            <el-button size=\"mini\"\n                       type=\"text\"\n                       icon=\"el-icon-edit\"\n                       v-if=\"menuManager_btn_edit\"\n                       @click=\"handleEdit(scope.row,scope.index)\">编辑\n            </el-button>\n            <el-button size=\"mini\"\n                       type=\"text\"\n                       icon=\"el-icon-delete\"\n                       v-if=\"menuManager_btn_del\"\n                       @click=\"handleDelete(scope.row)\">删除\n            </el-button>\n\n        </template>\n      </avue-crud>\n\n\n    </basic-container>\n  </div>\n</template>\n\n<script>\n  import {addObj, delObj, fetchMenuTree, getObj, putObj} from '@/api/admin/menu'\n  import {mapGetters} from 'vuex'\n  import {tableOption} from '@/const/crud/admin/menu';\n  export default {\n    name: 'menu',\n    data() {\n      return {\n        list: null,\n        total: null,\n        formEdit: true,\n        formAdd: true,\n        option: tableOption,\n          listLoading: true,\n        listQuery: {\n          name: undefined\n        },\n        checkedKeys:[],\n        treeData: [],\n        dicTreeData:[],\n        form: {\n          menuId:''\n        },\n        dicTreeProps: {\n          label: \"name\",\n          value: 'id'\n        },\n        menuManager_btn_add: false,\n        menuManager_btn_edit: false,\n        menuManager_btn_del: false\n      }\n    },\n    created() {\n      this.getList()\n        this.getDicTreeData()\n      this.menuManager_btn_add = this.permissions['sys_menu_add']\n      this.menuManager_btn_edit = this.permissions['sys_menu_edit']\n      this.menuManager_btn_del = this.permissions['sys_menu_del']\n    },\n    computed: {\n      ...mapGetters([\n        'elements',\n        'permissions'\n      ])\n    },\n    methods: {\n      getList() {\n          this.listLoading = true\n        fetchMenuTree(this.listQuery).then(response => {\n          this.treeData = response.data.data\n            this.listLoading = false\n        })\n      },\n      getDicTreeData(){\n          if(this.treeData){\n              fetchMenuTree().then(response => {\n                  this.dicTreeData=response.data.data\n              })\n          }\n\n      },\n      handleAdd: function () {\n\n        this.form={}\n        this.$refs.crud.rowAdd()\n      },\n      handAdd: function (row) {\n        this.form.parentId=row.id\n        this.option.column[1].valueDefault = this.form.parentId\n        this.$refs.crud.rowAdd()\n      },\n      handleEdit(row, index) {\n        this.$refs.crud.rowEdit(row, index)\n      },\n\n      handleDelete(row) {\n        this.$confirm('此操作将永久删除, 是否继续?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(() => {\n          delObj(row.id).then(() => {\n            this.getList()\n            this.getDicTreeData()\n            this.$notify({\n              title: '成功',\n              message: '删除成功',\n              type: 'success',\n              duration: 2000\n            })\n          })\n        })\n      },\n      handleUpdate(row, index, done, loading) {\n        this.form.menuId=row.id\n        putObj(this.form).then(() => {\n          this.getList()\n          this.getDicTreeData()\n          done();\n          this.$notify({\n            title: '成功',\n            message: '更新成功',\n            type: 'success',\n            duration: 2000\n          })\n        }).catch(() => {\n          loading();\n        });\n      },\n      handleSave(row, done, loading) {\n        addObj(this.form).then(() => {\n          this.getList()\n          this.getDicTreeData()\n          done();\n          this.$notify({\n            title: '成功',\n            message: '创建成功',\n            type: 'success',\n            duration: 2000\n          }).catch(() => {\n            loading();\n          });\n        })\n      } ,handleFilter(param) {\n        this.listQuery.name=param.name\n        this.getList();\n      }\n\n    },\n\n    watch:{\n      'form.type'(){\n        if(this.form.type==='1'){\n          this.option.column[6].rules[0].required=false;\n          this.option.column[7].rules[0].required=false;\n        }else{\n          this.option.column[6].rules[0].required=true;\n          this.option.column[7].rules[0].required=true;\n        }\n      }\n    }\n\n  }\n</script>\n\n"]}]}