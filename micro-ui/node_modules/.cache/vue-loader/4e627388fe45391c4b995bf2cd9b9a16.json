{"remainingRequest":"G:\\intellij work\\micro-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\intellij work\\micro-ui\\src\\components\\iframe\\main.vue?vue&type=script&lang=js&","dependencies":[{"path":"G:\\intellij work\\micro-ui\\src\\components\\iframe\\main.vue","mtime":1551167423552},{"path":"G:\\intellij work\\micro-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\intellij work\\micro-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"G:\\intellij work\\micro-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\intellij work\\micro-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapGetters } from 'vuex'\nimport NProgress from 'nprogress' // progress bar\nimport 'nprogress/nprogress.css' // progress bar style\nexport default {\n  name: 'AvueIframe',\n  data () {\n    return {\n      urlPath: this.getUrlPath() //iframe src 路径\n    }\n  },\n  created () {\n    NProgress.configure({ showSpinner: false })\n  },\n  mounted () {\n    this.load()\n    this.resize()\n  },\n  props: ['routerPath'],\n  watch: {\n    $route: function () {\n      this.load()\n    },\n    routerPath: function () {\n      // 监听routerPath变化，改变src路径\n      this.urlPath = this.getUrlPath()\n    }\n  },\n  components: {\n    ...mapGetters(['screen']),\n  },\n  methods: {\n    // 显示等待框\n    show () {\n      NProgress.start()\n    },\n    // 隐藏等待狂\n    hide () {\n      NProgress.done()\n    },\n    // 加载浏览器窗口变化自适应\n    resize () {\n      window.onresize = () => {\n        this.iframeInit()\n      }\n    },\n    // 加载组件\n    load () {\n      this.show()\n      var flag = true //URL是否包含问号\n      if (this.$route.query.src.indexOf('?') == -1) {\n        flag = false\n      }\n      var list = []\n      for (var key in this.$route.query) {\n        if (key != 'src' && key != 'name') {\n          list.push(`${key}= this.$route.query[key]`)\n        }\n      }\n      list = list.join('&').toString()\n      if (flag) {\n        this.$route.query.src = `${this.$route.query.src}${\n          list.length > 0 ? `&list` : ''\n          }`\n      } else {\n        this.$route.query.src = `${this.$route.query.src}${\n          list.length > 0 ? `?list` : ''\n          }`\n      }\n      //超时5s自动隐藏等待框，加强用户体验\n      let time = 5\n      const timeFunc = setInterval(() => {\n        time--\n        if (time == 0) {\n          this.hide()\n          clearInterval(timeFunc)\n        }\n      }, 1000)\n      this.iframeInit()\n    },\n    //iframe窗口初始化\n    iframeInit () {\n      const iframe = this.$refs.iframe\n      const clientHeight = document.documentElement.clientHeight - (screen > 1 ? 200 : 130);\n      iframe.style.height = `${clientHeight}px`\n      if (iframe.attachEvent) {\n        iframe.attachEvent('onload', () => {\n          this.hide()\n        })\n      } else {\n        iframe.onload = () => {\n          this.hide()\n        }\n      }\n    },\n    getUrlPath: function () {\n      //获取 iframe src 路径\n      let url = window.location.href\n      url = url.replace('/myiframe', '')\n      return url\n    }\n  }\n}\n",{"version":3,"sources":["main.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"main.vue","sourceRoot":"src/components/iframe","sourcesContent":["<template>\n  <div>\n    <basic-container>\n      <iframe v-if=\"$route.query.src\"\n              :src='$route.query.src'\n              class=\"iframe\"\n              ref=\"iframe\"></iframe>\n      <iframe v-else\n              :src=\"urlPath\"\n              class=\"iframe\"\n              ref=\"iframe\"></iframe>\n    </basic-container>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\nimport NProgress from 'nprogress' // progress bar\nimport 'nprogress/nprogress.css' // progress bar style\nexport default {\n  name: 'AvueIframe',\n  data () {\n    return {\n      urlPath: this.getUrlPath() //iframe src 路径\n    }\n  },\n  created () {\n    NProgress.configure({ showSpinner: false })\n  },\n  mounted () {\n    this.load()\n    this.resize()\n  },\n  props: ['routerPath'],\n  watch: {\n    $route: function () {\n      this.load()\n    },\n    routerPath: function () {\n      // 监听routerPath变化，改变src路径\n      this.urlPath = this.getUrlPath()\n    }\n  },\n  components: {\n    ...mapGetters(['screen']),\n  },\n  methods: {\n    // 显示等待框\n    show () {\n      NProgress.start()\n    },\n    // 隐藏等待狂\n    hide () {\n      NProgress.done()\n    },\n    // 加载浏览器窗口变化自适应\n    resize () {\n      window.onresize = () => {\n        this.iframeInit()\n      }\n    },\n    // 加载组件\n    load () {\n      this.show()\n      var flag = true //URL是否包含问号\n      if (this.$route.query.src.indexOf('?') == -1) {\n        flag = false\n      }\n      var list = []\n      for (var key in this.$route.query) {\n        if (key != 'src' && key != 'name') {\n          list.push(`${key}= this.$route.query[key]`)\n        }\n      }\n      list = list.join('&').toString()\n      if (flag) {\n        this.$route.query.src = `${this.$route.query.src}${\n          list.length > 0 ? `&list` : ''\n          }`\n      } else {\n        this.$route.query.src = `${this.$route.query.src}${\n          list.length > 0 ? `?list` : ''\n          }`\n      }\n      //超时5s自动隐藏等待框，加强用户体验\n      let time = 5\n      const timeFunc = setInterval(() => {\n        time--\n        if (time == 0) {\n          this.hide()\n          clearInterval(timeFunc)\n        }\n      }, 1000)\n      this.iframeInit()\n    },\n    //iframe窗口初始化\n    iframeInit () {\n      const iframe = this.$refs.iframe\n      const clientHeight = document.documentElement.clientHeight - (screen > 1 ? 200 : 130);\n      iframe.style.height = `${clientHeight}px`\n      if (iframe.attachEvent) {\n        iframe.attachEvent('onload', () => {\n          this.hide()\n        })\n      } else {\n        iframe.onload = () => {\n          this.hide()\n        }\n      }\n    },\n    getUrlPath: function () {\n      //获取 iframe src 路径\n      let url = window.location.href\n      url = url.replace('/myiframe', '')\n      return url\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.iframe {\n  width: 100%;\n  height: 100%;\n  border: 0;\n  overflow: hidden;\n  box-sizing: border-box;\n}\n</style>"]}]}